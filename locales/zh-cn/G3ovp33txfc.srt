1
00:00:00,119 --> 00:00:04,227
学生 Kevin Troy 提问 我们在这单元中已经看到

2
00:00:04,227 --> 00:00:06,385
使用导入 (import) time 取得时钟的时间

3
00:00:06,386 --> 00:00:09,621
你可以谈谈程序库 (library) 的基础知识吗？

4
00:00:09,621 --> 00:00:11,188
它们是什么 以及它们如何工作等等

5
00:00:11,188 --> 00:00:13,121
好 这个问题很好

6
00:00:13,121 --> 00:00:15,548
我认为我并没有在使用时 解释发生了什么事

7
00:00:15,548 --> 00:00:19,129
导入 (import) 做的事 只是把程序库带到你的执行环境

8
00:00:19,129 --> 00:00:22,241
所以你可以有一个程序库

9
00:00:22,242 --> 00:00:25,042
可以定义不同的变量 定义函数

10
00:00:25,042 --> 00:00:27,375
定义你自己在 Python 代码会定义的任何东西

11
00:00:27,376 --> 00:00:29,459
当你导入 (import) 它时

12
00:00:29,458 --> 00:00:32,167
你可以取得所有这一切 但它不在你自己的文件中

13
00:00:32,167 --> 00:00:34,365
程序库真的很有用

14
00:00:34,365 --> 00:00:36,710
它限制了你要处理的文件大小

15
00:00:36,710 --> 00:00:39,009
它保护了命名空间

16
00:00:39,009 --> 00:00:40,682
所以任何代码 被定义为标准程序库的一部分

17
00:00:40,682 --> 00:00:43,210
你总是可以运用它们

18
00:00:43,210 --> 00:00:45,108
你根本不需要导入 (import) 它

19
00:00:45,107 --> 00:00:47,434
有一些名称 你必须小心使用

20
00:00:47,435 --> 00:00:48,765
因为他们已经有了

21
00:00:48,765 --> 00:00:50,280
其他已经预先定义的含义

22
00:00:50,280 --> 00:00:52,330
所以程序库真的很有用 你可以制作自己的程序库

23
00:00:52,331 --> 00:00:54,978
我们在 CS101 不会谈及这部分

24
00:00:54,978 --> 00:00:57,050
但随着你开始构建更大的程序

25
00:00:57,049 --> 00:00:59,266
你如何架构你的程序 真的非常重要

26
00:00:59,267 --> 00:01:01,796
所以最后你不会得到一个巨大的文件

27
00:01:01,795 --> 00:01:03,935
有许多的代码 没有人能了解

28
00:01:03,935 --> 00:01:06,248
里面到底做了些什么

29
00:01:06,248 --> 00:01:08,134
所以程序库是一个非常有用的方式