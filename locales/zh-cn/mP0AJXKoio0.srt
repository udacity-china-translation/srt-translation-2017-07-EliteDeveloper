1
00:00:00,490 --> 00:00:03,090
接下来我想介绍关于字符串的另一项操作

2
00:00:03,090 --> 00:00:05,930
这项操作非常实用 它就是 find 运算

3
00:00:05,930 --> 00:00:08,980
它可以帮助我们在一个大字符串中找到我们想要的某一个子字符串 

4
00:00:08,980 --> 00:00:12,770
我们操作 find 的方式与目前我们操作其他运算符的方式稍有不同 

5
00:00:12,770 --> 00:00:15,910
因为 find 实际上是一种方法 

6
00:00:15,910 --> 00:00:18,320
由 Python 提供的一个内置程序 (procedure)

7
00:00:18,320 --> 00:00:21,430
我们很快就能自己定义自己的程序 (procedure)

8
00:00:21,430 --> 00:00:25,860
在第二单元会学习这部分内容 

9
00:00:25,860 --> 00:00:29,630
find 是对字符串进行操作的一个程序 

10
00:00:29,630 --> 00:00:32,189
因此使用的时候是在一个字符串之后加上 .find 

11
00:00:32,189 --> 00:00:34,500
再之后是括号 然后是另一个字符串 

12
00:00:36,570 --> 00:00:38,700
这个字符串就是我们想要在第一个字符串中找到的那个字符串 

13
00:00:38,700 --> 00:00:41,330
find 输出的是 

14
00:00:41,330 --> 00:00:46,550
子字符串在字符串中的位置 

15
00:00:46,550 --> 00:00:49,720
是子字符串第一次出现的位置

16
00:00:49,720 --> 00:00:52,290
因此 如果该字符串在输入字符串中出现多次 

17
00:00:52,290 --> 00:00:54,380
find 输出的结果将始终

18
00:00:54,380 --> 00:00:57,900
是子字符串第一次出现的那个位置的数字 

19
00:00:57,900 --> 00:01:01,630
因此使用 find 输出的是

20
00:01:01,630 --> 00:01:04,060
在搜索字符串中出现的第一个位置 

21
00:01:04,060 --> 00:01:07,390
就是这里的这个蓝色的字符串 

22
00:01:07,390 --> 00:01:10,520
它就是目标字符串出现的位置 目标字符串是紫色的 

23
00:01:10,520 --> 00:01:14,200
因此 find 输出的是一个数字 

24
00:01:14,200 --> 00:01:16,760
如果在搜索字符串中没有发现目标字符串 

25
00:01:16,760 --> 00:01:19,140
则输出结果显示的是 -1 下面来试几个例子帮助我们理解 find 具体是怎么运作的 

26
00:01:19,140 --> 00:01:21,970
我们在 Python 解释器中进行操作 

27
00:01:21,970 --> 00:01:27,210
这里 我已经设置了初始变量 Pythagoras 

28
00:01:27,210 --> 00:01:29,360
使变量 Pythagoras 等于这里列出的字符串 他是否真的说过这句话我们并不知晓 

29
00:01:29,360 --> 00:01:32,190
但这句话是 there's a geometry in the humming of strings, 

30
00:01:32,190 --> 00:01:34,930
there is music in the spacing of spheres 

31
00:01:34,930 --> 00:01:39,100
现在 我们已经初始化了变量 

32
00:01:39,100 --> 00:01:43,710
接下来我要调用 find 来进行操作 

33
00:01:43,710 --> 00:01:45,970
将 Pythagoras 作为我们用于进行搜索的字符串 

34
00:01:45,970 --> 00:01:48,800
Pythagoras 的值是用刚刚提到的字符串进行初始化设定 

35
00:01:48,800 --> 00:01:52,290
输入要搜索的字符串 string 字符串 

36
00:01:52,290 --> 00:01:59,450
运行之后 我们得到的结果是40 如果我们数一下的话 这是初始位置0 

37
00:01:59,450 --> 00:02:02,600
我们将会看到 string 开始于第40个位置 

38
00:02:02,600 --> 00:02:05,110
不过我不想数那么远 我们可以利用索引来看一下该位置是否正确 

39
00:02:05,110 --> 00:02:07,560
我们输出 Pythagoras 从第40个位置开始索引 

40
00:02:09,110 --> 00:02:11,880
我们可以用冒号输出

41
00:02:11,880 --> 00:02:14,980
从第40个到最后一个字符的所有内容 

42
00:02:14,980 --> 00:02:17,870
运行时 我们看到输出的内容是以 string 开头的 

43
00:02:17,870 --> 00:02:21,820
这正是我们用 find 查找到的内容 

44
00:02:21,820 --> 00:02:27,380
我们也可以查找其他位置 如果我们在 Pythagoras 中搜索单个字母 T 

45
00:02:27,380 --> 00:02:30,515
实际上在开头部分就会搜索到字母 T 因此我们发现起始位置0就是其所在位置 

46
00:02:30,515 --> 00:02:34,930
我们可以搜索 sphere 

47
00:02:34,930 --> 00:02:38,210
[无声音]

48
00:02:38,210 --> 00:02:41,565
运行之后将会在字符串末尾 第86个位置找到相匹配的 sphere 

49
00:02:41,565 --> 00:02:45,410
我们输出从第86个位置开始的字符串 

50
00:02:48,590 --> 00:02:53,130
我们会看到最终显示的字符串以 sphere 开头 

51
00:02:53,130 --> 00:02:57,470
如果查找的这个字符并未出现在 

52
00:02:57,470 --> 00:03:00,840
我们用于搜索的字符串中

53
00:03:00,840 --> 00:03:06,770
例如 我们搜索 algebra 这个字符串 该字符串并未出现在 Pythagoras 的引文中 

54
00:03:06,770 --> 00:03:09,800
运行之后我们得到 -1 这说明未查找到该字符串 
