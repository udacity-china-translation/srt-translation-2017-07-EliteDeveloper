1
00:00:00,000 --> 00:00:02,053
这里提供一种定义 add_page_to_index 的方法

2
00:00:02,053 --> 00:00:05,003
定义该过程 需要三次输入

3
00:00:05,003 --> 00:00:09,000
索引 URL 以及该网址的内容

4
00:00:09,000 --> 00:00:12,080
可以使用 split (分解) 来将内容分解成词

5
00:00:12,080 --> 00:00:14,087
将之存成变量 words

6
00:00:14,087 --> 00:00:19,021
接下来要做的是浏览所有词 并添加到索引

7
00:00:19,021 --> 00:00:21,025
可以使用 for 循环来完成

8
00:00:21,025 --> 00:00:24,057
浏览所有词 用 word 作为变量

9
00:00:24,057 --> 00:00:31,022
对于每个词 我们都使用 add_to_index 往索引中传入词及 URL

10
00:00:31,022 --> 00:00:35,019
请注意 如果一个词在同一页面多次出现

11
00:00:35,020 --> 00:00:37,053
那么 每次都要添加至索引中

12
00:00:37,052 --> 00:00:40,016
同一个 URL 可能在与该词有关的

13
00:00:40,017 --> 00:00:43,017
URL 列表中出现不只一次

14
00:00:43,017 --> 00:00:44,097
取决于我们对搜索引擎的要求

15
00:00:44,097 --> 00:00:48,002
以及响应查询的方法

16
00:00:48,002 --> 00:00:51,002
上述情况可能有利有弊 接下来的课程中我们会详细讨论

17
00:00:51,002 --> 00:00:55,015
我们在 Python 解释器中先试一下

18
00:00:55,015 --> 00:00:57,003
先看下已经写好的代码

19
00:00:57,003 --> 00:00:59,075
已经有 add_to_index 过程了

20
00:00:59,075 --> 00:01:02,075
索引里也包含了关键词和 URL

21
00:01:02,075 --> 00:01:04,082
浏览索引中的元素

22
00:01:04,081 --> 00:01:07,081
并将与关键词匹配的 URL 附加进元素中

23
00:01:07,081 --> 00:01:11,063
如果未查到 便在索引中添加新元素

24
00:01:11,063 --> 00:01:15,009
即关键词列表和单个 URL

25
00:01:15,010 --> 00:01:19,001
我们已经定义了包含索引和关键词的 lookup 过程

26
00:01:19,001 --> 00:01:22,031
在索引中寻找与关键词有关联的元素

27
00:01:22,031 --> 00:01:24,098
再返回包含该关键词的 URL

28
00:01:24,097 --> 00:01:28,081
现在 我们来对 add_page_to_index 过程进行定义

29
00:01:28,081 --> 00:01:32,085
我们将内容分解成词

30
00:01:32,084 --> 00:01:36,006
对这些词进行循环 并将每个词添加至索引

31
00:01:36,006 --> 00:01:38,009
请注意 我们不需要返回任何东西

32
00:01:38,009 --> 00:01:41,040
该过程的要点是修改索引

33
00:01:41,040 --> 00:01:45,046
现在 通过简单的例子来尝试 add_page_to_index 

34
00:01:45,046 --> 00:01:48,087
这里的测试之前我们用过了

35
00:01:48,087 --> 00:01:51,025
并获得了预期结果

36
00:01:51,025 --> 00:01:57,021
如将第一个引用添加至索引 会发现引号中有四个词

37
00:01:57,021 --> 00:02:02,028
每个都有与之相关的网页 即包含了 fake.test 的 URL 列表

38
00:02:02,028 --> 00:02:06,003
再添加第二个网页 第二次打印

39
00:02:06,003 --> 00:02:09,002
可以看到大部分在 fake.test 和 not.test 都出现的词

40
00:02:09,002 --> 00:02:13,002
其中不包括 not  因为它只出现在 not.test 里

41
00:02:13,002 --> 00:02:17,018
为了更加确定它的可行性 我们来看更多有趣的例子

42
00:02:17,019 --> 00:02:20,090
我们将添加网页至索引 网页可能是 dilbert.com

43
00:02:20,090 --> 00:02:23,078
引用来自史考特·亚当斯 (Scott Adams) 关于时间管理 (time management) 的内容

44
00:02:23,078 --> 00:02:27,024
“Another strategy is to ignore the fact that you're slowly killing yourself

45
00:02:27,024 --> 00:02:29,004
by not sleeping and exercising enough

46
00:02:29,004 --> 00:02:33,014
that frees up several hours a day, the only down side is that you get fat and die."

47
00:02:33,014 --> 00:02:36,040
希望各位同学不会有引用中的睡眠和运动不足的问题

48
00:02:36,040 --> 00:02:38,012
尽管工作繁忙

49
00:02:38,012 --> 00:02:41,074
但我们仍然需要进行时间管理 以保证充分的睡眠和运动

50
00:02:41,074 --> 00:02:48,000
添加至网页索引的第二个引用 是 randy.pousch 这个 URL

51
00:02:48,000 --> 00:02:49,092
引用内容是“良好判断力来自经验

52
00:02:49,092 --> 00:02:52,000
经验通过从错误的判断学习得到

53
00:02:52,000 --> 00:02:53,061
当你遇到很多问题

54
00:02:53,061 --> 00:02:56,018
意味着你可以学到很多经验 让你在未来做得更好”

55
00:02:56,018 --> 00:02:57,050
通过这门课 希望大家学有所成

56
00:02:57,050 --> 00:03:02,055
但即便不然 大家也可从中获益 打造更好的未来

57
00:03:02,055 --> 00:03:06,068
来看一下添加了两个网页后 索引的变化

58
00:03:06,068 --> 00:03:10,078
索引变得很大 因为这两个引用包含了很多词

59
00:03:10,078 --> 00:03:14,045
一些词只在 dilbert.com 中出现

60
00:03:14,045 --> 00:03:16,032
即只在史考特·亚当斯关于时间管理的引用中出现过

61
00:03:16,032 --> 00:03:18,095
另一些词则在两个网页都出现了

62
00:03:18,096 --> 00:03:22,045
查询一下会发现更多 我们来试一下

63
00:03:22,045 --> 00:03:27,052
我们用 lookup 来搜索 index 看看 you 一词在哪出现

64
00:03:27,052 --> 00:03:31,031
运行后发现 它在两个文件中都出现了

65
00:03:31,031 --> 00:03:35,097
它在 dilbert 的引用出现过两次 所以在 dilbert.com 的 URL 列表中也出现了两次

66
00:03:35,097 --> 00:03:39,002
在 randy.pausch 的 URL 中出现了一次

67
00:03:39,002 --> 00:03:46,046
来确认一下 该词在这个引用中出现两次 一次在这 另一次在这

68
00:03:46,045 --> 00:03:51,061
在第二个引用中出现在这里

69
00:03:51,062 --> 00:03:56,056
再看下另一个词 good 它在两个引用中均未出现

70
00:03:56,056 --> 00:03:58,061
但 bad 一词则在第二个引用中出现了

71
00:03:58,061 --> 00:04:01,081
看上去代码运行良好

72
00:04:01,080 --> 00:04:06,033
我们可以对添加进索引的词进行搜索 并找到该词的 URL 列表

73
00:04:06,033 --> 00:04:09,070
我们可以添加网页至索引

74
00:04:09,070 --> 00:04:13,074
也可以对网页上所有词的出现位置进行记录

75
00:04:13,074 --> 00:04:15,020
离我们建成搜索引擎的目标不远啦

76
00:04:15,020 --> 00:04:16,055
接着要做的事情之一

77
00:04:16,055 --> 00:04:20,002
就是将已经写好的抓取网页的代码

78
00:04:20,002 --> 00:04:24,038
与编写索引和寻找关键词的代码进行关联

79
00:04:24,038 --> 00:04:27,055
我们对抓取网页的代码学习已经过去一段时间了

80
00:04:27,055 --> 99:59:59,000
现在 让我们再次思考 应该如何将二者关联

