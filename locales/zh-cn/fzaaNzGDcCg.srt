1
00:00:00,000 --> 00:00:05,000
我们有一些代码 我们必须填写空白处 使得执行这个代码

2
00:00:05,000 --> 00:00:09,000
会印出列表 p 得到输出 [1,2,3]

3
00:00:09,000 --> 00:00:15,000
我们必须找到 p 的初始值 然后更新 p 的每个项目 一次而且只有一次

4
00:00:15,000 --> 00:00:19,000
虽然这是 p[0] 这是 p[0] 这是 p[0]

5
00:00:19,000 --> 00:00:23,000
但这是 p[0] 实际上和这 3 个的值不同

6
00:00:23,000 --> 00:00:25,000
如果加上标签 它能帮助我们了解

7
00:00:25,000 --> 00:00:33,000
我们称呼这是第一个 第二个 第一 第二

8
00:00:33,000 --> 00:00:36,000
和根据我们最后的值 我们知道

9
00:00:36,000 --> 00:00:42,000
这个方程序等于 1 这等于 2 而这一个等于 3

10
00:00:42,000 --> 00:00:46,000
让我们做一点代数 我要在旁边重写 使它更容易阅读

11
00:00:46,000 --> 00:00:48,000
只是这个等式中 没有我们可以做的事

12
00:00:48,000 --> 00:00:53,000
我们知道的是 p[0] 和 p[1] 的初始值加起来必须是 1

13
00:00:53,000 --> 00:00:55,000
我们得不到更具体的讯息

14
00:00:55,000 --> 00:00:58,000
不像第一个方程序 我们实际上可以将它简化一些

15
00:00:58,000 --> 00:01:02,000
请记住 我们知道每个项目最后的值

16
00:01:02,000 --> 00:01:09,000
事实上我们可以简化它 只说 1 加 p[2] 等于 2

17
00:01:09,000 --> 00:01:14,000
用了一点代数 我们知道是 p[2] 等于 1

18
00:01:14,000 --> 00:01:20,000
在最后一个等式 我们很快地看了一眼

19
00:01:20,000 --> 00:01:23,000
看到 p[0] 最后的值加 p[1] 最后的值等于 3

20
00:01:23,000 --> 00:01:28,000
嗯 最后的值是 1 和 2  所以我们要说 1 加 2 等于 3

21
00:01:28,000 --> 00:01:31,000
这对我们没什么帮助 我们学到了什么？

22
00:01:31,000 --> 00:01:34,000
我们知道最后的值是 1

23
00:01:34,000 --> 00:01:37,000
而且我们知道第一和第二值加起来是 1

24
00:01:37,000 --> 00:01:41,000
从这里 我们不能做任何事情 这是我们拥有的所有资讯

25
00:01:41,000 --> 00:01:47,000
只要我们满足这两个限制条件 这个项目加上这个项目等于 1

26
00:01:47,000 --> 00:01:49,000
然后 我们会得到正确答案

27
00:01:49,000 --> 00:01:52,000
两个范例的答案是 [1,0,1] 另一个同样有效的答案是 [-99,100,1]