1
00:00:00,322 --> 00:00:02,530
这是我们目前为止所做的 GridView 更改

2
00:00:02,529 --> 00:00:03,941
的演示

3
00:00:03,942 --> 00:00:06,400
我拉过小部件 并让它显示了

4
00:00:06,400 --> 00:00:07,990
GridView 版本

5
00:00:07,990 --> 00:00:10,960
但是你会注意到 如果我点击 GridView 小部件

6
00:00:10,960 --> 00:00:13,089
什么都不会发生

7
00:00:13,089 --> 00:00:14,646
那么 我们来讨论一下原因

8
00:00:14,646 --> 00:00:17,859
如果点击 GridView 小部件中的一盆植物

9
00:00:17,859 --> 00:00:20,379
能打开该植物的 DetailActivity 那就太好了

10
00:00:20,379 --> 00:00:23,589
就像小的单个植物小部件那样

11
00:00:23,589 --> 00:00:25,449
我们之前看到小部件中的点击事件

12
00:00:25,449 --> 00:00:28,239
仅通过 Pending Intent 处理

13
00:00:28,239 --> 00:00:30,789
但是 在 CollectionView 中

14
00:00:30,789 --> 00:00:33,009
对每个项设置 Pending Intent 代价高昂

15
00:00:33,009 --> 00:00:34,659
所以是不被允许的

16
00:00:34,659 --> 00:00:37,149
相反 你可以对 CollectionView

17
00:00:37,149 --> 00:00:39,140
设置一个 PendingIntentTemplate

18
00:00:39,140 --> 00:00:41,049
PendingIntentTemplate 可以

19
00:00:41,049 --> 00:00:42,669
让你指定在点击时

20
00:00:42,670 --> 00:00:44,200
你想让集合中的所有项

21
00:00:44,200 --> 00:00:45,970
启动的 Intent

22
00:00:45,969 --> 00:00:48,879
然后此模板应用于集合中的

23
00:00:48,880 --> 00:00:50,440
每个项

24
00:00:50,439 --> 00:00:53,619
但是你可以使用叫作 FillInIntent 的东西自定义

25
00:00:53,619 --> 00:00:55,780
每个单独的项

26
00:00:55,780 --> 00:00:58,600
FillInIntent 允许你向 PendingIntentTemplate 传递

27
00:00:58,600 --> 00:01:00,520
额外的数据

28
00:01:00,520 --> 00:01:02,680
这样一来 集合中的所有项

29
00:01:02,679 --> 00:01:04,870
都将启动相同的 Activity 但每个

30
00:01:04,870 --> 00:01:08,079 
会传递一个唯一的额外值 使启动的

31
00:01:08,079 --> 00:01:10,429
Intent 做出不同的反应

32
00:01:10,430 --> 00:01:13,450
这正是我们的 GridView 小部件所需的

33
00:01:13,450 --> 00:01:15,880
并且由于我们想让每个项在点击后

34
00:01:15,879 --> 00:01:18,849
打开自己的 DetailActivity 这堪称完美

35
00:01:18,849 --> 00:01:22,149
首先 在我们 provider 的 GetGardenRemoteView

36
00:01:22,150 --> 00:01:24,609
方法中 我们要设置启动植物 DetailActivity 的

37
00:01:24,609 --> 00:01:27,640
Pending Intent

38
00:01:27,640 --> 00:01:29,590
然后对整个 GridView 设置

39
00:01:29,590 --> 00:01:30,640
PendingIntentTemplate

40
00:01:33,310 --> 00:01:35,969
现在我们回到 RemoteViewService

41
00:01:35,969 --> 00:01:39,670
记住它位于这里的 GridWidgetService

42
00:01:39,670 --> 00:01:42,969
然后在 getViewAt 方法中 我们想创建一个 Intent

43
00:01:42,969 --> 00:01:45,489
并为每个单独的植物 ID 填写

44
00:01:45,489 --> 00:01:47,439
我们自己的自定义额外参数

45
00:01:47,439 --> 00:01:49,480
所以我们将创建一个 bundle

46
00:01:49,480 --> 00:01:52,000
使用 putLong 方法添加 ID

47
00:01:52,000 --> 00:01:54,310
然后创建一个 Intent 并使用 putExtras

48
00:01:54,310 --> 00:01:56,950
添加该 bundle 对象

49
00:01:56,950 --> 00:02:00,260
最后 要填写我们的 PendingIntentTemplate

50
00:02:00,260 --> 00:02:04,030
只需调用 setOnClickFillInIntent

51
00:02:04,030 --> 00:02:09,479
传入 widget_plant_image 与 fillInIntent

52
00:02:09,479 --> 00:02:10,479
完美

53
00:02:10,479 --> 00:02:12,640
完成这些更改后 我们再运行一次

54
00:02:12,639 --> 00:02:14,719
看看会是什么样

55
00:02:14,719 --> 00:02:17,919
现在当我点击 GridView 小部件中的这棵植物

56
00:02:17,919 --> 00:02:20,199
它会打开相同植物 ID 的

57
00:02:20,199 --> 00:02:22,589
正确 DetailActivity

