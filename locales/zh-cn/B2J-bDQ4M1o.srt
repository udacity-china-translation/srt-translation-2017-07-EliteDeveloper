1
00:00:00,000 --> 00:00:02,047
现在 数据结构决定好了

2
00:00:02,047 --> 00:00:06,015
希望能使我们构建索引的编码过程轻松些

3
00:00:06,014 --> 00:00:09,087
各位想必有足够的知识来编写

4
00:00:09,087 --> 00:00:10,090
为索引加入新元素的过程了

5
00:00:10,090 --> 00:00:13,020
本次练习的目标是

6
00:00:13,021 --> 00:00:16,007
定义程序 我们可以称之为 add_to_index

7
00:00:16,007 --> 00:00:17,012
包括三次输入

8
00:00:17,012 --> 00:00:22,021
第一次是输入我们希望添加新关键词和 URL 的索引

9
00:00:22,021 --> 00:00:25,045
请记住之前我们决定了

10
00:00:25,045 --> 00:00:27,085
表达索引的方式是与列表一样

11
00:00:27,085 --> 00:00:29,089
列表中的每个元素本身都是一个列表

12
00:00:29,088 --> 00:00:33,067
而每个元素列表都是一个关键词 后面是一列 URL

13
00:00:33,067 --> 00:00:35,084
这些 URL 中出现了该关键词

14
00:00:35,084 --> 00:00:38,036
第二次是输入关键词 这只是一个字符串

15
00:00:38,036 --> 00:00:41,073
我们希望将关键词加到索引里

16
00:00:41,073 --> 00:00:44,056
第三次则是输入 URL

17
00:00:44,057 --> 00:00:48,097
URL 被编码为出现关键词的字符串

18
00:00:48,097 --> 00:00:51,011
那么 添加索引所应完成的任务

19
00:00:51,011 --> 00:00:54,046
取决于传入关键词是否已包含在索引中

20
00:00:54,045 --> 00:00:57,002
如果该关键字已在索引中

21
00:00:57,002 --> 00:01:00,009
那么索引里就不用为关键词创造一个新条目

22
00:01:00,009 --> 00:01:02,042
我们希望这个关键词只出现一次

23
00:01:02,042 --> 00:01:04,085
那么 相对的 我们是将这个 URL

24
00:01:04,084 --> 00:01:07,072
添加到与关键词关联的 URL 列表里

25
00:01:07,072 --> 00:01:10,028
如果关键词不在索引中

26
00:01:10,028 --> 00:01:12,075
我们则需在索引添加新条目

27
00:01:12,075 --> 00:01:17,059
这个新条目会成为关键词列表 包括新关键词

28
00:01:17,060 --> 00:01:20,045
和关键词出现的 URL 列表

29
00:01:20,045 --> 00:01:23,081
这是第一个 它还不是索引

30
00:01:23,081 --> 00:01:26,070
只是包含了一个 URL 的列表

31
00:01:26,070 --> 00:01:29,067
所以要加到索引中

32
00:01:29,067 --> 00:01:34,022
来表示目前在这个 URL 我们找到了该关键词

33
00:01:34,022 --> 00:01:36,031
举个例子

34
00:01:36,031 --> 00:01:39,069
假设我们将索引初始化成空列表

35
00:01:39,069 --> 00:01:42,016
索引内尚无元素

36
00:01:42,016 --> 00:01:45,006
那么我们就需往索引内添加新关键词

37
00:01:45,006 --> 00:01:48,004
传入一个索引 作为第一次输入

38
00:01:48,004 --> 00:01:51,014
第二次输入需要一个关键词

39
00:01:51,013 --> 00:01:54,013
我们用 udacity 来做关键词

40
00:01:54,013 --> 00:01:58,003
第三次输入需要关键词出现的 URL

41
00:01:58,004 --> 00:01:59,059
就像这样

42
00:01:59,058 --> 00:02:03,052
第一步 创建索引 初始化成空链接 尚无任何元素

43
00:02:03,052 --> 00:02:08,090
随后调用该索引 往索引列表中添加一个元素

44
00:02:08,090 --> 00:02:12,080
我们使索引发生改变 现在它包含了元素

45
00:02:12,080 --> 00:02:17,016
即包含关键词 udacity 这一字符串的列表

46
00:02:17,015 --> 00:02:20,080
该列表的第二个元素是

47
00:02:20,080 --> 00:02:25,024
是包含了字符串 "http://udacity.com" 这一元素的列表

48
00:02:25,025 --> 00:02:27,025
这是索引的新值

49
00:02:27,025 --> 00:02:31,028
那么我们在对 index 调用函数 add_to_index 这次我们要再次传入一个索引

50
00:02:31,027 --> 00:02:34,087
这是索引代表的值 现在是程序结构了

51
00:02:34,087 --> 00:02:36,055
这次的关键词是 computing

52
00:02:36,056 --> 00:02:39,052
我们传入 URL "http://acm.org"

53
00:02:39,052 --> 00:02:42,002
这会再次改变索引

54
00:02:42,002 --> 00:02:44,011
依照规则

55
00:02:44,012 --> 00:02:46,096
既然关键词不在索引中 就需要添加新元素

56
00:02:46,096 --> 00:02:50,090
也就是说 我们要在索引中附加一个新元素

57
00:02:50,090 --> 00:02:53,090
新元素要包含关键词 computing

58
00:02:53,090 --> 00:02:56,078
第二个元素是一个列表

59
00:02:56,078 --> 00:03:01,031
列表包含我们传入的 URL acm.org

60
00:03:01,031 --> 00:03:02,064
再举个例子

61
00:03:02,064 --> 00:03:07,087
这个例子里 我们传入的关键词在索引中已经存在了

62
00:03:07,087 --> 00:03:11,043
我们再次调出这个索引 传入关键词 udacity

63
00:03:11,043 --> 00:03:13,052
udacity 已经包含在这个索引里了

64
00:03:13,052 --> 00:03:15,090
我们在传入新 URL 这个 URL 不在索引里

65
00:03:15,090 --> 00:03:17,072
那么这次

66
00:03:17,072 --> 00:03:20,090
我们仍要改变索引 但不是创建新元素

67
00:03:20,090 --> 00:03:24,027
而是对已有元素做出改变

68
00:03:24,026 --> 00:03:26,010
我们会搜索与 udacity 匹配的元素

69
00:03:26,010 --> 00:03:29,031
索引中已经包含该元素 所以不用进行新添加

70
00:03:29,031 --> 00:03:31,037
这里我们要遵循第一条规则

71
00:03:31,037 --> 00:03:34,033
那就是如果第一个词已经包含在索引里了

72
00:03:34,033 --> 00:03:38,098
那么只需添加一个新 URL 进 URL 列表 与该关键词建立关联

73
00:03:38,098 --> 00:03:41,080
但没必要为该索引添加新元素

74
00:03:41,080 --> 00:03:43,064
基本就是这样

75
00:03:43,064 --> 00:03:46,096
在 URL 列表中添加新元素

76
00:03:46,096 --> 00:03:49,019
变成 URL 的新值

77
00:03:49,019 --> 00:03:52,000
希望大家都清楚了 往索引进行添加应该做些什么

78
00:03:52,000 --> 00:03:56,037
我想大家都有足够能力自行判断

79
00:03:56,037 --> 00:03:58,050
这就是本次小练习的目标 定义一个过程

80
00:03:58,050 --> 00:04:01,040
即为包含该特征的索引添加内容

81
00:04:01,039 --> 99:59:59,000
包含三次输入和向索引中添加一个新关键词

