1
00:00:00,064 --> 00:00:02,480
我们之前谈论过 AppWidgetManager 类

2
00:00:02,480 --> 00:00:06,160
并用它来获取小部件 ID 的列表

3
00:00:06,160 --> 00:00:08,980
以及用它来更新任何小部件的布局

4
00:00:08,980 --> 00:00:11,620
这个类中比较酷的一个方法

5
00:00:11,619 --> 00:00:14,919
是 GetAppWidgetOptions 方法

6
00:00:14,919 --> 00:00:18,100
此方法会返回一个包含与小部件相关联的属性

7
00:00:18,100 --> 00:00:19,839
的 bundle 对象

8
00:00:19,839 --> 00:00:23,710
例如其尺寸、小部件类别

9
00:00:23,710 --> 00:00:25,810
以及你可以自己添加到小部件的

10
00:00:25,809 --> 00:00:28,269
自定义附加功能等

11
00:00:28,269 --> 00:00:30,579
现在我们来看看代码中的操作

12
00:00:30,579 --> 00:00:34,509
在我们的 PlantProvider 类的 updateWidget 方法中

13
00:00:34,509 --> 00:00:36,369
在获得选项 bundle 后

14
00:00:36,369 --> 00:00:38,229
你可以通过调用 getInt 和传入常数 

15
00:00:38,229 --> 00:00:40,629
option_appwidget_minwidth 来

16
00:00:40,630 --> 00:00:46,179
获取小部件的宽

17
00:00:46,179 --> 00:00:48,549
注意 你可以对任何其他选项或自己添加的

18
00:00:48,549 --> 00:00:51,019
任何自定义附加功能执行相同的操作

19
00:00:51,020 --> 00:00:51,520
好的

20
00:00:51,520 --> 00:00:53,030
那么现在我们已经有了宽度

21
00:00:53,030 --> 00:00:55,060
我们可以决定如何为每个宽度

22
00:00:55,060 --> 00:00:56,960
创建 RemoteViews

23
00:00:56,960 --> 00:00:59,799
在我们的例子中 我将使宽度小于

24
00:00:59,799 --> 00:01:03,489
300 dp 的小部件显示为单个植物

25
00:01:03,490 --> 00:01:04,659
小部件

26
00:01:04,659 --> 00:01:07,719
对于更大的宽度 我要显示植物的 GridView

27
00:01:07,719 --> 00:01:10,390
就像我们在 MainActivity 中所做的那样

28
00:01:10,390 --> 00:01:12,760
由于之前我们已将 singlePlantView 对象

29
00:01:12,760 --> 00:01:16,810
放在了 updatePlantwidgets 中

30
00:01:16,810 --> 00:01:19,930
我将所有的东西复制过来 移到了一个

31
00:01:19,930 --> 00:01:24,270
叫作 getSinglePlantRemoteView 的新方法中

32
00:01:24,269 --> 00:01:28,099
在这个方法中 我设置了返回一个 RemoteView

33
00:01:28,099 --> 00:01:29,769
我还创建了另一个新方法

34
00:01:29,769 --> 00:01:32,920
叫作 getGardenGridRemoteView 这

35
00:01:32,920 --> 00:01:35,109
也会返回一个 RemoteView

36
00:01:35,109 --> 00:01:37,359
但是现在 我只让它返回 null

37
00:01:37,359 --> 00:01:40,569
我们稍后将返回这里构建它

38
00:01:40,569 --> 00:01:43,269
现在 如果我们返回 updateAppWidget 方法

39
00:01:43,269 --> 00:01:46,719
我们可以检查小部件宽度 获取合适的 RemoteView

40
00:01:46,719 --> 00:01:51,400
然后使用正确的 RemoteView 对象

41
00:01:51,400 --> 00:01:52,770
调用 updateAppWidgets

42
00:01:52,769 --> 00:01:55,719
记住目前暂时为了测试目的

43
00:01:55,719 --> 00:01:58,539
我们的 GardenGrid 选项只返回 null

44
00:01:58,540 --> 00:02:01,660
这意味着我们的小部件将返回引用默认

45
00:02:01,659 --> 00:02:02,829
草地图

46
00:02:02,829 --> 00:02:05,530
最后 为了在每次小部件发生更改时

47
00:02:05,530 --> 00:02:07,540
触发此更新 我们将

48
00:02:07,540 --> 00:02:10,479
覆盖 onAppWidgetOptionsChanged 方法

49
00:02:10,479 --> 00:02:15,940
并调用 startActionUpdatePlantWidgets

50
00:02:15,939 --> 00:02:19,159
onAppWidgetsOptionsChanged 正如其名所指

51
00:02:19,159 --> 00:02:22,599
在每次任何小部件选项发生变化时调用

52
00:02:22,599 --> 00:02:25,719
当然包括尺寸发生变化时

53
00:02:25,719 --> 00:02:28,060
现在如果我将一个新的小部件拖曳到主屏幕

54
00:02:28,060 --> 00:02:30,789
它的默认大小将为 1x1

55
00:02:30,789 --> 00:02:33,280
如果我对它的大小进行足够的调整 草地图

56
00:02:33,280 --> 00:02:36,838
应显示为 GridView 的默认大小

57
00:02:36,838 --> 00:02:39,129
如果我再将它的大小调回来 则会获得单个植物

58
00:02:39,129 --> 00:02:40,210
小部件

59
00:02:40,210 --> 00:02:41,560
完美

60
00:02:41,560 --> 00:02:43,969
那么接下来我们将看看如何设置 GridView

61
00:02:43,969 --> 00:02:47,159
并使它显示我们花园中的所有植物

