1
00:00:00,500 --> 00:00:02,070
完成最后一个练习后

2
00:00:02,068 --> 00:00:04,710
现在所有的身体部分Fragment应该都显示

3
00:00:04,710 --> 00:00:05,501
在屏幕上了

4
00:00:05,501 --> 00:00:06,960
但这个应用目前有点

5
00:00:06,960 --> 00:00:11,070
乏味 所以接下来我们要做的是添加一些有趣的交互

6
00:00:11,070 --> 00:00:14,220
一个常见的用户交互是在用户点击Fragment或

7
00:00:14,220 --> 00:00:17,609
Fragment中的视图时 更新图像显示

8
00:00:17,609 --> 00:00:20,339
所以我将为身体部分Fragment创建一个

9
00:00:20,338 --> 00:00:22,198
点击侦听器 以使每个Fragment通过

10
00:00:22,199 --> 00:00:25,559
更改显示的图像来对点击做出响应

11
00:00:25,559 --> 00:00:27,868
想法是点击后 Fragment

12
00:00:27,870 --> 00:00:29,789
将更新 显示存储的图像 ID 列表中的

13
00:00:29,789 --> 00:00:33,000
下一个图像资源

14
00:00:33,000 --> 00:00:35,429
你可能习惯于通过 activity 在视图上

15
00:00:35,429 --> 00:00:37,289
连接点击侦听器 但记住

16
00:00:37,289 --> 00:00:39,929
Fragment的重要性在于其可重用性

17
00:00:39,929 --> 00:00:41,280
和模块性

18
00:00:41,280 --> 00:00:42,929
在这个例子中 最好

19
00:00:42,929 --> 00:00:46,079
在 fragment 类中处理点击交互

20
00:00:46,079 --> 00:00:49,289
因为它对所有身体部分Fragment重复

21
00:00:49,289 --> 00:00:51,960
那么我们前往身体部分Fragment代码

22
00:00:51,960 --> 00:00:53,880
我想在我们的 BodyPartFragment 类中

23
00:00:53,880 --> 00:00:57,230
给图像视图上添加一个点击侦听器

24
00:00:57,228 --> 00:01:00,808
然后在发生点击时 我将增加 mListIndex 的值

25
00:01:00,810 --> 00:01:03,179
并将图像资源更新到我们的图像 ID 列表

26
00:01:03,179 --> 00:01:05,519
中的下一个图像

27
00:01:05,519 --> 00:01:07,200
此图像视图需要被声明为 final

28
00:01:07,200 --> 00:01:10,500
因为它现在被内部类访问

29
00:01:10,500 --> 00:01:12,688
我还想给我们的Fragment一个方法

30
00:01:12,688 --> 00:01:15,358
来判断它是否到达了要显示的图像列表的

31
00:01:15,358 --> 00:01:16,619
末尾

32
00:01:16,620 --> 00:01:18,480
如果列表索引到达了列表

33
00:01:18,480 --> 00:01:21,630
末尾的值 我要将显示的列表索引

34
00:01:21,629 --> 00:01:24,929
重置为索引 0 处的第一个图像 ID

35
00:01:24,930 --> 00:01:27,750
这样我可以持续点击 更新列表

36
00:01:27,750 --> 00:01:30,310
索引和要显示的图像资源

37
00:01:30,310 --> 00:01:32,969
那么现在来看看如果我运行应用会是怎样的

38
00:01:32,968 --> 00:01:36,038
每个身体部位Fragment都有一个内部点击侦听器

39
00:01:36,040 --> 00:01:39,270
它会根据我点击的次数来更改图像 ID

40
00:01:39,269 --> 00:01:41,170
所以这个功能看起来不错

41
00:01:41,170 --> 00:01:42,960
但是看看当我旋转设备时会发生什么

42
00:01:42,959 --> 00:01:46,079
当我旋转设备时 它就会重置图像

43
00:01:46,078 --> 00:01:48,148
而我希望它保持原状态 所以我要

44
00:01:48,150 --> 00:01:50,910
找到一种方法 来保持身体部分Fragment的

45
00:01:50,909 --> 00:01:51,929
当前状态

46
00:01:51,930 --> 00:01:53,640
我们回到代码

47
00:01:53,640 --> 00:01:57,079
我可以通过覆盖方法 onSaveInstanceState

48
00:01:57,078 --> 00:01:59,878
并将当前变量保存在一个 bundle 中来实现这一点

49
00:01:59,879 --> 00:02:03,359
在这个例子中 bundle 只是一组键值对

50
00:02:03,358 --> 00:02:05,369
我要这个 bundle 包含图像列表

51
00:02:05,370 --> 00:02:09,090
和此身体部分Fragment的当前列表索引

52
00:02:09,090 --> 00:02:11,250
我要将字符串定义为静态的最终字符串

53
00:02:11,250 --> 00:02:15,930
变量 命名为 imageIdList 和 ListIndex

54
00:02:15,930 --> 00:02:18,790
然后我要将变量 bundle、imageIdList

55
00:02:18,788 --> 00:02:22,138
和 ListIndex 保存在 onSaveInstanceState 中

56
00:02:22,139 --> 00:02:25,819
我将当前图像列表附加到 imageIdList 字符串

57
00:02:25,818 --> 00:02:29,908
并将当前的 mListIndex 附加到 ListIndex 字符串

58
00:02:29,908 --> 00:02:32,038
所以我在存储当前的 imageIdList

59
00:02:32,038 --> 00:02:33,988
和当前的 ListIndex

60
00:02:33,990 --> 00:02:36,060
然后 在 onCreateView 的开头

61
00:02:36,060 --> 00:02:38,759
如果我检测到保存状态 我将加载这些

62
00:02:38,758 --> 00:02:40,888
保存的变量的值

63
00:02:40,889 --> 00:02:43,329
最后 要完成保存状态代码

64
00:02:43,330 --> 00:02:45,900
我需要返回 AndroidMeActivity

65
00:02:45,900 --> 00:02:47,520
我将稍微修改这个代码

66
00:02:47,520 --> 00:02:49,920
以仅在不存在之前保存的Fragment情况下

67
00:02:49,919 --> 00:02:52,500
创建新的Fragment

68
00:02:52,500 --> 00:02:54,479
所以我要将这个Fragment创建代码

69
00:02:54,479 --> 00:02:56,340
包裹在一个 if 语句中 检查是否

70
00:02:56,340 --> 00:02:58,200
存在 savedInstanceState

71
00:02:58,199 --> 00:03:00,030
现在再次运行我们的应用

72
00:03:00,030 --> 00:03:04,288
我点击身体部分图像并旋转

73
00:03:04,288 --> 00:03:07,089
这一次 Fragment状态全部保存了下来

74
00:03:07,090 --> 00:03:08,968
现在轮到你按照

75
00:03:08,968 --> 00:03:10,769
代码中的 TODO 项 自己探索一下

76
00:03:10,770 --> 00:03:13,350
点击交互

