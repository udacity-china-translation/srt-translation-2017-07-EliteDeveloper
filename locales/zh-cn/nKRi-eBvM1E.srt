1
00:00:00,260 --> 00:00:02,750
将字符串赋值给变量就如同将数字赋值给变量一样

2
00:00:02,750 --> 00:00:04,980
我们可以通过赋值语句来实现这项功能 

3
00:00:04,980 --> 00:00:08,720
我的名字是 Dave 

4
00:00:08,720 --> 00:00:12,360
所以我要把 Dave 字符串赋值给变量 name 

5
00:00:12,360 --> 00:00:15,280
像这样使用变量的好处是 现在我们可以创建代码 

6
00:00:15,280 --> 00:00:19,400
例如输出 Hello 加上 name 

7
00:00:19,400 --> 00:00:22,380
这里的 Hello 是一个字符串 

8
00:00:22,380 --> 00:00:25,610
name 是一个变量 如果把 name 指代其他的字符串 

9
00:00:25,610 --> 00:00:27,790
那么就会输出 Hello 以及 name 所代表的任何值 

10
00:00:27,790 --> 00:00:30,930
刚刚我介绍了一个新运算符 

11
00:00:32,130 --> 00:00:34,580
我们使用了加号运算符 

12
00:00:34,580 --> 00:00:38,980
我们知道数字之间会用加号 现在我们在字符串之间使用加号 

13
00:00:38,980 --> 00:00:41,720
其含义有所不同 

14
00:00:41,720 --> 00:00:44,340
字符串的加号表示连接 

15
00:00:44,340 --> 00:00:48,180
因此我们可以通过使用加号运算符将字符串放置在一起 

16
00:00:48,180 --> 00:00:51,900
一个字符串加上另一个字符串的意思是连接 

17
00:00:51,900 --> 00:00:53,950
这是一个新的字符串 是将两个字符串放在一起得到的结果 

18
00:00:53,950 --> 00:00:56,230
我们在 Python 解释器中运行一下 

19
00:00:56,230 --> 00:01:00,680
我已经初始化了变量 name 使其成为字符串 Dave  

20
00:01:00,680 --> 00:01:03,320
我要输出 Hello 加上 name 

21
00:01:03,320 --> 00:01:07,790
运行之后 大家可以看到 

22
00:01:07,790 --> 00:01:10,090
并没有得出我想要的结果

23
00:01:10,090 --> 00:01:14,190
以下是运行之后得到的结果 两个字符串连在一起 

24
00:01:14,190 --> 00:01:17,140
彼此之间并没有自动添加空格或任何东西 

25
00:01:17,140 --> 00:01:19,320
因此我们得到的是 HelloDave 中间没有空格 

26
00:01:19,320 --> 00:01:24,100
我们需要在这里加一个空格 

27
00:01:24,100 --> 00:01:27,210
这样我们得到了 Hello Dave 

28
00:01:27,210 --> 00:01:29,780
它看起来更像是我们想要的结果 

29
00:01:29,780 --> 00:01:32,680
就像我们可以多次使用加号进行数字运算一样 对字符串也是如此

30
00:01:32,680 --> 00:01:36,310
我们可以多次使用加号连接更多字符串 

31
00:01:36,310 --> 00:01:38,740
现在我们在字符串末尾加上另一个字符串 

32
00:01:38,740 --> 00:01:42,050
运行之后显示了我想要的叹号 可能一个不够 

33
00:01:42,050 --> 00:01:48,100
我们可以在字符串后面添加更多的叹号 这样读起来比较顺眼
