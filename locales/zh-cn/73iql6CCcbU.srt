1
00:00:00,149 --> 00:00:02,189
在 Android 应用中使用媒体

2
00:00:02,189 --> 00:00:04,620
是一项常见任务 几乎每个用例

3
00:00:04,620 --> 00:00:06,400
都有一些共同的特征

4
00:00:06,400 --> 00:00:08,490
第一个是媒体播放器

5
00:00:08,490 --> 00:00:10,949
这是可以输入数字媒体并将其

6
00:00:10,949 --> 00:00:13,259
呈现为音频或视频的组件

7
00:00:13,259 --> 00:00:15,449
第二个是媒体控制器

8
00:00:15,449 --> 00:00:17,759
这是控制媒体播放器并包含

9
00:00:17,760 --> 00:00:19,679
所有播放按钮的 UI

10
00:00:19,679 --> 00:00:22,019
例如播放或暂停按钮、快进和

11
00:00:22,019 --> 00:00:25,044
快退、跳至下一个或上一个

12
00:00:25,045 --> 00:00:27,420
这些组件方面有很多选择

13
00:00:27,420 --> 00:00:28,920
包括根据你的特定需求

14
00:00:28,920 --> 00:00:31,710
全新构建它们 但是对于每个应用来说

15
00:00:31,710 --> 00:00:34,566
它们的交互性质几乎相同

16
00:00:34,566 --> 00:00:35,940
这就是为什么 Android 框架

17
00:00:35,939 --> 00:00:37,439
提供了两个类--

18
00:00:37,439 --> 00:00:39,989
媒体会话和媒体控制器--

19
00:00:39,990 --> 00:00:41,490
这给了我们构建媒体播放器应用的

20
00:00:41,490 --> 00:00:44,087
一个明确结构

21
00:00:44,087 --> 00:00:46,170
媒体会话与媒体控制器

22
00:00:46,170 --> 00:00:48,300
相互通信 以使 UI 使用对应标准播放器

23
00:00:48,299 --> 00:00:51,570
操作（如播放、暂停、停止等）

24
00:00:51,570 --> 00:00:56,109
的预定义回调与播放器保持

25
00:00:56,109 --> 00:00:56,609
同步

26
00:00:56,609 --> 00:00:58,829
你也可以包含可扩展的自定义调用

27
00:00:58,829 --> 00:01:00,699
用于定义特定于你的应用的

28
00:01:00,700 --> 00:01:01,859
特殊行为

29
00:01:01,859 --> 00:01:04,769
例如 你可能想在视频播放器中

30
00:01:04,769 --> 00:01:06,510
包含一个“截图”按钮

31
00:01:06,510 --> 00:01:08,790
稍后我们将详细介绍这些组件

32
00:01:08,790 --> 00:01:10,980
及它们的回调 但现在你可以

33
00:01:10,980 --> 00:01:13,710
将其视为标准的解耦模式

34
00:01:13,709 --> 00:01:16,439
媒体会话将播放器与 UI 隔离开来

35
00:01:16,439 --> 00:01:18,359
以便你在不影响播放器的情况下

36
00:01:18,359 --> 00:01:20,856
轻松在不同的播放器之间转换 或在不更改

37
00:01:20,856 --> 00:01:22,439
播放器中功能的情况下 改变

38
00:01:22,439 --> 00:01:24,870
外观和感觉

39
00:01:24,870 --> 00:01:27,780
此结构的另一个主要原因如下

40
00:01:27,780 --> 00:01:30,900
媒体通常由多个控制器控制

41
00:01:30,900 --> 00:01:32,130
可能是一辆车--

42
00:01:32,129 --> 00:01:34,530
一个手表--

43
00:01:34,530 --> 00:01:37,790
Android Wear、耳机媒体按钮、

44
00:01:37,790 --> 00:01:40,290
屏幕上的一条通知 甚至可能是其他

45
00:01:40,290 --> 00:01:40,921
应用

46
00:01:40,921 --> 00:01:42,420
他们可能需要退出音频一秒钟

47
00:01:42,420 --> 00:01:44,400
以向用户发送重要的

48
00:01:44,400 --> 00:01:45,719
通知

49
00:01:45,719 --> 00:01:49,319
这就是为什么你应该使用这个客户端-服务器架构

50
00:01:49,319 --> 00:01:51,539
然后媒体会话成为保存有关媒体

51
00:01:51,540 --> 00:01:53,070
信息和播放器状态的

52
00:01:53,069 --> 00:01:55,199
服务器 并且每个控制器

53
00:01:55,200 --> 00:01:57,960
成为需要与媒体会话保持同步的

54
00:01:57,959 --> 00:01:59,709
客户端

55
00:01:59,709 --> 00:02:00,329
好的

56
00:02:00,329 --> 00:02:03,569
现在我们知道我们需要媒体会话和媒体控制器

57
00:02:03,569 --> 00:02:05,849
但它们在 Android 中如何实现呢？

58
00:02:05,849 --> 00:02:07,799
答案取决于你的用例

59
00:02:07,799 --> 00:02:10,560
专门播放音频的应用与

60
00:02:10,560 --> 00:02:13,560
包含视频与音频的应用相比 需求略有不同

61
00:02:13,560 --> 00:02:15,930
当播放音频和视频时

62
00:02:15,930 --> 00:02:17,706
UI 要在播放期间

63
00:02:17,705 --> 00:02:19,079
保持可见

64
00:02:19,080 --> 00:02:21,210
由于用户在观看视频

65
00:02:21,210 --> 00:02:23,849
导航离开 UI 可能会

66
00:02:23,849 --> 00:02:25,349
终止播放

67
00:02:25,349 --> 00:02:28,139
但是 在仅播放音频时 我很可能

68
00:02:28,139 --> 00:02:31,379
想在用户导航离开 UI 时继续进行

69
00:02:31,379 --> 00:02:33,150
播放 例如在听

70
00:02:33,150 --> 00:02:34,800
音乐或有声书时

71
00:02:34,800 --> 00:02:36,330
查看 Instagram

72
00:02:36,330 --> 00:02:38,219
在这种情况下 即使 UI 不可见

73
00:02:38,219 --> 00:02:39,960
播放仍然继续 就像

74
00:02:39,960 --> 00:02:42,552
在这条通知中看到的

75
00:02:42,551 --> 00:02:44,509
我们将在后面的部分研究

76
00:02:44,509 --> 00:02:46,759
媒体会话和媒体控制器

77
00:02:46,759 --> 00:02:49,370
在这些不同用例中的实现

