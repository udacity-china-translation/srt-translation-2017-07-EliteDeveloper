1
00:00:00,210 --> 00:00:02,334
现在我们有了关于媒体播放的

2
00:00:02,334 --> 00:00:05,250
初步信息 我们需要开始一些实际操作工作

3
00:00:05,250 --> 00:00:07,948
起始代码已编译并运行

4
00:00:07,948 --> 00:00:09,990
我们来看看它的细节

5
00:00:09,990 --> 00:00:12,599
基本上 我们已经有了一个古典音乐测验

6
00:00:12,599 --> 00:00:13,890
应用程序

7
00:00:13,890 --> 00:00:15,720
我们将一个作曲家的肖像

8
00:00:15,720 --> 00:00:18,719
加载到屏幕的上半部分 屏幕下半部分显示

9
00:00:18,719 --> 00:00:21,599
四个作曲家姓名选项

10
00:00:21,599 --> 00:00:24,140
我们的目标是将屏幕上半部分的图像

11
00:00:24,140 --> 00:00:26,660
替换为下半部分四个作曲家中谱写了这首

12
00:00:26,660 --> 00:00:29,329
曲子的一名作曲家 所以用户需要

13
00:00:29,329 --> 00:00:32,239
先听这首曲子 然后试着猜测它的作曲者是谁

14
00:00:32,240 --> 00:00:35,969
在源代码中 我们有四个 Java 文件：MainActivity、

15
00:00:35,969 --> 00:00:38,810
QuizActivity、QuizUtils 和 Sample

16
00:00:38,810 --> 00:00:41,289
MainActivity 是第一个 UI

17
00:00:41,289 --> 00:00:43,939
屏幕 允许用户开始新一轮游戏

18
00:00:43,939 --> 00:00:45,799
并看到他们的高得分

19
00:00:45,799 --> 00:00:48,589
当游戏完成时也显示 但在这种情况下

20
00:00:48,590 --> 00:00:51,460
它还显示用户的当前得分

21
00:00:51,460 --> 00:00:54,980
QuizActivity 是包含每项问题的一个屏幕

22
00:00:54,979 --> 00:00:57,739
这是媒体播放最终发生的地方

23
00:00:57,740 --> 00:01:01,190
它将 quiz utils 类用于所有与测试相关的需求

24
00:01:01,189 --> 00:01:05,689
例如生成问题、检查答案等等

25
00:01:05,689 --> 00:01:08,060
最后我们有 sample 类

26
00:01:08,060 --> 00:01:10,820
这是一个简单的 Java 对象 (POJO)

27
00:01:10,819 --> 00:01:13,549
代表一个可播放媒体

28
00:01:13,549 --> 00:01:16,579
它包含以下字段：一个整数 ID、

29
00:01:16,579 --> 00:01:19,450
作曲家、样本名称、

30
00:01:19,450 --> 00:01:22,760
媒体文件的 URI 以及

31
00:01:22,760 --> 00:01:25,579
含可绘制的作曲者图像 ID 的字符串

32
00:01:25,579 --> 00:01:27,920
剩下的类只是 getter 和 setter 方法

33
00:01:27,920 --> 00:01:30,890
以及一些用于操纵样本的静态方法

34
00:01:30,890 --> 00:01:38,239
主要有 readJSONFile、readEntry、getAllSampleIDs

35
00:01:38,239 --> 00:01:44,429
getSampleByID 以及 getComposerArtBySampleID

36
00:01:44,430 --> 00:01:45,870
要理解这些的工作原理

37
00:01:45,870 --> 00:01:47,670
看看最后一个感兴趣的文件

38
00:01:47,670 --> 00:01:50,730
media.exolist.json 文件

39
00:01:50,730 --> 00:01:52,290
此文件定义了我们媒体样本

40
00:01:52,290 --> 00:01:53,910
的组织

41
00:01:53,909 --> 00:01:57,090
它包含与我们的 sample.java 类具有相同字段的

42
00:01:57,090 --> 00:01:59,460
JSON 样本数组

43
00:01:59,459 --> 00:02:01,439
如果你不熟悉 JSON 请查看

44
00:02:01,439 --> 00:02:03,936
讲师注释中的链接复习一下

45
00:02:03,936 --> 00:02:06,269
注意 还有其他方式可以根据用例

46
00:02:06,269 --> 00:02:07,763
在 Android 中存储媒体

47
00:02:07,763 --> 00:02:09,930
如果你需要将媒体文件提供给其他应用

48
00:02:09,930 --> 00:02:12,569
请查看 Media Store

49
00:02:12,569 --> 00:02:15,269
sample 类的 readJSONFile 方法

50
00:02:15,270 --> 00:02:17,280
打开此 JSON 文件并返回

51
00:02:17,280 --> 00:02:20,909
指向样本数组的 JSONReader 对象

52
00:02:20,909 --> 00:02:24,969
它与 readEntry 方法一起使用

53
00:02:24,969 --> 00:02:27,280
后者读取数组中的单个 JSON 对象

54
00:02:27,280 --> 00:02:30,340
并返回一个 sample 对象 字段填充 JSON

55
00:02:30,340 --> 00:02:32,189
对象文件

56
00:02:32,189 --> 00:02:36,479
其余方法 getAllSampleIDs、getSampleByID

57
00:02:36,479 --> 00:02:39,000
和 getComposerArtBySampleID

58
00:02:39,000 --> 00:02:41,729
使用这些 read 方法来获取所有样本 ID

59
00:02:41,729 --> 00:02:43,889
以分别按 ID 获取单个样本对象

60
00:02:43,889 --> 00:02:45,679
和按 ID 获取正确的

61
00:02:45,680 --> 00:02:48,280
作曲家肖像位图

62
00:02:48,280 --> 00:02:50,789
然后此测试的原理如下

63
00:02:50,789 --> 00:02:52,620
我们检查它是否是新一轮游戏 如果是

64
00:02:52,620 --> 00:02:55,349
我们生成用于问题的所有样本 ID

65
00:02:55,349 --> 00:02:56,859
的列表

66
00:02:56,860 --> 00:02:59,280
并将当前得分设为 0

67
00:02:59,280 --> 00:03:01,409
如果不是新一轮游戏 那么我们

68
00:03:01,409 --> 00:03:03,240
在 Activity 开始时从 intent 获得

69
00:03:03,240 --> 00:03:04,379
剩余歌曲的列表

70
00:03:04,379 --> 00:03:07,650
接下来 我们使用 QuizUtils 类来生成一个问题

71
00:03:07,650 --> 00:03:10,349
并从该问题获得正确答案

72
00:03:10,349 --> 00:03:12,509
然后 我们可以使用 sample 类方法

73
00:03:12,509 --> 00:03:15,090
从 ID 获取样本对象

74
00:03:15,090 --> 00:03:18,360
然后使用作曲者名称填充按钮

75
00:03:18,360 --> 00:03:20,760
在此方法中 我们还向按钮

76
00:03:20,759 --> 00:03:22,799
设置 onClickListener

77
00:03:22,800 --> 00:03:25,320
然后我们记录用户的答案

78
00:03:25,319 --> 00:03:27,689
并检查是否正确

79
00:03:27,689 --> 00:03:30,509
然后我们从剩余样本 ID 列表中删除答案

80
00:03:30,509 --> 00:03:34,109
以确保同样的问题不会问两次

81
00:03:34,110 --> 00:03:37,260
然后 我们设置一个 intent 以再次启动问题 

82
00:03:37,259 --> 00:03:41,399
Activity 放入剩余歌曲作为 intent extra

83
00:03:41,400 --> 00:03:44,849
在仅剩一个 ID 时 我们结束游戏

84
00:03:44,849 --> 00:03:47,250
并显示当前得分和较高得分

85
00:03:47,250 --> 00:03:47,979
很好

86
00:03:47,979 --> 00:03:50,269
我们来添加媒体播放器吧

