1
00:00:00,340 --> 00:00:02,770
现在我们知道如何向应用添加小部件了

2
00:00:02,770 --> 00:00:04,689
第一个练习的目的是

3
00:00:04,689 --> 00:00:07,089
创建一个非常基础的小部件 它带有 ImageView

4
00:00:07,089 --> 00:00:10,029
能在我们点击它时启用 My Garden 应用

5
00:00:10,029 --> 00:00:12,250
现在我们已经添加了创建小部件

6
00:00:12,250 --> 00:00:13,789
的所有必要文件

7
00:00:13,789 --> 00:00:16,719
我们来自定义它并设计我们的小部件

8
00:00:16,719 --> 00:00:20,259
现在 打开 plant_widget.xml 布局文件

9
00:00:20,260 --> 00:00:22,390
由于我们只需在小部件中显示

10
00:00:22,390 --> 00:00:25,839
一个静态图像 我将默认的 TextView 替换

11
00:00:25,839 --> 00:00:27,640
成了 ImageView

12
00:00:27,640 --> 00:00:32,530
并将来源设为 @drawable/grass

13
00:00:32,530 --> 00:00:35,770
接下来 打开 xml 文件夹中的

14
00:00:35,770 --> 00:00:37,450
plant_widget_info.xml

15
00:00:37,450 --> 00:00:39,520
我在这里将初始布局

16
00:00:39,520 --> 00:00:45,100
更改为了 @layout/plant_widget 它设置了

17
00:00:45,100 --> 00:00:46,509
此小部件的默认布局

18
00:00:46,509 --> 00:00:52,109
另外 我还将 previewImage 设为 @drawable/launcher_icon

19
00:00:52,109 --> 00:00:53,862
这设置了你要将其拖曳到

20
00:00:53,862 --> 00:00:55,570
主屏幕时将显示的小部件菜单

21
00:00:55,570 --> 00:00:57,429
中的图标

22
00:00:57,429 --> 00:01:00,621
这里你可以将最小宽度和高度留为 40 dp

23
00:01:00,621 --> 00:01:02,079
不过你可能觉得这对于

24
00:01:02,079 --> 00:01:03,454
我们的植物来说有点小

25
00:01:03,454 --> 00:01:06,250
所以稍后你可以自由更改

26
00:01:06,250 --> 00:01:07,840
记住这个属性

27
00:01:07,840 --> 00:01:10,810
updatePeriodMillis 是小部件刷新和更新

28
00:01:10,810 --> 00:01:12,850
自己的频率

29
00:01:12,849 --> 00:01:15,609
小部件有自己的定时器来处理这个

30
00:01:15,609 --> 00:01:18,250
你需要做的是设置以毫秒为单位的

31
00:01:18,250 --> 00:01:19,939
时间间隔

32
00:01:19,939 --> 00:01:22,329
不过 记住最小的更新时间间隔

33
00:01:22,329 --> 00:01:28,000
是 30 分钟 转换后是 1,800,000 毫秒 

34
00:01:28,000 --> 00:01:31,420
此时间限制旨在确保应用开发人员不会

35
00:01:31,420 --> 00:01:33,400
过于频繁地更新小部件

36
00:01:33,400 --> 00:01:36,070
而耗尽设备资源

37
00:01:36,069 --> 00:01:39,219
现在 我们需要设置 ClickHandler 启动应用

38
00:01:39,219 --> 00:01:41,739
要这样做 我们需要修改 widgetProvider 

39
00:01:41,739 --> 00:01:43,089
类

40
00:01:43,090 --> 00:01:47,590
在 PlantWidgetProvider 中 每当创建了新的小部件时

41
00:01:47,590 --> 00:01:49,780
onUpdate 方法就会被调用

42
00:01:49,780 --> 00:01:52,689
此方法也会按我们之前设置的 30 分钟  

43
00:01:52,689 --> 00:01:55,030
时间间隔调用

44
00:01:55,030 --> 00:01:58,570
当我们使用 Android Studio 初次创建此小部件时

45
00:01:58,569 --> 00:02:01,389
某些代码已经写好了

46
00:02:01,390 --> 00:02:02,209
就像这个

47
00:02:02,209 --> 00:02:05,229
所以这个循环会遍历已经添加到主屏幕的

48
00:02:05,230 --> 00:02:08,770
所有小部件实例 并更新它们

49
00:02:08,770 --> 00:02:10,600
如我们之前所说 用户可以在主屏幕

50
00:02:10,599 --> 00:02:14,739
上有同一个小部件的多个实例
same widget on the home screen.

51
00:02:14,740 --> 00:02:16,510
尽管我们不期望 My Garden 应用

52
00:02:16,509 --> 00:02:18,399
的用户会这么做 你应

53
00:02:18,400 --> 00:02:20,860
始终假定存在多个实例

54
00:02:20,860 --> 00:02:23,480
并全部更新它们

55
00:02:23,479 --> 00:02:26,409
AppWidgetManager 类可以让我们访问

56
00:02:26,409 --> 00:02:28,966
有关主屏幕上现有小部件的

57
00:02:28,967 --> 00:02:29,710
信息

58
00:02:29,710 --> 00:02:34,010
它也可以让你对所有小部件进行强制更新

59
00:02:34,009 --> 00:02:36,500
那么要更新小部件 像这里所看到的

60
00:02:36,500 --> 00:02:38,889
你需要传入小部件的 ID

61
00:02:38,889 --> 00:02:43,299
以及描述该小部件的 RemoteViews 对象

62
00:02:43,300 --> 00:02:46,240
这里这一行在使用 plant_widget 布局

63
00:02:46,240 --> 00:02:48,820
创建 RemoteViews 对象

64
00:02:48,819 --> 00:02:52,719
由于我们将 TextView 替换成了静态 ImageView

65
00:02:52,719 --> 00:02:56,349
我们不再需要这个 widgetText 及 set

66
00:02:56,349 --> 00:02:58,180
TextViewText 调用了

67
00:02:58,180 --> 00:03:00,379
所以我们可以将它们删掉

68
00:03:00,379 --> 00:03:01,780
现在我们运行这个 你会在

69
00:03:01,780 --> 00:03:05,830
小部件列表中看到小部件选项可用了

70
00:03:05,830 --> 00:03:08,680
你可以将它拖放到主屏幕

71
00:03:08,680 --> 00:03:11,260
但是现在点击它还什么都不会发生

72
00:03:11,259 --> 00:03:13,419
所以 RemoteViews 处理点击事件的方式

73
00:03:13,419 --> 00:03:15,939
不同于一般视图

74
00:03:15,939 --> 00:03:18,129
我们不能像大家习惯的做法那样

75
00:03:18,129 --> 00:03:20,829
设置 onClick 事件运行自定义方法

76
00:03:20,830 --> 00:03:23,260
RemoteViews 可以与 Pending Intent

77
00:03:23,259 --> 00:03:25,359
连接 后者会在视图被点击时

78
00:03:25,360 --> 00:03:26,980
启动

79
00:03:26,979 --> 00:03:29,649
实现方法是调用

80
00:03:29,650 --> 00:03:32,360
setOnClickPendingIntent

81
00:03:32,360 --> 00:03:34,210
记住 Pending Intent 只是

82
00:03:34,210 --> 00:03:36,280
围绕 intent 的一个包裹 允许

83
00:03:36,280 --> 00:03:38,140
其他应用访问

84
00:03:38,139 --> 00:03:40,459
和在你的应用中运行该 intent

85
00:03:40,460 --> 00:03:42,640
那么要启动我们的应用 我们需要

86
00:03:42,639 --> 00:03:45,009
为 MainActivity 类创建一个 intent

87
00:03:45,009 --> 00:03:46,989
然后将它包裹在 Pending Intent 中

88
00:03:46,990 --> 00:03:49,860
并调用 setOnClickPendingIntent

89
00:03:49,860 --> 00:03:51,970
在代码中 我将它添加到这里

90
00:03:51,969 --> 00:03:54,669
可以看到 setOnClickPendingIntent 取

91
00:03:54,669 --> 00:03:57,459
应侦听点击的视图 ID

92
00:03:57,460 --> 00:04:02,050
在我们的例子中是 widget_plant_image

93
00:04:02,050 --> 00:04:03,670
以及在视图被点击时启动的 

94
00:04:03,669 --> 00:04:06,269
Pending Intent

95
00:04:06,270 --> 00:04:07,090
完美

96
00:04:07,090 --> 00:04:09,069
我们现在来试试看

97
00:04:09,069 --> 00:04:10,969
在代码中做了这些更新后

98
00:04:10,969 --> 00:04:12,789
现在如果你点击小部件

99
00:04:12,789 --> 00:04:15,929
它会打开 My Garden 应用

