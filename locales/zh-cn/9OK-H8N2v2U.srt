1
00:00:00,372 --> 00:00:02,080
现在我们已到最后阶段

2
00:00:02,080 --> 00:00:05,470
再完成一个任务 我们就会有一个

3
00:00:05,469 --> 00:00:07,660
完备的响应式应用了

4
00:00:07,660 --> 00:00:10,630
最后一步是创建出现在较大的平板电脑屏幕上的

5
00:00:10,630 --> 00:00:12,820
双窗格布局

6
00:00:12,820 --> 00:00:15,460
总结来说 我们想让 MasterList 和三个 Body

7
00:00:15,460 --> 00:00:18,400
PartFragment 在小的手机屏幕上作为

8
00:00:18,399 --> 00:00:19,219
分离的 Activity 

9
00:00:19,219 --> 00:00:22,390
但是在平板电脑上 在同一个 MainActivity 中

10
00:00:22,390 --> 00:00:24,850
像这样并排显示

11
00:00:24,850 --> 00:00:26,350
在代码中实现这一点

12
00:00:26,350 --> 00:00:29,000
类似于创建横向布局或最小

13
00:00:29,000 --> 00:00:31,390
宽度布局 使用新的布局资源

14
00:00:31,390 --> 00:00:34,210
文件夹来定义更大屏幕尺寸的双窗格

15
00:00:34,210 --> 00:00:35,890
布局

16
00:00:35,890 --> 00:00:39,850
对于平板电脑 这意味着定义新的布局文件夹

17
00:00:39,850 --> 00:00:43,359
平板电脑屏幕的最小宽度为 600 dp

18
00:00:43,359 --> 00:00:45,130
因此我们将为此布局创建一个文件夹

19
00:00:45,130 --> 00:00:49,060
并将其命名为 layout-sw600dp

20
00:00:49,060 --> 00:00:52,210
然后在这个文件夹中 我们将创建一个 activity_main XML

21
00:00:52,210 --> 00:00:53,270
文件

22
00:00:53,270 --> 00:00:57,470
这将覆盖默认的 activity_main 文件

23
00:00:57,469 --> 00:00:59,469
在这里 我们将两个窗格定义为

24
00:00:59,469 --> 00:01:02,379
水平线性布局

25
00:01:02,380 --> 00:01:06,109
我们将从左侧的 MainList 开始

26
00:01:06,108 --> 00:01:08,919
然后我将包含一条小的分隔线 将我们的身体部位

27
00:01:08,920 --> 00:01:11,320
Fragment放在右侧

28
00:01:11,319 --> 00:01:13,448
跟之前一样 我使用 fragment 标签

29
00:01:13,450 --> 00:01:15,159
来保存我们的主列表

30
00:01:15,159 --> 00:01:19,090
因为这个Fragment是静态的 在运行时不会改变

31
00:01:19,090 --> 00:01:21,370
然后我在屏幕右侧的垂直线性

32
00:01:21,370 --> 00:01:23,380
布局中放置三个框架布局容器

33
00:01:23,379 --> 00:01:27,039
用于动态的身体部位Fragment

34
00:01:27,040 --> 00:01:29,770
你会注意到这些具有与手机

35
00:01:29,769 --> 00:01:31,969
activity_android_me 布局中相同的 ID

36
00:01:31,968 --> 00:01:34,538
并且保存所有这些容器的线性布局

37
00:01:34,540 --> 00:01:37,270
称为 android_me_linear_layout

38
00:01:37,269 --> 00:01:41,200
所有这些 XML 代码看起来应该非常熟悉

39
00:01:41,200 --> 00:01:42,650
现在回到我们的 MainActivity

40
00:01:42,650 --> 00:01:45,040
我们需要区分双窗格平板电脑

41
00:01:45,040 --> 00:01:47,204
情况和单窗格手机情况

42
00:01:47,203 --> 00:01:49,118
以便我们可以对所有屏幕尺寸

43
00:01:49,120 --> 00:01:51,640
正确显示Fragment

44
00:01:51,640 --> 00:01:53,769
要跟踪是否在双窗格模式下

45
00:01:53,769 --> 00:01:57,939
我将创建一个名为 mTwoPane 的布尔变量

46
00:01:57,938 --> 00:02:00,788
然后在 onCreate 中 通过检验

47
00:02:00,790 --> 00:02:02,530
是否存在刚才在主布局文件中添加的

48
00:02:02,530 --> 00:02:05,799
线性布局 知道它是否处于双窗格模式

49
00:02:05,799 --> 00:02:08,169
当应用首次在 onCreate 中启动时

50
00:02:08,169 --> 00:02:11,290
此布局在单窗格手机中尚不存在

51
00:02:11,288 --> 00:02:14,138
但在较大的平板电脑屏幕上存在

52
00:02:14,139 --> 00:02:16,305
所以它是否为空表示了

53
00:02:16,306 --> 00:02:17,680
这是双窗格还是

54
00:02:17,680 --> 00:02:19,569
单窗格布局

55
00:02:19,568 --> 00:02:21,458
如果是双窗格模式 我将

56
00:02:21,460 --> 00:02:24,230
不得不使用新的身体部位Fragment填充

57
00:02:24,229 --> 00:02:26,959
Fragment容器

58
00:02:26,960 --> 00:02:28,629
这会和 android_me activity 中的代码

59
00:02:28,628 --> 00:02:30,548
非常相似

60
00:02:30,550 --> 00:02:33,100
我将获取一个 FragmentManager 并为屏幕上的头部、

61
00:02:33,098 --> 00:02:35,560
身体和腿部图像创建新的身体

62
00:02:35,560 --> 00:02:37,500
部分Fragment

63
00:02:37,500 --> 00:02:39,218
在双窗格的情况下 我们还想

64
00:02:39,218 --> 00:02:40,780
去掉“下一步”(Next) 按钮

65
00:02:40,780 --> 00:02:43,400
所以我们要将其可见性 (visibility) 设为 gone

66
00:02:43,400 --> 00:02:46,000
我还要将 GridView 列的数量

67
00:02:46,000 --> 00:02:48,508
设为 2 以便显示效果更好

68
00:02:48,508 --> 00:02:50,900
这些都只是小的 UI 更改

69
00:02:50,901 --> 00:02:53,109
去掉按钮并稍稍改变我们的

70
00:02:53,110 --> 00:02:54,760
GridView

71
00:02:54,758 --> 00:02:56,798
最后 我还要稍微对

72
00:02:56,800 --> 00:02:59,620
通信进行不同的处理 因为平板电脑在

73
00:02:59,620 --> 00:03:03,560
新的列表项被点击时 不应启动新的 Activity 

74
00:03:03,560 --> 00:03:05,550
我们向下滚动到回调方法

75
00:03:05,550 --> 00:03:07,810
onImageSelected

76
00:03:07,810 --> 00:03:10,120
在这里 我们要更新点击行为

77
00:03:10,120 --> 00:03:12,460
来处理这个双窗格的情况

78
00:03:12,460 --> 00:03:15,218
在双窗格情况下 当列表图像被点击时

79
00:03:15,218 --> 00:03:18,038
我们将立即使用选定的图像资源

80
00:03:18,038 --> 00:03:21,158
将现有的身体部位Fragment替换为更新的

81
00:03:21,158 --> 00:03:22,769
Fragment

82
00:03:22,770 --> 00:03:25,659
首先 我将创建一个 if-else 语句来区分双窗格情况

83
00:03:25,658 --> 00:03:28,000
与单窗格手机情况

84
00:03:28,000 --> 00:03:30,718
然后 要动态替换身体部位Fragment

85
00:03:30,718 --> 00:03:33,250
我们将像之前一样使用 switch 代码来识别

86
00:03:33,250 --> 00:03:35,438
被点击的图像类型--

87
00:03:35,438 --> 00:03:38,258
头部、身体还是腿部

88
00:03:38,258 --> 00:03:41,198
然后相应地创建一个新的身体部位Fragment

89
00:03:41,199 --> 00:03:43,659
设置正确的资源和图像 ID

90
00:03:43,658 --> 00:03:46,408
并替换现有的Fragment

91
00:03:46,408 --> 00:03:48,310
这里我编写了处理头部

92
00:03:48,310 --> 00:03:50,590
Fragment的代码 case 0

93
00:03:50,590 --> 00:03:53,110
如果用户点击了头部图像

94
00:03:53,110 --> 00:03:55,630
则会创建一个新Fragment

95
00:03:55,628 --> 00:03:58,268
它根据点击位置设置

96
00:03:58,270 --> 00:04:00,340
图像列表和图像 ID

97
00:04:00,340 --> 00:04:02,468
最后 使用Fragment事务

98
00:04:02,468 --> 00:04:04,500
它通过引用容器替换现有的

99
00:04:04,500 --> 00:04:06,688
头部Fragment

100
00:04:06,688 --> 00:04:08,769
在下一个练习中 我将留给你来完成

101
00:04:08,770 --> 00:04:11,800
其余Fragment的代码

102
00:04:11,800 --> 00:04:14,290
在选择图像后 当你添加代码替换

103
00:04:14,288 --> 00:04:16,087
所有类型的Fragment后 我们将获得一个

104
00:04:16,088 --> 00:04:18,730
完备的灵活 UI

