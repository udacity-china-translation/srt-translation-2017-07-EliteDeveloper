1
00:00:00,000 --> 00:00:03,000
到目前为止 你写过的所有过程都非常简单

2
00:00:03,000 --> 00:00:06,000
只需要1、2行代码即可完成

3
00:00:06,000 --> 00:00:10,000
现在我们将会尝试一个更加富有挑战性的练习

4
00:00:10,000 --> 00:00:15,000
我将会给它一颗金星来表示这是一个特别具有挑战性的练习

5
00:00:15,000 --> 00:00:20,000
如果你能够通过这个练习 这就证明你真正地理解了这些内容

6
00:00:20,000 --> 00:00:21,000
如果你被卡在这个练习上 也没关系

7
00:00:21,000 --> 00:00:25,000
我会给你一些提示来让它简单一点

8
00:00:25,000 --> 00:00:29,000
希望你在看到答案之后能够理解

9
00:00:29,000 --> 00:00:32,000
你会有更多机会 特别是在作业中 自己尝试一些更难的问题

10
00:00:32,000 --> 00:00:33,000
问题：

11
00:00:33,000 --> 00:00:39,000
你的目标是定义一个过程 我们会称之为 find_second

12
00:00:39,000 --> 00:00:45,000
它需要2个字符串作为输入 第一个输入是搜索字符串

13
00:00:45,000 --> 00:00:47,000
第二个输入是目标字符串

14
00:00:47,000 --> 00:00:51,000
你的目标是打印出

15
00:00:51,000 --> 00:00:53,000
目标字符串在搜索字符串中第二次出现的位置

16
00:00:53,000 --> 00:00:58,000
它应该会生成一个数字作为输出

17
00:00:58,000 --> 00:00:59,000
即目标字符串在搜索字符串中第二次出现的位置

18
00:00:59,000 --> 00:01:04,000
我会向你展示 Python 解释器中的一个例子 显示 find_second 是如何运作的

19
00:01:04,000 --> 00:01:06,000
然后你应该尝试自己解决问题

20
00:01:06,000 --> 00:01:12,000
比如 这是在第一单元中 George Danton 说过的一句话

21
00:01:12,000 --> 00:01:17,000
如果我们运行 find_second 传入 Danton 作为第一个输入

22
00:01:17,000 --> 00:01:18,000
“audace” 作为第二个输入

23
00:01:18,000 --> 00:01:22,000
我们得到的应该是 “audace” 在字符串 Danton 这个输入中

24
00:01:22,000 --> 00:01:24,000
第二次出现的位置

25
00:01:24,000 --> 99:59:59,000
在运行程序时 我们看到结果是25 也就是 audace 第二次出现的位置

