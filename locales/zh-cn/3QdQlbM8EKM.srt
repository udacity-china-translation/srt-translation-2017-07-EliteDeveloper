1
00:00:00,000 --> 00:00:03,000
答案是输入应该是一个字符串

2
00:00:03,000 --> 00:00:05,000
给出网页的剩余内容

3
00:00:05,000 --> 00:00:07,000
这就是"get_next_target"的工作原理

4
00:00:07,000 --> 00:00:11,000
这个过程能从目前的页面找出第一个目标

5
00:00:11,000 --> 00:00:14,000
理解这个过程的一种方法是 如果我们看看这里的代码

6
00:00:14,000 --> 00:00:18,000
这个代码的一个输入使用了很多变量

7
00:00:18,000 --> 00:00:20,000
它定义很多变量

8
00:00:20,000 --> 00:00:24,000
而在它开始运行之前 真正需要的变量的值

9
00:00:24,000 --> 00:00:28,000
恰恰是名为“page”的这个变量

10
00:00:28,000 --> 00:00:30,000
所以 理解该过程的一个方法

11
00:00:30,000 --> 00:00:33,000
就是看看我们试图换掉的代码

12
00:00:33,000 --> 00:00:35,000
这个代码定义很多变量

13
00:00:35,000 --> 00:00:37,000
给它们赋值

14
00:00:37,000 --> 00:00:40,000
而在赋值之前

15
00:00:40,000 --> 00:00:42,000
它在右侧唯一用到的变量是“page”

16
00:00:42,000 --> 00:00:45,000
当它在右侧使用"start_link" 时

17
00:00:45,000 --> 00:00:49,000
代码在上面一行定义了"start_link"

18
00:00:49,000 --> 00:00:52,000
所以它并不关注这个代码中"start_link" 的值

19
00:00:52,000 --> 00:00:54,000
在这个代码中

20
00:00:54,000 --> 00:00:56,000
我们唯一关注的是

21
00:00:56,000 --> 00:00:58,000
变量“page”的值

22
00:00:58,000 --> 00:01:00,000
”page“是什么

23
00:01:00,000 --> 99:59:59,000
它是给出网页剩余内容的字符串

