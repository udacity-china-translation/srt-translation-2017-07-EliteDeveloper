1
00:00:00,000 --> 00:00:03,000
这是定义 find_second 的一种方法

2
00:00:03,000 --> 00:00:06,000
所以我们现在定义一个过程 命名为 find_second

3
00:00:06,000 --> 00:00:08,000
它有2个输入

4
00:00:08,000 --> 00:00:10,000
其中一个输入名为搜索和目标

5
00:00:10,000 --> 00:00:13,000
你可以任意起名

6
00:00:13,000 --> 00:00:14,000
但是给它们起一些能够提示其含义的名称比较合理

7
00:00:14,000 --> 00:00:18,000
接着 我们要做的第一件事是找到目标第一次出现的位置

8
00:00:18,000 --> 00:00:22,000
所以我们将会使用 search.find 传入目标来查找它第一次出现的位置

9
00:00:22,000 --> 00:00:25,000
现在我们将它们储存在一个变量里

10
00:00:25,000 --> 00:00:28,000
为了查找目标第二次出现的位置 我们必须再次搜索

11
00:00:28,000 --> 00:00:30,000
所以 我们将调用 search.find 程序

12
00:00:30,000 --> 00:00:34,000
这回我们需要用到第二个输入 也就是 first+1

13
00:00:34,000 --> 00:00:36,000
来表示在 first+1 这个位置之后查找目标第一次出现的位置

14
00:00:36,000 --> 00:00:39,000
我们将它储存在 second 这个变量中 然后返回 second

15
00:00:39,000 --> 00:00:44,000
所以 这就是练习中用到的实现方法

16
00:00:44,000 --> 00:00:46,000
我们可以把它变得简单点

17
00:00:46,000 --> 00:00:51,000
其中一个简单化的方法是——事实上 我们不需要 second 这个变量

18
00:00:51,000 --> 00:00:57,000
我们可以立刻返回 second 所以现在我们只有2行

19
00:00:57,000 --> 00:01:01,000
我们会再次进行同样的测试 来显示它仍然能够运作

20
00:01:01,000 --> 00:01:03,000
我们甚至可以把它变得比这个还要简单

21
00:01:03,000 --> 00:01:06,000
我们甚至不需要 first 这个变量

22
00:01:06,000 --> 00:01:10,000
我们可以把这里的 first 替换成搜索来查找目标第一次出现的位置

23
00:01:10,000 --> 00:01:13,000
然后 我们不需要变量 first

24
00:01:13,000 --> 00:01:14,000
我们只需要1行

25
00:01:14,000 --> 00:01:17,000
这些方法当中哪一个是最佳的？这是个好问题

26
00:01:17,000 --> 00:01:22,000
我认为可能之前的那个方案比这一个要更好

27
00:01:22,000 --> 00:01:26,000
这是一个很复杂的表达式 读起来很困难

28
00:01:26,000 --> 00:01:32,000
我们把它分离成变量 first

29
00:01:32,000 --> 00:01:35,000
然后在这里使用 first 意义是一样的 生成的结果也是一样的

30
00:01:35,000 --> 00:01:38,000
这让理解目前状况变得容易一些

31
00:01:38,000 --> 00:01:41,000
所以我更喜欢这个版本的过程

32
00:01:41,000 --> 99:59:59,000
当然 每一个方案都可行 而且运作良好

