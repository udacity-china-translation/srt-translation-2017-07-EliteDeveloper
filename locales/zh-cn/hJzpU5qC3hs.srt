1
00:00:00,160 --> 00:00:04,318
要完成这个 先来看看我们之前写的伪代码 这里有一个 while 循环

2
00:00:04,318 --> 00:00:08,542
其中的停止条件为 是否 date1 在 date2 之前

3
00:00:08,542 --> 00:00:12,766
接着是主体部分 对日期进行递增 那么我们目前已经

4
00:00:12,766 --> 00:00:16,840
做到了这一部分 我们实现了 nextDay 函数 并准备好

5
00:00:16,840 --> 00:00:20,600
将其转换为代码 如果要写一个辅助函数 我们应该写

6
00:00:20,600 --> 00:00:24,380
一些东西来让日期比较更加简单

7
00:00:24,380 --> 00:00:27,980
比起直接在 daysBetweenDates 中实现日期比较 写一个辅助函数

8
00:00:27,980 --> 00:00:31,570
会好得多 知道一个日期是否在另一个日期之前可能

9
00:00:31,570 --> 00:00:35,389
会对我们很有帮助 之后也确实会在另一个情境中

10
00:00:35,389 --> 00:00:39,079
用到它 而把它写成独立的辅助函数的

11
00:00:39,079 --> 00:00:42,694
另一个好处是 我们可以对其进行单独测试 因此比起

12
00:00:42,694 --> 00:00:46,204
立刻开始动手写 daysBetweenDates 函数 先写一个辅助函数

13
00:00:46,204 --> 00:00:50,422
来确定停止条件 会更加有意义一些 所以 让我们马上开始吧

14
00:00:50,422 --> 00:00:54,758
我们将要写一个 dateIsBefore 函数 将两个日期作为输入

15
00:00:54,758 --> 00:00:59,306
日期有三个值组成 之后它将返回 True 或者 False

16
00:00:59,306 --> 00:01:04,292
来告诉我们年月日1 (year1、month1、day1)
是否在年月日2 (year2、month2、day2) 之前

17
00:01:04,292 --> 00:01:07,236
如果你之前不会写 daysBetweenDates 的话

18
00:01:07,236 --> 00:01:10,252
那么在听了这个提示后 请再尝试一遍 看看你能不能首先

19
00:01:10,252 --> 00:01:14,509
写出 dateIsBefore 函数 之后在你继续写 daysBetweenDates 之前

20
00:01:14,509 --> 00:01:17,469
先测试一下它是否正确 接下来我将给你展示我的代码
