1
00:00:00,000 --> 00:00:02,000
涉及这个资料结构的最后一个问题

2
00:00:02,000 --> 00:00:08,000
我们想要建立一个字典 包含学期 (hexamesters) 作为 key

3
00:00:08,000 --> 00:00:12,000
value 是个列表 与某个人参与 (involved) 的课程列表

4
00:00:12,000 --> 00:00:14,000
现在 我们看看 Dave

5
00:00:14,000 --> 00:00:17,000
在 2012 年 4 月 他参与了两个课程

6
00:00:17,000 --> 00:00:22,000
cs101 计算机科学简介课程 和 cs387 应用加密技术课程

7
00:00:22,000 --> 00:00:25,000
字典继续下去 但结构保持不变

8
00:00:25,000 --> 00:00:30,000
key 是学期 (hexamester)  而 value 是那个人所参与

9
00:00:30,000 --> 00:00:31,500
的课程列表

10
00:00:31,500 --> 00:00:34,000
所以你可能会问自己一个问题 “参与” (involved) 是什么意思？

11
00:00:34,000 --> 00:00:36,000
如果回到我们的资料结构 我们要做的是

12
00:00:36,000 --> 00:00:40,000
看看与课程相关的 'name/value' 配对

13
00:00:40,000 --> 00:00:45,000
所以如果我们寻找 Steve Steve 与 cs253 

14
00:00:45,000 --> 00:00:47,000
网站开发课程相关

15
00:00:47,000 --> 00:00:48,500
这就是我们要做的事

16
00:00:48,500 --> 00:00:52,000
我们要走遍每个课程 去看 'name/value' 配对中的 value

17
00:00:52,000 --> 00:00:55,000
如果 value 是我们正在寻找的值

18
00:00:55,000 --> 00:00:58,000
那么我们就把这个课程加入字典

19
00:00:58,000 --> 00:01:01,000
这个字典与学期 (hexamester) 的 key 相关

20
00:01:01,000 --> 00:01:03,000
这听起来有点令人难以理解 而答案也有点长

21
00:01:03,000 --> 00:01:05,000
但它真的只是一个简单的想法

22
00:01:05,000 --> 00:01:07,000
我要做的第一件事是建立 output 字典

23
00:01:07,000 --> 00:01:09,000
我们要走遍每个学期 (hexamester)

24
00:01:09,000 --> 00:01:12,000
我们要走遍每学期的每一门课

25
00:01:12,000 --> 00:01:16,000
我们要走遍 'name/value' 的每个 key

26
00:01:16,000 --> 00:01:20,000
如果与这些相关的 value 是我们要寻找的人

27
00:01:20,000 --> 00:01:22,000
那么我们要更新我们的 output 字典

28
00:01:22,000 --> 00:01:25,000
如果这个学期已经是 output 字典的 key

29
00:01:25,000 --> 00:01:29,000
我们只要将课程加到与学期相关的

30
00:01:29,000 --> 00:01:31,000
列表末尾

31
00:01:31,000 --> 00:01:36,000
否则 我们要建立新的列表 这门课程是它唯一的值

32
00:01:36,000 --> 00:01:39,000
一旦我们完成了 for loop 我们传回 output 字典