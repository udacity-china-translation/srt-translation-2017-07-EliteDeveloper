1
00:00:00,000 --> 00:00:03,000
这些是前面的六个三角数

2
00:00:03,000 --> 00:00:09,000
它们是通过获取某个位置 然后将 1 到这个位置的所有数字求和所形成的

3
00:00:09,000 --> 00:00:14,000
第一个数字是 1 第二个数字是 2

4
00:00:14,000 --> 00:00:19,000
请注意与 Python 不同的是 我们的索引从 1 开始

5
00:00:19,000 --> 00:00:27,000
N 等于 3 第三个数字是 1 + 2 + 3 的总和 也就是 6

6
00:00:27,000 --> 00:00:34,000
第四个数字是 1 + 2 + 3 + 4 也就是 10

7
00:00:34,000 --> 00:00:39,000
现在 我们该如何获取这些数字  从 1 到 4 的总和

8
00:00:39,000 --> 00:00:44,000
嗯 Python 有个好方法能做到这一点 也就是使用 range (范围)

9
00:00:44,000 --> 00:00:49,000
现在 我们想要数字从 1 开始 希望他们在 4 结束

10
00:00:49,000 --> 00:00:54,000
现在 range 的运作方法是这样的 我采用第一个输入并从这里开始

11
00:00:54,000 --> 00:00:57,000
然后它在比 '最后的输入小 1' 的数字结束

12
00:00:57,000 --> 00:01:01,000
为了得到 4 我们必须采取 range 从 1 到 5

13
00:01:01,000 --> 00:01:07,000
当我们写这个过程时 我们要使用 range 而不是 for

14
00:01:07,000 --> 00:01:14,000
这意味着我们的范围必须是从 1 到 n + 1

15
00:01:14,000 --> 00:01:17,000
现在 我们准备好写这个过程

16
00:01:17,000 --> 00:01:24,000
过程的名称是 triangular 它需要一个输入 正整数 n

17
00:01:24,000 --> 00:01:31,000
我们想要输出或传回一个数字 第 n 个三角数

18
00:01:31,000 --> 00:01:33,000
我称它为 number

19
00:01:33,000 --> 00:01:39,000
我们想要依次通过所有数字 从范围内的 1 到 n

20
00:01:39,000 --> 00:01:43,000
别忘了加 1 以确保我们可以往上加到 n

21
00:01:43,000 --> 00:01:49,000
我们只要在循环中 加入每个遇到的 i 值

22
00:01:49,000 --> 00:01:52,000
当我们完成后 我们要传回 number

