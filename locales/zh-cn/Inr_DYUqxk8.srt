1
00:00:00,000 --> 00:00:04,000
我们已经修改了 get_next_target (寻找下一目标) 过程

2
00:00:04,000 --> 00:00:09,000
如果没有下一目标 程序就返回 None (无) 这是第一个输出

3
00:00:09,000 --> 00:00:12,000
否则 就返回 URL (网址) 和 end_quote (结束引用) 

4
00:00:12,000 --> 00:00:15,000
现在我们要做的是让程序继续运行

5
00:00:15,000 --> 00:00:17,000
先来看看我们之前所做的

6
00:00:17,000 --> 00:00:19,000
我们将这4行代码变成了一个过程

7
00:00:19,000 --> 00:00:22,000
所以 现在我们就不用再写一遍这些代码

8
00:00:22,000 --> 00:00:25,000
而是可以直接调用 get_next_target

9
00:00:25,000 --> 00:00:27,000
并赋值结果

10
00:00:27,000 --> 00:00:30,000
我们已经有 URL 的值 并且想将其打印出来

11
00:00:30,000 --> 00:00:32,000
现在我们仍然会将其打印出来

12
00:00:32,000 --> 00:00:34,000
而且我们仍然想要更新页面的值

13
00:00:34,000 --> 00:00:37,000
但我们不想使用 end_quote 了

14
00:00:37,000 --> 00:00:40,000
我们想用的是这里返回的值

15
00:00:40,000 --> 00:00:43,000
也就是我们赋给变量 endpos (结束位置) 的值

16
00:00:43,000 --> 00:00:46,000
接下来 我们再来一遍

17
00:00:46,000 --> 00:00:51,000
这里的所有代码就是再次调用 get_next_target

18
00:00:51,000 --> 00:00:54,000
同样的 这里应该是 endpos 而不是 end_quote

19
00:00:54,000 --> 00:00:58,000
我们想一直继续到结束

20
00:00:58,000 --> 00:01:00,000
但什么时候才是结束呢？

21
00:01:00,000 --> 00:01:03,000
当返回的 URL 是 none 时

22
00:01:03,000 --> 00:01:05,000
就是结束

23
00:01:05,000 --> 00:01:09,000
当调用的 get_next_target 返回 none

24
00:01:09,000 --> 00:01:12,000
我们就知道 程序结束了

25
00:01:12,000 --> 00:01:14,000
让程序继续的一种方式就是 while 循环

26
00:01:14,000 --> 00:01:16,000
我们知道如何做判断

27
00:01:16,000 --> 00:01:18,000
我们想要判断 URL

28
00:01:18,000 --> 00:01:21,000
要打印页面上的所有链接 我们已经掌握了所需的全部知识

29
00:01:21,000 --> 00:01:24,000
我会开个头 教你们如何写这个程序

30
00:01:24,000 --> 00:01:26,000
之后你们就自己完成

31
00:01:26,000 --> 00:01:29,000
我们将定义一个过程

32
00:01:29,000 --> 00:01:31,000
打印出页面上的所有链接

33
00:01:31,000 --> 00:01:36,000
输入为该页面 我们想用一个 while 循环来让程序持续运行

34
00:01:36,000 --> 00:01:41,000
我将把 while 循环的判断条件留为空白

35
00:01:41,000 --> 00:01:43,000
由你们去填

36
00:01:43,000 --> 00:01:46,000
在 while 循环的主体语句中 我们将调用 get_next_target

37
00:01:46,000 --> 00:01:50,000
将 URL 和 endpos 赋值给结果

38
00:01:50,000 --> 00:01:54,000
这和我们之前示范的代码是一样的

39
00:01:54,000 --> 00:01:57,000
现在我们要做的是 检查是否有一个有效 URL

40
00:01:57,000 --> 00:02:00,000
这就是这一块要做的事情

41
00:02:00,000 --> 00:02:04,000
假设我们总是有一个有效 URL

42
00:02:04,000 --> 00:02:07,000
我们将其打印出来 程序继续运行

43
00:02:07,000 --> 00:02:11,000
但是我们还需要判断 我们得到的 URL 是否是 None

44
00:02:11,000 --> 00:02:13,000
这就是我们将要做的

45
00:02:13,000 --> 00:02:17,000
这里是 if URL 如果为真 就意味着我们找到了一个有效 URL

46
00:02:17,000 --> 00:02:20,000
从 get_next_target 得到的结果不是 none

47
00:02:20,000 --> 00:02:24,000
那么和之前一样 我们想将其打印出来

48
00:02:24,000 --> 00:02:28,000
我们将打印这个 URL 并继续搜索余下内容

49
00:02:28,000 --> 00:02:30,000
直到下一个位置

50
00:02:30,000 --> 00:02:32,000
如果我们没找到有效 URL

51
00:02:32,000 --> 00:02:37,000
这意味着 get_next_target 没有找到链接

52
00:02:37,000 --> 00:02:39,000
页面上没有更多链接了

53
00:02:39,000 --> 00:02:43,000
那我们就要做点别的什么

54
00:02:43,000 --> 00:02:45,000
我在这里也留一个空

55
00:02:45,000 --> 00:02:47,000
这就是 print_all_links (打印所有链接) 所需要的全部代码

56
00:02:47,000 --> 00:02:50,000
有两处空白是要你们去填的

57
00:02:50,000 --> 00:02:53,000
看你们是否能想出 while 的判断条件

58
00:02:53,000 --> 00:02:56,000
以及 else 的程序块

59
00:02:56,000 --> 00:02:59,000
如果你们写对了 就可以打印出页面上的所有链接

