1
00:00:00,285 --> 00:00:02,660
我之前提到 Fragment

2
00:00:02,660 --> 00:00:06,349
本质上是可重用的 UI 类似于布局

3
00:00:06,349 --> 00:00:07,359
或视图组

4
00:00:07,360 --> 00:00:08,960
它们可以根据屏幕尺寸

5
00:00:08,960 --> 00:00:10,650
进行不同的排列

6
00:00:10,650 --> 00:00:13,429
它们通常用于创建单窗格和多窗格

7
00:00:13,429 --> 00:00:17,239
布局 这取决于对给定屏幕大小来说哪种最有效

8
00:00:17,239 --> 00:00:20,989
例如 这是 Gmail 应用 其中包含一系列电子邮件

9
00:00:20,989 --> 00:00:23,809
以及它们显示在不同手机屏幕上的

10
00:00:23,809 --> 00:00:24,910
不同内容

11
00:00:24,910 --> 00:00:28,160
但是在平板电脑上 电子邮件列表和内容

12
00:00:28,160 --> 00:00:30,079
并列显示 因为有足够的空间

13
00:00:30,079 --> 00:00:32,000
同时显示它们两个

14
00:00:32,000 --> 00:00:34,460
所以 Gmail 应用的布局根据 Android 设备

15
00:00:34,460 --> 00:00:36,689
的屏幕大小而改变

16
00:00:36,689 --> 00:00:38,598
无论是小的手机屏幕

17
00:00:38,600 --> 00:00:40,460
还是大的平板电脑屏幕

18
00:00:40,460 --> 00:00:42,920
它使用 Fragment 来定义每个布局

19
00:00:42,920 --> 00:00:45,560
并有效地使用屏幕空间 以使所有内容

20
00:00:45,560 --> 00:00:47,660
都清晰可读

21
00:00:47,658 --> 00:00:49,518
许多天气应用也是如此

22
00:00:49,520 --> 00:00:52,550
它们通常有一列日期和对应的详细视图

23
00:00:52,548 --> 00:00:56,000
而这些在手机和平板电脑的屏幕上以不同的布局显示

24
00:00:56,000 --> 00:00:59,210
联系人应用和许多其他例子都是如此

25
00:00:59,210 --> 00:01:01,160
手机屏幕会对信息列表和详细内容视图

26
00:01:01,158 --> 00:01:04,408
分别使用单独的 Activity 

27
00:01:04,409 --> 00:01:08,209
而平板电脑并排显示这些视图

28
00:01:08,209 --> 00:01:11,549
事实上 这个模式非常常见 人们还给它起了个名字

29
00:01:11,549 --> 00:01:14,179
叫做“主/次流”(Master Detail Flow)

30
00:01:14,180 --> 00:01:17,510
其中主项目列表 - 像联系人姓名或电子邮件

31
00:01:17,510 --> 00:01:19,969
会占用整个手机屏幕 但只会

32
00:01:19,968 --> 00:01:22,428
占据平板电脑屏幕的左侧部分

33
00:01:22,430 --> 00:01:24,980
而详细内容窗格 - 这通常会显示主列表中

34
00:01:24,980 --> 00:01:27,910
所选项目的详细信息

35
00:01:27,909 --> 00:01:30,959
会作为一个单独 Activity 占用整个手机屏幕

36
00:01:30,959 --> 00:01:34,305
但仅占较大的平板电脑屏幕的右侧部分

37
00:01:34,307 --> 00:01:36,890
这是我们将为 AndroidMe 应用实现的

38
00:01:36,890 --> 00:01:40,439
模式 其中包含显示所有自定义 Android 图像的主列表

39
00:01:40,438 --> 00:01:42,619
的Fragment 以及显示

40
00:01:42,620 --> 00:01:46,859
Android 的详细全身图像部分的 Fragment

41
00:01:46,858 --> 00:01:49,428
然后 我们将根据设备屏幕的大小

42
00:01:49,430 --> 00:01:52,620
将它们排列在单窗格和多窗格布局中

43
00:01:52,620 --> 00:01:55,310
那么我们如何构建这样的东西呢？

44
00:01:55,310 --> 00:01:56,960
要在平板电脑上实现这一点 我们将

45
00:01:56,959 --> 00:01:59,539
有一个主 Activity  包含我们的主列表

46
00:01:59,540 --> 00:02:03,470
Fragment 即我们将从中进行选择的所有图像的主列表

47
00:02:03,468 --> 00:02:05,268
然后在屏幕的右侧

48
00:02:05,269 --> 00:02:07,728
我们将共有三个身体部分 Fragment

49
00:02:07,730 --> 00:02:11,030
包括我们要构建的 Android 的头部

50
00:02:11,030 --> 00:02:12,770
身体和腿部

51
00:02:12,770 --> 00:02:15,590
而在手机上 我们会将主列表 Fragment 和

52
00:02:15,590 --> 00:02:18,289
身体部分 Fragment 放在两个单独的 Activity 中

53
00:02:18,288 --> 00:02:21,168
并使每个占用手机屏幕的整个区域

54
00:02:21,169 --> 00:02:24,019
我们会清楚地顺次看到每一个

55
00:02:24,020 --> 00:02:25,730
要完成此应用 你将获得

56
00:02:25,729 --> 00:02:27,919
一些起始代码 以及一些任务

57
00:02:27,919 --> 00:02:30,109
来帮助你构建最终 UI

58
00:02:30,110 --> 00:02:33,050
接下来 我们将详细讲解为什么要使用 Fragment 而不是

59
00:02:33,050 --> 00:02:34,340
简单的视图组

60
00:02:34,340 --> 00:02:36,840
然后进入代码部分

