1
00:00:00,285 --> 00:00:02,880
我们想在“添加新位置” (Add New Location) 按钮被点击后

2
00:00:02,879 --> 00:00:04,589
启动 PlacePicker

3
00:00:04,589 --> 00:00:08,830
逻辑将进入这里的点击事件处理器

4
00:00:08,830 --> 00:00:10,870
现在 要启动 PlacePicker 界面

5
00:00:10,869 --> 00:00:14,039
你需要创建一个 intent 并启动新的 Activity 

6
00:00:14,039 --> 00:00:16,829
要这样做 在 MainActivity 中

7
00:00:16,829 --> 00:00:19,679
我们将使用 PlacePicker.intentBuilder

8
00:00:19,679 --> 00:00:22,079
来创建 intent 构造器 然后

9
00:00:22,079 --> 00:00:24,000
调用 build 来创建 intent

10
00:00:26,850 --> 00:00:28,580
在创建好 intent 后

11
00:00:28,579 --> 00:00:31,409
我们将调用 startActivityForResult

12
00:00:31,410 --> 00:00:34,170
并传入 intent 以及自定义的

13
00:00:34,170 --> 00:00:35,890
任意请求代码

14
00:00:35,890 --> 00:00:38,340
我在这里已经定义了常数

15
00:00:38,340 --> 00:00:42,930
PLACE_PICKER_REQUEST 作为用于该用途的常数

16
00:00:42,929 --> 00:00:45,269
那么当用户选择一个地点

17
00:00:45,270 --> 00:00:48,540
或点击“取消” (Cancel) 时 startActivityForResult 方法

18
00:00:48,539 --> 00:00:51,060
将以指定的 intent 启动一个新 Activity 

19
00:00:51,060 --> 00:00:54,780
并最终返回到 MainActivity

20
00:00:54,780 --> 00:00:56,789
现在 为了处理用户的操作

21
00:00:56,789 --> 00:01:00,019
我们需要实施 OnActivityResult 方法 该方法在

22
00:01:00,020 --> 00:01:01,770
PlacePicker Activity 完成时

23
00:01:01,770 --> 00:01:02,970
触发

24
00:01:02,969 --> 00:01:07,019
但是需要记住一点 每当

25
00:01:07,019 --> 00:01:09,089
startActivityForResult 方法启动的任何 Activity

26
00:01:09,090 --> 00:01:12,359
完成时 onActivityResult 都将被

27
00:01:12,359 --> 00:01:13,679
调用

28
00:01:13,680 --> 00:01:16,797
这就是为什么在 onActivityResult 里面

29
00:01:16,796 --> 00:01:18,629
我们需要检查请求代码是否

30
00:01:18,629 --> 00:01:21,599
与我们在上面这里启动 PlacePicker Activity 时

31
00:01:21,599 --> 00:01:23,619
所使用的代码相同

32
00:01:23,620 --> 00:01:26,910
如果是这样 即请求代码匹配

33
00:01:26,909 --> 00:01:30,030
且结果为 OK 你便能找出用户选择的

34
00:01:30,030 --> 00:01:31,859
地点是哪个

35
00:01:31,859 --> 00:01:35,069
所以 PlacePicker.getPlace 

36
00:01:35,069 --> 00:01:37,649
将以 place 对象的形式为你获取有关所选地点

37
00:01:37,650 --> 00:01:39,990
的所有信息

38
00:01:39,989 --> 00:01:41,849
接下来 我们要将选定地点的信息

39
00:01:41,849 --> 00:01:44,640
存储到我们的数据库中

40
00:01:44,640 --> 00:01:47,430
不幸的是 Google 的条款和条件

41
00:01:47,430 --> 00:01:49,920
禁止保存任何地点信息

42
00:01:49,920 --> 00:01:53,280
地点 ID 除外 可保存 30 天以上

43
00:01:53,280 --> 00:01:56,129
这意味着我们只能存储地点 ID

44
00:01:56,129 --> 00:01:58,469
然后在需要时从服务器

45
00:01:58,469 --> 00:02:00,879
检索地点详细信息

46
00:02:00,879 --> 00:02:03,959
那么目前 我们先将地点 ID 存储到数据库中

47
00:02:03,959 --> 00:02:05,878
然后在下一个练习中 我们将

48
00:02:05,879 --> 00:02:07,920
再次从服务器中检索位置详细信息

49
00:02:07,920 --> 00:02:11,219
然后将它们显示在 RecyclerView 中

50
00:02:11,219 --> 00:02:13,949
那么回到代码中 我们从 place 对象中提取

51
00:02:13,949 --> 00:02:17,129
placeID 然后通过创建一个 contentValue 对象

52
00:02:17,129 --> 00:02:19,620
将其插入到数据库中

53
00:02:19,620 --> 00:02:24,216
然后传入到 ContentResolver.insert 方法

54
00:02:24,216 --> 00:02:25,590
你可能注意到在上面这里

55
00:02:25,590 --> 00:02:27,756
Android Studio 提示 PlacePicker 

56
00:02:27,756 --> 00:02:30,122
未放在 try/catch 语句中

57
00:02:30,122 --> 00:02:32,580
这一点非常重要 因为如果设备没有

58
00:02:32,580 --> 00:02:35,070
安装最新的 Google Play Services

59
00:02:35,069 --> 00:02:37,189
这将导致应用崩溃

60
00:02:37,189 --> 00:02:39,449
那么 要适当处理这个情况 我们实际上可以

61
00:02:39,449 --> 00:02:42,299
捕捉这些特定的异常情况 并向用户显示一条

62
00:02:42,300 --> 00:02:45,060
消息 说明他们需要安装或更新

63
00:02:45,060 --> 00:02:47,740
Google Play Services 才能继续

64
00:02:47,740 --> 00:02:49,860
但是 在这个特定练习中

65
00:02:49,860 --> 00:02:53,460
我将只是将此异常记录为消息

66
00:02:53,460 --> 00:02:55,770
现在 PlacePicker 应该连接到了

67
00:02:55,770 --> 00:02:59,090
“添加新位置”按钮 但是还不会向 RecyclerView

68
00:02:59,090 --> 00:03:00,539
添加任何东西

69
00:03:00,539 --> 00:03:04,159
我们将在下一个练习中研究添加此功能

