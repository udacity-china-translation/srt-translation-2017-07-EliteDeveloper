1
00:00:00,000 --> 00:00:04,049
本次练习的目标是 定义添加网页进索引的过程

2
00:00:04,049 --> 00:00:07,068
共需三次输入 首先输入索引

3
00:00:07,068 --> 00:00:10,050
我在这里画好了索引 提醒大家索引的结构

4
00:00:10,050 --> 00:00:14,098
这是一个列表 列表中每个元素包含一个关键词

5
00:00:14,098 --> 00:00:17,089
和关键词出现的 URL 列表

6
00:00:17,088 --> 00:00:20,074
再输入 URL

7
00:00:20,074 --> 00:00:24,032
即内容出现的网页位置

8
00:00:24,032 --> 00:00:26,032
最后输入内容

9
00:00:26,032 --> 00:00:31,022
即 URL 所在位置的网页上出现的所有文本内容

10
00:00:31,022 --> 00:00:34,027
结果会更新索引 并通过将 URL 添加进与之有关联的词中

11
00:00:34,027 --> 00:00:40,081
来包含网页内容出现的所有词

12
00:00:40,081 --> 00:00:44,057
我会举几个例子 阐明添加索引的操作

13
00:00:44,057 --> 00:00:47,014
之后各位可自己进行定义

14
00:00:47,014 --> 00:00:49,054
首先是空白索引

15
00:00:49,054 --> 00:00:52,032
我们称之为 add_page_to_index (添加网页至索引)

16
00:00:52,031 --> 00:00:55,034
打印看看索引有什么变化

17
00:00:55,034 --> 00:01:00,017
这么看不太容易 那么来看看位置0的索引

18
00:01:00,018 --> 00:01:05,009
可以看到 URL 中出现的关键词是 fake.test

19
00:01:05,009 --> 00:01:07,093
再打印位置1的索引

20
00:01:07,093 --> 00:01:12,004
同样的情况也会出现 但这次是关键词 is

21
00:01:12,004 --> 00:01:13,064
那么 元素有了

22
00:01:13,063 --> 00:01:14,069
索引有了

23
00:01:14,069 --> 00:01:16,063
索引里也有了四个词

24
00:01:16,063 --> 00:01:19,044
分别是this、is、a 和 test

25
00:01:19,045 --> 00:01:23,081
出现上述每个词的 URL 列表都是 fake.test

26
00:01:23,081 --> 00:01:26,009
就是我们这里传入的 URL

27
00:01:26,009 --> 00:01:29,039
我们来试试 往索引中添加其它内容

28
00:01:29,039 --> 00:01:32,085
这次 我们添加一个叫做 real.test 的网页

29
00:01:32,084 --> 00:01:35,084
网页内容是 this is not a test

30
00:01:35,084 --> 00:01:39,042
运行时 就可看到该索引

31
00:01:39,043 --> 00:01:44,006
如果看向特定元素 比如位置2的元素

32
00:01:44,006 --> 00:01:46,019
会发现 URL 列表中包含两个元素

33
00:01:46,019 --> 00:01:49,063
因为我们传入的两个网页都包含 is

34
00:01:49,063 --> 00:01:52,999
看一下位置4

35
00:01:52,001 --> 00:01:57,097
可以发现 not 这个词只出现在 real.test 网页中

36
00:01:57,097 --> 00:02:00,070
所以它的 URL 列表只包含一个元素

37
00:02:00,070 --> 00:02:04,015
我们已经对响应新查询的过程进行了定义

38
00:02:04,015 --> 00:02:06,048
在该索引下应该也可以运行 我们来试试

39
00:02:06,048 --> 00:02:14,003
在 lookup 项里是 index 和关键词 is 返回关键词前的 URL 列表

40
00:02:14,002 --> 00:02:18,065
删除之前的测试 再看看我们搜索情况

41
00:02:18,066 --> 00:02:21,033
我们发现 is 在两个网页都出现了

42
00:02:21,033 --> 00:02:25,043
搜索 udacity  则会发现它没有出现在任何网页

43
00:02:25,044 --> 00:02:29,002
希望现在大家对 add_page_to_index 应该做什么都很清楚了

44
00:02:29,002 --> 99:59:59,000
让我们来看看 大家能不能编写代码 来对 add_page_to_index 进行定义

