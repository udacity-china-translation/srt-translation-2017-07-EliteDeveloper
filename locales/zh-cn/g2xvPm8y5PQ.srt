1
00:00:00,054 --> 00:00:01,470
理解 Fragment 的

2
00:00:01,470 --> 00:00:03,298
创建和显示方法的最简单途径

3
00:00:03,298 --> 00:00:05,189
就是直接看代码

4
00:00:05,190 --> 00:00:07,316
现在 我们的应用什么都没显示

5
00:00:07,315 --> 00:00:08,939
我们想创建 Fragment

6
00:00:08,939 --> 00:00:11,070
来显示 Android 的身体部位

7
00:00:11,070 --> 00:00:13,589
首先我们来显示头部

8
00:00:13,589 --> 00:00:15,929
要创建 Fragment 我要做的第一件事

9
00:00:15,929 --> 00:00:17,910
是定义一个新的布局文件 表明我想要的

10
00:00:17,910 --> 00:00:19,920
Fragment 外观

11
00:00:19,920 --> 00:00:21,929
此布局将定义我想让此 Fragment

12
00:00:21,928 --> 00:00:24,058
包含什么视图

13
00:00:24,059 --> 00:00:27,629
我要将此命名为 fragment_body_part

14
00:00:27,629 --> 00:00:29,278
我想让它显示头部或任何其他

15
00:00:29,280 --> 00:00:31,320
身体部位的图像

16
00:00:31,320 --> 00:00:34,408
所以我让它作为单个 ImageView 

17
00:00:34,408 --> 00:00:36,298
然后点击 OK 进行创建

18
00:00:36,298 --> 00:00:39,509
在这里面 可以看到它只是单个 ImageView

19
00:00:39,509 --> 00:00:42,670
现在我们有了 ImageView 我只需给它一个 ID

20
00:00:42,670 --> 00:00:45,100
以便在之后引用它

21
00:00:45,100 --> 00:00:47,850
始终提供描述性 ID 是一个好的习惯

22
00:00:47,850 --> 00:00:51,450
我给这个 ImageView 一个 ID：body_part_image_view

23
00:00:51,450 --> 00:00:54,750
然后我要在顶部添加一个描述性注释

24
00:00:54,750 --> 00:00:56,399
现在我们回到 TODO 项

25
00:00:56,399 --> 00:00:58,530
下一步是创建一个新类

26
00:00:58,530 --> 00:01:00,929
叫作 BodyPartFragment 它会显示

27
00:01:00,929 --> 00:01:03,118
Android Me 身体部位的图像

28
00:01:03,118 --> 00:01:05,120
此 Fragment 类会填充我们

29
00:01:05,120 --> 00:01:07,600
刚创建的布局

30
00:01:07,599 --> 00:01:09,899
那么在 ui 文件夹中 我要通过创建一个新类

31
00:01:09,900 --> 00:01:12,130
来创建Fragment

32
00:01:12,129 --> 00:01:15,179
我将其命名为 BodyPartFragment 它将保存 Android 

33
00:01:15,180 --> 00:01:19,220
身体部位图像 其超类将是 Fragment

34
00:01:19,218 --> 00:01:22,140
我使用的是来自 support 库的 Fragment

35
00:01:22,140 --> 00:01:23,739
然后点击 OK

36
00:01:23,739 --> 00:01:27,118
现在我们有一个扩展自 Fragment 的空类

37
00:01:27,120 --> 00:01:28,950
此扩展很重要 因为

38
00:01:28,950 --> 00:01:32,049
Android 将通过它知道如何处理此类 以及其作为 Fragment

39
00:01:32,049 --> 00:01:34,769
的生命周期事件和创建

40
00:01:34,769 --> 00:01:38,109
现在每个Fragment会实现几种方法

41
00:01:38,108 --> 00:01:39,750
第一个是实例化Fragment

42
00:01:39,750 --> 00:01:42,688
所需的空构造函数

43
00:01:42,688 --> 00:01:45,339
第二个是 onCreateView 方法

44
00:01:45,340 --> 00:01:47,790
它在我们刚创建的 Fragment 填充显示

45
00:01:47,790 --> 00:01:51,892
时调用 类似于 Activity 的 onCreate

46
00:01:51,891 --> 00:01:53,849
所以对你创建的任何 Fragment 请确保实现

47
00:01:53,849 --> 00:01:55,769
这两种方法

48
00:01:55,769 --> 00:01:57,959
onCreateView 中是我们编写代码

49
00:01:57,959 --> 00:02:00,569
填充 BodyPartFragment 布局的地方

50
00:02:00,569 --> 00:02:03,159
我将调用此 inflatedLayoutRootView

51
00:02:03,159 --> 00:02:05,099
我还将对我们的 body_part_image_view

52
00:02:05,099 --> 00:02:08,310
调用 findViewByID 来引用这将显示的

53
00:02:08,310 --> 00:02:09,780
ImageView

54
00:02:09,780 --> 00:02:11,818
现在 我还能够将图像资源设置为

55
00:02:11,818 --> 00:02:14,008
我想要它显示的任何图像

56
00:02:14,008 --> 00:02:15,809
的 ID

57
00:02:15,810 --> 00:02:18,030
我们暂时显示头像列表中

58
00:02:18,030 --> 00:02:19,568
的第一个图像

59
00:02:19,568 --> 00:02:22,078
要获得列表 我们使用实用工具类

60
00:02:22,080 --> 00:02:26,219
AndroidImageAssets 并调用 getHeads

61
00:02:26,218 --> 00:02:30,358
这将返回我们感兴趣的所有图像 ID 的列表

62
00:02:30,360 --> 00:02:33,540
最后 我们调用 get(0) 来获取

63
00:02:33,538 --> 00:02:35,668
列表中索引 0 处的第一个项

64
00:02:35,669 --> 00:02:39,539
稍后我们将更新此代码 以显示我们想要的任何图像

65
00:02:39,538 --> 00:02:41,218
最后一步 我将返回这个创建的

66
00:02:41,218 --> 00:02:43,079
rootView

67
00:02:43,080 --> 00:02:44,290
现在我们就基本完成了

68
00:02:44,288 --> 00:02:46,888
我们创建了 Fragment 类及其布局

69
00:02:46,889 --> 00:02:49,618
但是我们需要在 AndroidMeActivity 中包含一些

70
00:02:49,620 --> 00:02:51,840
实际显示Fragment的代码

71
00:02:51,840 --> 00:02:53,520
这是因为每个Fragment需要

72
00:02:53,520 --> 00:02:55,740
嵌入到 HostActivity 中

73
00:02:55,740 --> 00:02:58,560
那么我们返回 AndroidMeActivity 代码

74
00:02:58,560 --> 00:03:01,378
首先 我需要在 activity_android_me 布局文件中

75
00:03:01,378 --> 00:03:03,989
定义一个容纳 Fragment 的位置

76
00:03:03,990 --> 00:03:06,420
这称为 Fragment 容器

77
00:03:06,419 --> 00:03:09,479
它通常是具有定义尺寸的框架布局

78
00:03:09,479 --> 00:03:12,419
在这个例子中 高为 180 dp 宽为

79
00:03:12,419 --> 00:03:13,804
手机屏幕的全宽

80
00:03:13,805 --> 00:03:15,930
这定义了 Fragment 将在布局中占用

81
00:03:15,930 --> 00:03:19,527
的空间 我给它一个 ID：head_container

82
00:03:19,526 --> 00:03:21,109
现在我们有了 Fragment 容器

83
00:03:21,110 --> 00:03:23,910
回到 AndroidMeActivity 代码

84
00:03:23,908 --> 00:03:25,590
在这里的 onCreate 我要创建

85
00:03:25,590 --> 00:03:27,960
BodyPartFragment 的一个新实例 叫做

86
00:03:27,960 --> 00:03:29,492
headFragment

87
00:03:29,491 --> 00:03:31,199
然后我要使用叫做 fragmentManager 

88
00:03:31,199 --> 00:03:34,319
和事务的东西将这个新 Fragment

89
00:03:34,318 --> 00:03:35,908
添加到屏幕

90
00:03:35,908 --> 00:03:38,128
此事务基本上会将我们的 Fragment

91
00:03:38,128 --> 00:03:40,268
添加到指定的容器

92
00:03:40,269 --> 00:03:42,810
我们一会儿会更详细地介绍 

93
00:03:42,810 --> 00:03:45,270
fragmentManager 我在下面的讲师注释中

94
00:03:45,270 --> 00:03:47,010
提供了此事务代码

95
00:03:47,008 --> 00:03:48,839
这主要是方便你运行应用

96
00:03:48,840 --> 00:03:52,110
并直观地看到你的 Fragment 是否与期望的一致

97
00:03:52,110 --> 00:03:54,700
我们在手机上运行应用看一看

98
00:03:54,699 --> 00:03:55,949
这是我们的头部 Fragment

99
00:03:55,949 --> 00:03:56,919
看起来还不错

100
00:03:56,919 --> 00:03:59,368
我们编码并显示了第一个 Fragment

101
00:03:59,370 --> 00:04:01,319
接下来 将由你按照代码中

102
00:04:01,318 --> 00:04:02,848
的 TODO 项操作

103
00:04:02,848 --> 00:04:05,758
创建一个身体部位 Fragment 并显示它

104
00:04:05,758 --> 00:04:09,119
记住 此任务共有三个部分

105
00:04:09,120 --> 00:04:12,180
首先 创建布局文件来定义身体部位

106
00:04:12,180 --> 00:04:13,620
Fragment 的外观

107
00:04:13,620 --> 00:04:16,079
然后 创建相应的 Fragment 类

108
00:04:16,079 --> 00:04:18,180
来填充布局并定义

109
00:04:18,180 --> 00:04:19,528
要显示的图像

110
00:04:19,528 --> 00:04:21,180
第三步 使用 fragmentManager 和事务

111
00:04:21,180 --> 00:04:23,100
通过其 HostActivity

112
00:04:23,100 --> 00:04:24,960
显示 Fragment

113
00:04:24,959 --> 00:04:26,689
祝你好运

