1
00:00:00,000 --> 00:00:06,000
对于这个过程 你要翻转列表 并且任何元素如果是列表

2
00:00:06,000 --> 00:00:10,000
在该列表中你也要将它翻转

3
00:00:10,000 --> 00:00:20,000
我要标签元素 A、B、C 每个元素需要翻转为相反的顺序

4
00:00:20,000 --> 00:00:22,000
C、B、A

5
00:00:22,000 --> 00:00:31,000
现在 C 本身就是列表 这意味着 C 也必须做翻转

6
00:00:31,000 --> 00:00:34,000
B 是一个列表 A 只是单个元素

7
00:00:34,000 --> 00:00:38,000
嗯 当它是单个元素时 就是这样 我们完成了 A 很好

8
00:00:38,000 --> 00:00:41,000
我们要翻转 B

9
00:00:41,000 --> 00:00:49,000
B 中的每个元素现在只是一个元素 它不是一个列表 那很好

10
00:00:49,000 --> 00:00:53,000
最后 C 看起来像是我们需要做很多工作

11
00:00:53,000 --> 00:00:58,000
因为我们有 4 和这些列表的列表

12
00:00:58,000 --> 00:01:01,000
那些需要被翻转

13
00:01:01,000 --> 00:01:06,000
4 没问题 但是 5、6、7 —— 这是另一个列表的列表

14
00:01:06,000 --> 00:01:10,000
那个需要翻转 其他也是

15
00:01:10,000 --> 00:01:18,000
我们要不断地执行 直到我们看到元素本身不是列表

16
00:01:18,000 --> 00:01:21,000
这给了我们过程的结构

17
00:01:21,000 --> 00:01:27,000
因为我们正在不断地做同样的事情 变成列表较小的部分

18
00:01:27,000 --> 00:01:33,000
这真的适合使用递归 正是我们要使用的方式

19
00:01:33,000 --> 00:01:37,000
现在我们要定义过程 deep_reverse

20
00:01:37,000 --> 00:01:42,000
我们要检查的第一件事是 是否我们的输入是个列表

21
00:01:42,000 --> 00:01:45,000
我们将使用函数 is_list

22
00:01:45,000 --> 00:01:54,000
如果 p 是一个列表 然后我们创建新的列表 一个空列表

23
00:01:54,000 --> 00:02:00,000
我们想要以相反的顺序 遍历原始列表中的元素

24
00:02:00,000 --> 00:02:04,000
为了做到这点 我们要反向计数

25
00:02:04,000 --> 00:02:08,000
最后一个位置是列表的长度减 1

26
00:02:08,000 --> 00:02:14,000
那么我们要到列表的长度减 2 减 3 等等 一直到 0

27
00:02:14,000 --> 00:02:16,000
我们可以使用 range 来做这件事

28
00:02:16,000 --> 00:02:23,000
for i in range( len(p) - 1, -1 -1)

29
00:02:23,000 --> 00:02:29,000
因为 range 会停在第二个输入的前一个值

30
00:02:29,000 --> 00:02:32,000
我们必须到 -1 因为我们想要结束在 0

31
00:02:32,000 --> 00:02:35,000
我们也要告诉它 要反向计数

32
00:02:35,000 --> 00:02:39,000
我们想要以 -1 进行计数

33
00:02:39,000 --> 00:02:45,000
我们想要做什么？嗯 我们只要以相反的顺序将列表中的每个元素加入

34
00:02:45,000 --> 00:02:48,000
但我们不只是将元素放进去

35
00:02:48,000 --> 00:02:52,000
因为还记得 我们实际上要去翻转每个元素

36
00:02:52,000 --> 00:02:59,000
我们要再次对列表的每个元素 呼叫这个程序

37
00:02:59,000 --> 00:03:04,000
然后当循环完成后 我们只需要传回结果

38
00:03:04,000 --> 00:03:07,000
现在 我们还没有得到一个停止条件

39
00:03:07,000 --> 00:03:10,000
我们何时停止我们正在做的例子？

40
00:03:10,000 --> 00:03:14,000
当我们到了一个不是列表中的元素时 我们停下来

41
00:03:14,000 --> 00:03:20,000
所以我们 else 的条件 只要传回这个元素就可以了

42
00:03:20,000 --> 00:03:23,000
这是我们的递归的基本情况