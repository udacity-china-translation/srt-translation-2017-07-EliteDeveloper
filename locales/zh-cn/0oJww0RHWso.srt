1
00:00:00,000 --> 00:00:02,000
这个问题要求你定义一个函数

2
00:00:02,000 --> 00:00:08,000
称为 find_last 其需要 2 个参数

3
00:00:08,000 --> 00:00:11,000
一个是我们正在搜索中的一个字符串 另一个是我们要寻找的字符串

4
00:00:11,000 --> 00:00:13,000
此函数的重点

5
00:00:13,000 --> 00:00:15,000
是找到最后一次出现 t 的位置

6
00:00:15,000 --> 00:00:18,000
我们使用变量 last_pos

7
00:00:18,000 --> 00:00:20,000
整个计划是这样的

8
00:00:20,000 --> 00:00:22,000
我们不断地寻找出现的 t 的同时

9
00:00:22,000 --> 00:00:24,000
我们要不停地执行 find 函数

10
00:00:24,000 --> 00:00:26,000
更新偏移值 (offset)

11
00:00:26,000 --> 00:00:29,000
让我们这么做：while True

12
00:00:29,000 --> 00:00:31,000
既然我们不知道什么时候会结束

13
00:00:31,000 --> 00:00:34,000
我们使用 find 函数

14
00:00:34,000 --> 00:00:37,000
寻找 t

15
00:00:37,000 --> 00:00:39,000
并且更新 pos (位置)

16
00:00:39,000 --> 00:00:44,000
我们从 last_pos 加上 1 开始

17
00:00:44,000 --> 00:00:46,000
+1 是非常重要的

18
00:00:46,000 --> 00:00:50,000
才不会一遍又一遍的寻找相同的字符串

19
00:00:50,000 --> 00:00:53,000
如果函数传回 -1

20
00:00:53,000 --> 00:00:56,000
这意味着 我们不会再发现其他的 t

21
00:00:56,000 --> 00:01:00,000
因此 我们要传回之前所找到 t 的位置

22
00:01:00,000 --> 00:01:02,000
储存在 last_pos 的值

23
00:01:02,000 --> 00:01:04,000
否则 我们要以刚刚发现的 pos

24
00:01:04,000 --> 00:01:07,000
来更新 last_pos

25
00:01:07,000 --> 00:01:11,000
最后一件事：last_pos 的初始化为何？

26
00:01:11,000 --> 00:01:15,000
如果我们在 s 中没有发现任何 t

27
00:01:15,000 --> 00:01:18,000
目标是传回 -1

28
00:01:18,000 --> 00:01:20,000
因此 如果 pos 等于 -1

29
00:01:20,000 --> 00:01:23,000
第一次 我们只要传回 last_pos

30
00:01:23,000 --> 00:01:26,000
因此 把它初始化为 -1 是合理的

