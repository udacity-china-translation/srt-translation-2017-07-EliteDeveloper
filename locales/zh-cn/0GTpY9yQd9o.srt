1
00:00:00,640 --> 00:00:02,740
我们来快速看下 My Garden 应用

2
00:00:02,740 --> 00:00:04,527
看看它目前的状况如何

3
00:00:04,527 --> 00:00:06,610
你可以从讲师笔记的链接中

4
00:00:06,610 --> 00:00:08,349
下载起始代码

5
00:00:08,349 --> 00:00:09,954
当你第一次启动 My Garden 时

6
00:00:09,954 --> 00:00:12,370
你会看到已经添加到花园中的所有植物

7
00:00:12,369 --> 00:00:14,979
并可以点击此处的添加按钮

8
00:00:14,980 --> 00:00:16,734
添加更多植物

9
00:00:16,734 --> 00:00:18,400
之后你会转至一个页面 从这里

10
00:00:18,399 --> 00:00:20,469
你可以选择植物类型 

11
00:00:20,469 --> 00:00:22,269
回到主屏幕 如果你点击

12
00:00:22,269 --> 00:00:24,399
花园中的任何植物 应用

13
00:00:24,399 --> 00:00:26,709
将启动一个 DetailActivity 显示关于该植物的

14
00:00:26,710 --> 00:00:28,120
更多信息

15
00:00:28,120 --> 00:00:31,810
我们会看到它已经存活了多久

16
00:00:31,809 --> 00:00:34,589
以及自上次浇水过了多长时间的信息

17
00:00:34,590 --> 00:00:36,220
在底部的反应按钮

18
00:00:36,219 --> 00:00:37,969
你可以选择浇水、

19
00:00:37,969 --> 00:00:41,019
删除植物或返回主屏幕

20
00:00:41,020 --> 00:00:43,380
现在我们来看看代码

21
00:00:43,380 --> 00:00:46,540
代码中共有三个 Java 包

22
00:00:46,539 --> 00:00:51,009
所有与数据库相关的代码都在 provider 包中

23
00:00:51,009 --> 00:00:52,989
我们可以在 PlantContract 中看到

24
00:00:52,990 --> 00:00:54,670
植物的数据库表包含

25
00:00:54,670 --> 00:00:57,520
一个植物类型列 以及植物创建和

26
00:00:57,520 --> 00:01:01,150
最后一次浇水的两个时间戳

27
00:01:01,149 --> 00:01:04,329
接下来是 ui 包 它包含所有三个 Activity

28
00:01:04,329 --> 00:01:07,929
MainActivity、DetailActivity 和

29
00:01:07,930 --> 00:01:11,050
AddPlantActivity 你可以在最后一个 Activity 中选择植物类型

30
00:01:11,049 --> 00:01:13,959
此外还有两个用于 RecyclerView 的适配器

31
00:01:13,959 --> 00:01:15,839
一个用于 MainActivity 网格布局

32
00:01:15,840 --> 00:01:18,579
在主屏幕中显示所有植物

33
00:01:18,579 --> 00:01:21,189
另一个适配器用于在添加植物 Activity 中

34
00:01:21,189 --> 00:01:23,750
列出植物类型

35
00:01:23,750 --> 00:01:26,920
最后在 ui 包中 这里还有一个自定义视图

36
00:01:26,920 --> 00:01:29,049
叫作 WaterLevelView

37
00:01:29,049 --> 00:01:31,480
用于显示蓝色圆圈和

38
00:01:31,480 --> 00:01:35,469
指示植物是否即将死亡的 DetailActivity

39
00:01:35,469 --> 00:01:38,859
然后在 utils 文件下 只有一个实用程序文件

40
00:01:38,859 --> 00:01:40,810
其中包括控制游戏

41
00:01:40,810 --> 00:01:42,796
逻辑的所有常量 以及

42
00:01:42,796 --> 00:01:44,170
我们将在本课中使用的

43
00:01:44,170 --> 00:01:46,210
一些辅助方法

44
00:01:46,209 --> 00:01:48,189
我们还将所有图像资源

45
00:01:48,189 --> 00:01:50,140
都包含在了 drawable 文件夹下

46
00:01:50,140 --> 00:01:54,849
每个植物将经过三个生长阶段：幼苗、中苗

47
00:01:54,849 --> 00:01:56,559
和成苗

48
00:01:56,560 --> 00:01:59,920
因此每种植物类型有三个图像

49
00:01:59,920 --> 00:02:02,920
另外还有三张图片显示植物

50
00:02:02,920 --> 00:02:05,560
在这三个阶段即将死亡时的状态

51
00:02:05,560 --> 00:02:08,258
并带有后缀词“接近死亡” 以及植物在每个阶段死亡后

52
00:02:08,258 --> 00:02:10,240
的三张图片

53
00:02:10,240 --> 00:02:13,689
然后在 values 文件夹下 arrays.xml 文件中

54
00:02:13,689 --> 00:02:15,729
包含植物类型列表

55
00:02:15,729 --> 00:02:20,119
目前有两种类型：藤本植物和仙人掌

56
00:02:20,120 --> 00:02:21,670
如果你想添加更多类型

57
00:02:21,669 --> 00:02:24,252
可以按照此处注释中提到的步骤

58
00:02:24,252 --> 00:02:24,919
操作

59
00:02:24,919 --> 00:02:25,419
很好

60
00:02:25,419 --> 00:02:27,419
现在 我想让你再次返回起始代码

61
00:02:27,419 --> 00:02:29,889
熟悉一下这些代码然后回答下一个小测试

62
00:02:29,889 --> 00:02:31,439
问题

