1
00:00:00,082 --> 00:00:01,540
现在轮到你了

2
00:00:01,540 --> 00:00:04,179
像我之前提到的 对于 TeaTime

3
00:00:04,179 --> 00:00:07,299
我们想在应用中模拟一个场景 模拟

4
00:00:07,299 --> 00:00:10,390
向 MenuAcitity 下载许多图像和描述时的

5
00:00:10,390 --> 00:00:12,190
延迟时间

6
00:00:12,189 --> 00:00:15,410
为帮助你起步 我在 IdlingResource 文件夹中

7
00:00:15,410 --> 00:00:19,480
添加了 SimpleIdlingResource 类

8
00:00:19,480 --> 00:00:21,929
那么这个类 SimpleIdlingResource

9
00:00:21,929 --> 00:00:24,579
是对 IdlingResource 的实现

10
00:00:24,579 --> 00:00:28,479
你可以在填写本练习的其余部分时使用

11
00:00:28,480 --> 00:00:30,980
你还需要修改 MenuActivity

12
00:00:30,980 --> 00:00:34,165
使 MenuActivity 实现

13
00:00:34,165 --> 00:00:36,369
ImageDownloader.delayorcallback

14
00:00:36,369 --> 00:00:38,890
记住这是一个回调接口

15
00:00:38,890 --> 00:00:41,670
如果你不理解该怎么做

16
00:00:41,670 --> 00:00:43,450
可参考之前的概念

17
00:00:43,450 --> 00:00:46,150
当时我带你看了一个类似的示例

18
00:00:46,149 --> 00:00:48,159
当回调结束时 我想

19
00:00:48,159 --> 00:00:51,369
让它返回 Tea 对象的数组列表

20
00:00:51,369 --> 00:00:54,369
这包括向 MenuActivity 返回图像

21
00:00:54,369 --> 00:00:56,739
和茶饮的名称

22
00:00:56,740 --> 00:00:58,570
为了帮助你 我在 .04 练习中

23
00:00:58,570 --> 00:01:02,289
添加了一列 TODO 项

24
00:01:02,289 --> 00:01:04,150
你可以在讲师注释中

25
00:01:04,150 --> 00:01:05,782
找到此练习的链接

26
00:01:05,781 --> 00:01:07,239
祝你好运 开始自己动手

27
00:01:07,239 --> 00:01:10,170
练习 IdlingResource 概念吧

