1
00:00:00,000 --> 00:00:03,000
我们单用 while 循环就能编写

2
00:00:03,000 --> 00:00:05,000
遍历列表上所有元素所需的全部代码

3
00:00:05,000 --> 00:00:09,000
我们想做什么都能做到 这只比我们想的稍微复杂一点

4
00:00:09,000 --> 00:00:12,000
Python 提供了一种更简单的方法来循环遍历列表上所有元素 

5
00:00:12,000 --> 00:00:14,000
这就是 for 循环

6
00:00:14,000 --> 00:00:17,000
for 循环的结构就像这样

7
00:00:17,000 --> 00:00:20,000
关键词 for 后面跟一个名字

8
00:00:20,000 --> 00:00:24,000
这是我们引入的一个变量的新名字

9
00:00:24,000 --> 00:00:27,000
接着 关键词 in 后面跟一个列表

10
00:00:27,000 --> 00:00:32,000
这是一个表达式 这个表达式判定为一个列表 列表后跟冒号

11
00:00:32,000 --> 00:00:36,000
这跟之前看到的 while 循环和 if 语句的结构很相似

12
00:00:36,000 --> 00:00:40,000
for 循环里包含一个程序块

13
00:00:40,000 --> 00:00:44,000
这样一个 for 循环意味着 对于列表中的每一个元素

14
00:00:44,000 --> 00:00:48,000
我们将用元素给变量赋值并求出程序块的值

15
00:00:48,000 --> 00:00:52,000
我们通过依次遍历列表中的元素来实现

16
00:00:52,000 --> 00:00:56,000
所以通过使用 for 循环 我们定义 print_all_elements 这个函数所用的代码

17
00:00:56,000 --> 00:00:59,000
就比使用 while 循环要简化多了

18
00:00:59,000 --> 00:01:05,000
我们有一个 for 语句 在其中我们会用 e 这个名字来做变量名

19
00:01:05,000 --> 00:01:07,000
我们将会遍历列表 p 的所有元素

20
00:01:07,000 --> 00:01:11,000
对于每个元素 我们要做的就是把元素打印出来

21
00:01:11,000 --> 00:01:14,000
那么我们一步步来看使用 for 循环会出现什么情况

22
00:01:14,000 --> 00:01:18,000
调用 print_all_elements 传入我的变量列表中

23
00:01:18,000 --> 00:01:20,000
已定义并储存的列表

24
00:01:20,000 --> 00:01:22,000
这个列表中有三个元素

25
00:01:22,000 --> 00:01:26,000
前两个元素是数字1和2 第三个元素是一个由3和4组成的列表

26
00:01:26,000 --> 00:01:30,000
创建我的列表时 就得到了一个这样列表对象

27
00:01:30,000 --> 00:01:32,000
它有三个元素

28
00:01:32,000 --> 00:01:35,000
前两个是数字 第三个是3和4组成的列表

29
00:01:35,000 --> 00:01:42,000
当我们把列表传递给 print_all_elements 时 变量p将指代这个对象

30
00:01:42,000 --> 00:01:45,000
当我们执行这个循环时 变量 e

31
00:01:45,000 --> 00:01:48,000
被赋值为 p 的第一个元素

32
00:01:48,000 --> 00:01:52,000
所以 最初 e 指的是这个值

33
00:01:52,000 --> 00:01:55,000
我们以此做为 e 的值来执行这个循环的主体

34
00:01:55,000 --> 00:01:58,000
所以这将打印出数值1接着 我们继续

35
00:01:58,000 --> 00:02:02,000
第二次通过循环时 e 将指代 p 中的第二个元素

36
00:02:02,000 --> 00:02:06,000
我们求出循环主体的值 打印出这个值 也就是2

37
00:02:06,000 --> 00:02:08,000
接着 我们在循环中继续

38
00:02:08,000 --> 00:02:13,000
下一次 e 将指代 p 中第三个元素 那就是由3和4组成的列表

39
00:02:13,000 --> 00:02:15,000
这将打印出3和4这个列表

40
00:02:15,000 --> 00:02:19,000
至此 我们已经遍历了 p 中所有元素 for 循环完成了

41
00:02:19,000 --> 00:02:21,000
执行将在这里继续

42
00:02:21,000 --> 00:02:23,000
在这个情况下 这里没有语句 

43
00:02:23,000 --> 99:59:59,000
所以我们已经完成了过程的执行 我们返回

