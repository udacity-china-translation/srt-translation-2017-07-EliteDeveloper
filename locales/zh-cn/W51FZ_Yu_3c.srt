1
00:00:00,219 --> 00:00:01,760
如前所述

2
00:00:01,760 --> 00:00:03,873
小部件布局使用 RemoteView 构建

3
00:00:03,874 --> 00:00:05,540
它们与普通视图和典型布局

4
00:00:05,540 --> 00:00:06,955
略有不同

5
00:00:06,955 --> 00:00:08,330
而在处理集合类型视图

6
00:00:08,330 --> 00:00:11,810
如 ListView 或 GridView 时 这些差异变得

7
00:00:11,810 --> 00:00:13,519
很明显

8
00:00:13,519 --> 00:00:17,329
就像你在典型的 GridView 中需要适配器一样

9
00:00:17,329 --> 00:00:20,599
对于小部件 你需要创建一个 RemoteViewsFactory 

10
00:00:20,600 --> 00:00:22,640
它基本上是围绕适配器的

11
00:00:22,640 --> 00:00:25,130
薄包装

12
00:00:25,129 --> 00:00:27,449
而且现在 适配器中典型的 onBindViewHolder 方法

13
00:00:27,449 --> 00:00:30,800
将在 RemoteViewsFactory 中

14
00:00:30,800 --> 00:00:32,810
替换为 getViewAt 方法

15
00:00:32,810 --> 00:00:34,730
而在 RemoteViewsFactory 上

16
00:00:34,729 --> 00:00:37,699
你还需要创建一个 RemoteViewsService

17
00:00:37,700 --> 00:00:40,220
此服务可连接能请求 RemoteView 的

18
00:00:40,219 --> 00:00:42,140
远程适配器

19
00:00:42,140 --> 00:00:45,079
由于 RemoteViewsService 实际上是一项服务

20
00:00:45,079 --> 00:00:47,809
我们还需要在清单文件中注册它

21
00:00:47,810 --> 00:00:50,640
那么这是在代码中实施的更改

22
00:00:50,640 --> 00:00:54,500
首先 我创建了小部件 GridView 布局 XML 文件

23
00:00:54,500 --> 00:00:56,570
并决定使用具有四列 GridView

24
00:00:56,570 --> 00:00:58,799
的框架布局

25
00:00:58,799 --> 00:01:02,785
我还会在下面这里添加一个相对布局

26
00:01:02,786 --> 00:01:04,159
以当花园为空时

27
00:01:04,159 --> 00:01:06,119
作为一个回退

28
00:01:06,120 --> 00:01:08,579
那么它现在只由青草图构成

29
00:01:08,579 --> 00:01:12,480
以及一条文本 说明花园里没有植物

30
00:01:12,480 --> 00:01:15,320
要创建 RemoteViewsFactory

31
00:01:15,319 --> 00:01:18,049
我们只需创建一个新类

32
00:01:18,049 --> 00:01:20,224
来实现 RemoteViewsServi

33
00:01:20,224 --> 00:01:23,489
ce.RemoteViewsFactory 接口

34
00:01:23,489 --> 00:01:26,640
然后我们只须确保覆盖所有方法

35
00:01:26,640 --> 00:01:32,390
在这里 我创建的类叫作 gridRemoteViewsFactory

36
00:01:32,390 --> 00:01:35,209
首先我们创建一个构造函数和指定上下文

37
00:01:35,209 --> 00:01:37,789
并将它保存为成员变量

38
00:01:37,790 --> 00:01:39,859
上下文将在之后

39
00:01:39,859 --> 00:01:42,441
访问 ContentResolver 时需要用到

40
00:01:42,441 --> 00:01:44,149
我们还需要一个游标来从数据库

41
00:01:44,150 --> 00:01:46,500
获取植物数据

42
00:01:46,500 --> 00:01:48,230
这步在这里完成
 
43
00:01:48,230 --> 00:01:50,810
那么 onDataSetChanged 方法

44
00:01:50,810 --> 00:01:52,510
将在 RemoteViewsFactory 创建好

45
00:01:52,510 --> 00:01:54,680
且每次通知更新数据时

46
00:01:54,680 --> 00:01:57,020
调用

47
00:01:57,019 --> 00:02:00,439
所以这里是运行植物查询 并获得花园中

48
00:02:00,439 --> 00:02:02,579
所有植物的恰当位置

49
00:02:02,579 --> 00:02:05,390
但是 要在数据发生变化时

50
00:02:05,390 --> 00:02:07,370
通知此方法再次触发 你需要

51
00:02:07,370 --> 00:02:11,180
调用 notifyAppWidgetViewDataChanged

52
00:02:11,180 --> 00:02:14,659
就像你在典型的游标适配器中

53
00:02:14,659 --> 00:02:17,569
调用 notifyDataSetChanged 一样

54
00:02:17,569 --> 00:02:20,689
那么我们在这个方法中执行这一步

55
00:02:20,689 --> 00:02:26,389
即 PlantWateringService 的 handleActionUpdatePlantWidgets

56
00:02:26,389 --> 00:02:28,399
我将那行代码加在这里

57
00:02:28,400 --> 00:02:30,469
添加此代码后 任何时候

58
00:02:30,469 --> 00:02:32,770
当我们要求 IntenseService 更新小部件时

59
00:02:32,770 --> 00:02:35,300
它会通知 GridView 数据发生了变化

60
00:02:35,300 --> 00:02:37,520
是时候重新运行查询了

61
00:02:37,520 --> 00:02:42,500
那么总结来说 我们添加可这行 notifyAppWidgetViewDataChanged

62
00:02:42,500 --> 00:02:45,229
它会触发对 GridView 小部件的数据更新

63
00:02:45,229 --> 00:02:48,169
以强制进行数据刷新

64
00:02:48,169 --> 00:02:50,539
现在回到 GridWidgetService

65
00:02:50,539 --> 00:02:53,090
看看 getCount 方法

66
00:02:53,090 --> 00:02:55,637
它的作用和在任何其他适配器中一样

67
00:02:55,637 --> 00:02:57,469
它需要返回要在 GridView 小部件中

68
00:02:57,469 --> 00:02:59,990
显示的项目的数量

69
00:02:59,990 --> 00:03:03,629
如果非 null 我们可以从游标获得数量

70
00:03:03,629 --> 00:03:05,599
接下来我们来聊聊约束逻辑

71
00:03:05,599 --> 00:03:09,469
这些会放在这里的 getViewAt 方法中

72
00:03:09,469 --> 00:03:11,719
这等同于典型适配器的 onBindViewHolder

73
00:03:11,719 --> 00:03:14,479
方法

74
00:03:14,479 --> 00:03:17,329
使用游标 我们可以提取指定位置的

75
00:03:17,330 --> 00:03:19,790
植物信息

76
00:03:19,789 --> 00:03:21,349
注意在这里 我们在描述

77
00:03:21,349 --> 00:03:23,579
GridView 中的每一项是什么样的

78
00:03:23,580 --> 00:03:25,460
所以应使用 plant_widget 布局

79
00:03:25,460 --> 00:03:28,010
创建 RemoteView 对象

80
00:03:28,009 --> 00:03:30,739
然后使用 getPlantImageRes 我们可以

81
00:03:30,740 --> 00:03:33,260
在给定所有植物时间戳和类型的情况下

82
00:03:33,259 --> 00:03:35,364
获得正确的图像资源

83
00:03:35,364 --> 00:03:37,280
然后我们使用 setImageViewResource 方法

84
00:03:37,280 --> 00:03:39,949
更新显示的图像

85
00:03:39,949 --> 00:03:42,649
然后设置文本显示 ID

86
00:03:42,650 --> 00:03:45,500
我还决定将“浇水”(Water) 按钮设置为“始终隐藏”

87
00:03:45,500 --> 00:03:48,569
因为我们不想让 GridView 显得混乱

88
00:03:48,569 --> 00:03:50,389
最后 它将返回

89
00:03:50,389 --> 00:03:52,549
RemoteView 对象

90
00:03:52,550 --> 00:03:54,860
完成 RemoteViewsFactory 部分后

91
00:03:54,860 --> 00:03:57,200
我们来创建一个 RemoteViewsService 类

92
00:03:57,199 --> 00:03:59,419
它会在构造函数中创建

93
00:03:59,419 --> 00:04:01,969
和返回 RemoteViewFactory

94
00:04:01,969 --> 00:04:04,939
现在 我们移到 PlantWidgetProvider 类

95
00:04:04,939 --> 00:04:07,400
并实现 getGardenAndGridRemoteView

96
00:04:07,400 --> 00:04:08,840
方法

97
00:04:08,840 --> 00:04:13,140
我要删掉这里的 return null

98
00:04:13,139 --> 00:04:15,500
首先 我创建一个具有

99
00:04:15,500 --> 00:04:17,571
GridView 布局的 RemoteView 对象 然后 

100
00:04:17,571 --> 00:04:19,279
将它连接到 RemoteViewsService 这会

101
00:04:19,278 --> 00:04:23,120
将 RemoteViews 与适配器的游标数据绑定

102
00:04:23,120 --> 00:04:25,100
为此 我将创建一个指向 GridWidgetService

103
00:04:25,100 --> 00:04:29,510
的 intent 然后调用 setRemoteAdapter

104
00:04:29,509 --> 00:04:31,939
连接 GridView 与 intent

105
00:04:31,939 --> 00:04:35,055
我还要调用 setEmptyView 并指向

106
00:04:35,055 --> 00:04:36,680
与 GridView 在同一个 XML 中

107
00:04:36,680 --> 00:04:39,483
创建的相对布局

108
00:04:39,483 --> 00:04:41,149
这会让适配器知道

109
00:04:41,149 --> 00:04:43,849
在花园为空时显示此布局

110
00:04:43,850 --> 00:04:46,520
而非 GridView

111
00:04:46,519 --> 00:04:50,891
最后 我需要返回 RemoteView 对象

112
00:04:50,891 --> 00:04:52,850
以及最后的最后 不要忘了将 service

113
00:04:52,850 --> 00:04:55,040
标签添加到清单文件 以注册

114
00:04:55,040 --> 00:04:57,730
RemoteViewsService

