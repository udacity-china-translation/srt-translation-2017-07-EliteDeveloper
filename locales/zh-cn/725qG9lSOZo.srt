1
00:00:00,000 --> 00:00:03,000
我们在 Python 解释器中定义我们的函数

2
00:00:03,000 --> 00:00:05,000
我们将它命名为 measure_udacity 

3
00:00:05,000 --> 00:00:08,000
并将参数命名为 p 

4
00:00:08,000 --> 00:00:14,000
其实 我们也许该把参数命名为 U 而且是大写的 U 

5
00:00:14,000 --> 00:00:18,000
这虽不是最标准的参数名 但是在这里还是可以接受的 

6
00:00:18,000 --> 00:00:20,000
我们将引入变量 count (计数)

7
00:00:20,000 --> 00:00:22,000
我们把初始值设定为0 

8
00:00:22,000 --> 00:00:26,000
我们要使用 count 来追踪

9
00:00:26,000 --> 00:00:29,000
所找到的符合 Udacity 属性字符串的个数

10
00:00:29,000 --> 00:00:33,000
我们将使用 for 循环来遍历 U 中所有元素 

11
00:00:33,000 --> 00:00:36,000
现在我们需要决定是否将这个元素计算在内 

12
00:00:36,000 --> 00:00:38,000
我们可以通过使用一个 if 语句来实现 

13
00:00:38,000 --> 00:00:41,000
我们需要用一个比较来检查字符串的第一个字符

14
00:00:41,000 --> 00:00:43,000
是否是大写的 U 

15
00:00:43,000 --> 00:00:46,000
如果是 我们就在 count 值上加1 

16
00:00:46,000 --> 00:00:48,000
如果不是 就什么都不做 

17
00:00:48,000 --> 00:00:53,000
那么 我们用相等性判断来检查 e 中位置0的值 

18
00:00:53,000 --> 00:00:56,000
检查列表中当前元素是否是大写的 U 

19
00:00:56,000 --> 00:00:58,000
如果是 便加1 

20
00:00:58,000 --> 00:01:02,000
如果不是 我们无需做任何事情 也就不需要一个 else 子句 

21
00:01:02,000 --> 00:01:05,000
现在我们只需返回 count 值 

22
00:01:05,000 --> 00:01:07,000
现在测试我们的函数

23
00:01:07,000 --> 00:01:12,000
我们的第一个例子 输入字符串为 Dave Sebastian 和 Katy 

24
00:01:12,000 --> 00:01:15,000
我们看到 结果是0 不出所料 

25
00:01:15,000 --> 00:01:21,000
我们再试试第二个例子 这里面有两个首字母为大写 U 的字符串 

26
00:01:21,000 --> 00:01:25,000
我们看到打印出来的第二个值 即所得结果为2 

27
00:01:25,000 --> 00:01:31,000
我们还应当测试首字母为大写 U 和首字母非大写 U 的字符串 

28
00:01:31,000 --> 00:01:33,000
现在我们传入四个字符串 

29
00:01:33,000 --> 00:01:36,000
这些字符串都以 U 打头 但只有2个字符串首字母为大写 U 

30
00:01:36,000 --> 00:01:41,000
所以 结果即打印出来的第三个数字应当也为2 

31
00:01:41,000 --> 99:59:59,000
我们看见其得到了我们预想的结果 

