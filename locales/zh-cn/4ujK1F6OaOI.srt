1
00:00:00,706 --> 00:00:03,609
这些是我发给队友的步骤

2
00:00:03,609 --> 00:00:05,889
首先 我让他打开应用

3
00:00:05,889 --> 00:00:07,660
并找到“订购” (Order) 按钮

4
00:00:07,660 --> 00:00:09,250
然后点击该按钮

5
00:00:09,250 --> 00:00:12,939
最后 检查订单摘要 Activity 是否出现

6
00:00:12,939 --> 00:00:16,269
请注意这些步骤特定于我们的示例

7
00:00:16,269 --> 00:00:17,829
但我们可以很容易地将它们

8
00:00:17,829 --> 00:00:20,769
泛化到任何 UI 测试情况

9
00:00:20,769 --> 00:00:23,140
第一步可以泛化为找到我们

10
00:00:23,140 --> 00:00:25,480
所感兴趣的那个视图

11
00:00:25,480 --> 00:00:28,330
然后 我们需要对视图执行操作

12
00:00:28,329 --> 00:00:30,639
在我们的例子中 即点击按钮

13
00:00:30,640 --> 00:00:32,950
最后 检查订单摘要

14
00:00:32,950 --> 00:00:35,230
Activity 是否打开

15
00:00:35,229 --> 00:00:40,329
这是一个验证步骤 用于确认我们期望的操作是否发生

16
00:00:40,329 --> 00:00:43,119
借助这些一般步骤 我们可以将此过程转换为

17
00:00:43,119 --> 00:00:44,529
代码

18
00:00:44,530 --> 00:00:48,469
总结来说 第一步是找到视图

19
00:00:48,469 --> 00:00:50,859
在我们的例子中 即“订购”按钮

20
00:00:50,859 --> 00:00:53,450
接下来 我们需要执行操作

21
00:00:53,450 --> 00:00:55,000
例如点击按钮

22
00:00:55,000 --> 00:00:59,359
最后 我们需要检查该视图是否呈现我们期望的结果

23
00:00:59,359 --> 00:01:01,479
所以我们应该转至摘要屏幕

24
00:01:01,479 --> 00:01:04,479
检查是否出现了期望的信息

25
00:01:04,480 --> 00:01:07,240
你的答案可能与我的稍有不同

26
00:01:07,239 --> 00:01:10,539
但是请检查一下你的是否包含这三个

27
00:01:10,540 --> 00:01:12,190
最基本的步骤

28
00:01:12,189 --> 00:01:14,439
我们很快会看到这些是在 Espresso 中

29
00:01:14,439 --> 00:01:17,379
编写测试的基础部分

30
00:01:17,379 --> 00:01:20,530
现在我们来更进一步 看看这些步骤如何

31
00:01:20,530 --> 00:01:23,000
转化为代码

32
00:01:23,000 --> 00:01:25,299
首先 要找到视图 我们

33
00:01:25,299 --> 00:01:28,480
要使用 onView 方法 它将

34
00:01:28,480 --> 00:01:31,365
ViewMatcher 作为参数

35
00:01:31,365 --> 00:01:32,739
ViewMatcher 是一个类 它可以

36
00:01:32,739 --> 00:01:35,829
帮助我们指定在当前视图层次中我们感兴趣的

37
00:01:35,829 --> 00:01:37,899
视图

38
00:01:37,900 --> 00:01:40,936
Google 还为我们创建了一个非常不错的备忘单

39
00:01:40,936 --> 00:01:43,060
这样你就不用去记住所有

40
00:01:43,060 --> 00:01:44,890
可用的方法

41
00:01:44,890 --> 00:01:46,480
这些匹配器来自

42
00:01:46,480 --> 00:01:49,120
Hamcrest 匹配器库

43
00:01:49,120 --> 00:01:50,859
此库汇编了各种方法

44
00:01:50,859 --> 00:01:54,310
来使用人类可读的语言识别

45
00:01:54,310 --> 00:01:57,230
匹配我们期望的视图

46
00:01:57,230 --> 00:02:00,090
在我们的例子中 我们可以使用 withID 方法

47
00:02:00,090 --> 00:02:03,219
来找到屏幕上的“订购”按钮

48
00:02:03,219 --> 00:02:05,739
接下来 我们需要对视图执行操作

49
00:02:05,739 --> 00:02:07,649
例如点击按钮

50
00:02:07,650 --> 00:02:10,240
幸运的是 Google 也提供了这方面的

51
00:02:10,240 --> 00:02:11,969
有用内容

52
00:02:11,969 --> 00:02:15,009
我们可以从备忘单列表中选择可用的

53
00:02:15,009 --> 00:02:16,659
视图操作

54
00:02:16,659 --> 00:02:19,659
在这个特定例子中 我们将使用 click() 方法

55
00:02:19,659 --> 00:02:23,409
因为我们只是手动点击订购按钮

56
00:02:23,409 --> 00:02:27,319
最后 我们需要检查视图执行了我们期望的操作

57
00:02:27,319 --> 00:02:31,069
要这样做 我们将使用视图断言

58
00:02:31,069 --> 00:02:34,479
断言是指检查我们所期望的与实际发生的

59
00:02:34,479 --> 00:02:36,769
操作是否匹配

60
00:02:36,770 --> 00:02:39,790
进一步来说 ViewAssertion

61
00:02:39,789 --> 00:02:41,349
是一个类 包含帮助我们对感兴趣的视图

62
00:02:41,349 --> 00:02:44,289
执行断言或者说检查

63
00:02:44,289 --> 00:02:46,519
的方法

64
00:02:46,520 --> 00:02:48,192
那么在我们的 Teatime 应用中 我们

65
00:02:48,192 --> 00:02:49,900
想要检查订单摘要文本

66
00:02:49,900 --> 00:02:52,840
视图是否显示在了屏幕上

67
00:02:52,840 --> 00:02:55,990
换句话说 我想断言订单摘要

68
00:02:55,990 --> 00:02:59,230
文本视图显示出来了

69
00:02:59,229 --> 00:03:02,979
我将使用 isDisplayed() 方法来检查订单

70
00:03:02,979 --> 00:03:05,729
摘要文本是否真的显示了

71
00:03:05,729 --> 00:03:08,919
注意在这里 我需要使用 onView

72
00:03:08,919 --> 00:03:10,750
和另一个 ViewMatcher

73
00:03:10,750 --> 00:03:15,909
在这个例子中是 R.Id.order_summary_text 

74
00:03:15,909 --> 00:03:19,599
这可以帮助我们隔离订单摘要文本视图

75
00:03:19,599 --> 00:03:21,370
这样做是因为我想检查

76
00:03:21,370 --> 00:03:24,879
对文本的断言 而不是上面的

77
00:03:24,879 --> 00:03:26,560
按钮视图

78
00:03:26,560 --> 00:03:29,620
总体来说 这是我将用于在 Espresso 中

79
00:03:29,620 --> 00:03:33,969
执行 UI 测试的单个语句汇编

80
00:03:33,969 --> 00:03:36,969
这个过程旨在模拟人类对 UI 的测试

81
00:03:36,969 --> 00:03:38,919
简洁明了

82
00:03:38,919 --> 00:03:41,079
只需遵循这三个步骤即可

83
00:03:41,080 --> 00:03:43,750
匹配视图 对视图执行操作 然后

84
00:03:43,750 --> 00:03:46,181  
断言我们期望发生的效果

85
00:03:46,181 --> 00:03:47,680
在此课程的其余部分 我们将

86
00:03:47,680 --> 00:03:50,680
更多地探索如何使用 Espresso 提供的

87
00:03:50,680 --> 00:03:52,830
测试工具的其余部分

