1
00:00:00,000 --> 00:00:05,000
这个问题中 给了一个新的数据结构 是一个大学列表

2
00:00:05,000 --> 00:00:09,000
每个条目是另一个列表 包含了学校名称

3
00:00:09,000 --> 00:00:12,000
就读学生人数、和学费

4
00:00:12,000 --> 00:00:17,000
我们要计算此列表中 就读这些大学的学生总数

5
00:00:17,000 --> 00:00:21,000
以及他们所付的学费金额

6
00:00:21,000 --> 00:00:24,000
我们要计算学生的总人数 所以我们要追踪所有的学生

7
00:00:24,000 --> 00:00:29,000
将列表中每所大学的第二个值加进来

8
00:00:29,000 --> 00:00:32,000
然后 我们也要保持第二个计数器

9
00:00:32,000 --> 00:00:36,000
这是他们支付的学费 所以我们要做的是

10
00:00:36,000 --> 00:00:39,000
对每个条目 将这两个值乘起来 并相加

11
00:00:39,000 --> 00:00:43,000
我们将 50 乘以 2 这是 100  以及 100 乘以 1 这也是 100

12
00:00:43,000 --> 00:00:49,000
最后的结果是学费 200 元 就读学生人数 150 人

13
00:00:49,000 --> 00:00:52,000
这就是我们传回的两个值

14
00:00:52,000 --> 00:00:54,000
让我们来写这个函数

15
00:00:54,000 --> 00:00:59,000
我已经声明这个函数 输入一个列表 我已经初始化两个总数

16
00:00:59,000 --> 00:01:03,000
就读学生总人数 (total-students) 和所有的学生的总学费 (total-tuition)

17
00:01:03,000 --> 00:01:05,000
我加了一个小技巧 使得代码短一点

18
00:01:05,000 --> 00:01:09,000
这是 Python 的小技巧 你可能不知道  但未来你可以自由地使用它

19
00:01:09,000 --> 00:01:12,000
我想说的是 对于列表中的每个值 我有了 name

20
00:01:12,000 --> 00:01:15,000
这对应子列表中的第一个条目

21
00:01:15,000 --> 00:01:18,000
students 对应子列表中的第二个条目

22
00:01:18,000 --> 00:01:21,000
price 对应子列表的第三个条目

23
00:01:21,000 --> 00:01:25,000
如果能有另一个版本 我只写 for i in p

24
00:01:25,000 --> 00:01:28,000
然后指定变量名称 就是我们在这里做的事

25
00:01:28,000 --> 00:01:35,000
这只是一个捷径 可以节省你写 3 行的时间

26
00:01:35,000 --> 00:01:38,000
在这里 我为每所学校的学生人数做更新

27
00:01:38,000 --> 00:01:41,000
只简单地将学生人数加到总和

28
00:01:41,000 --> 00:01:44,000
我更新总学费 只简单地

29
00:01:44,000 --> 00:01:48,000
加入学生在这所大学的总学费支出

30
00:01:48,000 --> 00:01:51,000
最后 我传回这两个值 你可以简单地加个逗号

