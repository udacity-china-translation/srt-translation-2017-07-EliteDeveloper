1
00:00:01,260 --> 00:00:04,500
我们可以将 Fragment 看作是小的 Activity

2
00:00:04,500 --> 00:00:07,740
作为 UI 的一部分 每个都有自己的生命周期

3
00:00:07,740 --> 00:00:10,769
但它们也必须嵌入到一个 Activity 中

4
00:00:10,769 --> 00:00:12,570
那么 Fragment 生命周期如何

5
00:00:12,570 --> 00:00:14,759
与 Activity 生命周期进行比较？

6
00:00:14,759 --> 00:00:16,559
它们又如何协同工作呢？

7
00:00:16,559 --> 00:00:19,089
由于 Fragment 必须嵌入到 Activity 中

8
00:00:19,088 --> 00:00:22,169
所以其生命周期直接受 HostActivity 生命周期

9
00:00:22,170 --> 00:00:23,550
影响

10
00:00:23,550 --> 00:00:26,160
同样 当 HostActivity 经过回调、

11
00:00:26,160 --> 00:00:29,640
onStart、onResume、onPause 和 onStop 时

12
00:00:29,640 --> 00:00:31,890
其包含的Fragment也是

13
00:00:31,890 --> 00:00:34,530
而且在大多数情况下 你可以将

14
00:00:34,530 --> 00:00:37,530
放到这些 Activity 生命周期回调中的任何功能

15
00:00:37,530 --> 00:00:40,560
移到 Fragment 中相应的回调

16
00:00:40,560 --> 00:00:42,600
不过也存在一些差别

17
00:00:42,600 --> 00:00:45,660
例如 Fragment 具有额外的生命周期回调

18
00:00:45,658 --> 00:00:47,819
允许在运行时在 Activity 中

19
00:00:47,820 --> 00:00:50,380
创建或删除它们

20
00:00:50,380 --> 00:00:52,200
另外 不同于 Activity 使用

21
00:00:52,200 --> 00:00:54,990
onCreate 构建新视图 Fragment

22
00:00:54,990 --> 00:00:58,140
使用另一个 Activity  叫做 onCreateView

23
00:00:58,140 --> 00:01:01,469
在 onCreateView 中 Fragment填充器 UI

24
00:01:01,469 --> 00:01:03,448
挂接所需的任何数据源

25
00:01:03,450 --> 00:01:06,600
然后将创建的视图返回到 HostActivity

26
00:01:06,599 --> 00:01:08,429
此外 在 HostActivity 被摧毁之前

27
00:01:08,430 --> 00:01:11,190
可以调用相应的 onDestroyView

28
00:01:11,188 --> 00:01:12,419
回调

29
00:01:12,420 --> 00:01:14,280
通过这些额外的回调 Fragment

30
00:01:14,280 --> 00:01:16,858
实际上可以在 HostActivity 运行期间

31
00:01:16,858 --> 00:01:19,949
多次循环其整个生命周期

32
00:01:19,950 --> 00:01:22,198
接下来 你将更详细地了解 Fragment

33
00:01:22,200 --> 00:01:25,370
生命周期 并在练习中检验你所学的知识

