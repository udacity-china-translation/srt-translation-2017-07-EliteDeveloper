1
00:00:00,500 --> 00:00:01,730
刚发生了什么？

2
00:00:01,730 --> 00:00:03,919
回到我们的图中 我们实际上

3
00:00:03,919 --> 00:00:05,330
需要添加一个部分 -

4
00:00:05,330 --> 00:00:07,740
Firebase 控制台

5
00:00:07,740 --> 00:00:09,439
当你输入所有正确的信息后

6
00:00:09,439 --> 00:00:11,660
Firebase 控制台会将这些信息打包

7
00:00:11,660 --> 00:00:15,620 
然后发送给 FCM 服务器

8
00:00:15,618 --> 00:00:18,884
数据打包的方式就像这样

9
00:00:18,885 --> 00:00:21,260
注意还有附加的一些信息

10
00:00:21,260 --> 00:00:23,870
所以这里简化了

11
00:00:23,870 --> 00:00:26,179
这就是我们所说的通知消息

12
00:00:26,178 --> 00:00:28,538
我们稍后再详细说它的意义

13
00:00:28,539 --> 00:00:30,164
现在我想提的一点是

14
00:00:30,164 --> 00:00:32,240
你可能认识右边的这个代码

15
00:00:32,240 --> 00:00:35,376
在 Android 中 它用于发出通知

16
00:00:35,375 --> 00:00:37,250
注意 你实际并不需要在 Android 应用中

17
00:00:37,250 --> 00:00:39,439
编写此代码

18
00:00:39,439 --> 00:00:42,838
这是因为接受来自 FCM 的 ping

19
00:00:42,840 --> 00:00:45,920
然后将其转化为一条通知（这会打开你的应用）

20
00:00:45,920 --> 00:00:49,579
是 FCM SDK 中内置的一个功能

21
00:00:49,579 --> 00:00:51,198
现在使用 Firebase 控制台

22
00:00:51,200 --> 00:00:53,780
你也可以随消息发送一点

23
00:00:53,780 --> 00:00:55,460
额外数据

24
00:00:55,460 --> 00:00:58,609
在这条消息中 额外数据的键为 test

25
00:00:58,609 --> 00:01:00,439
值为 Lyla

26
00:01:00,439 --> 00:01:02,838
这个额外的数据将与其余消息一起

27
00:01:02,840 --> 00:01:06,049
从控制台传递到 FCM 服务器

28
00:01:06,049 --> 00:01:08,368
然后转而发送到你的应用

29
00:01:08,370 --> 00:01:11,200
设备上自动生成的通知会使用 intent

30
00:01:11,200 --> 00:01:13,909
打开 Activity

31
00:01:13,909 --> 00:01:16,939
而正是此 intent 包含你随消息

32
00:01:16,938 --> 00:01:18,898
一起发送的额外数据

33
00:01:18,900 --> 00:01:21,500
好的 我们来看看实际操作

34
00:01:21,500 --> 00:01:24,650
如果我位于控制台 我可以前往这里创建一条新消息

35
00:01:24,650 --> 00:01:29,300
我要输入 "Hello world again"

36
00:01:29,299 --> 00:01:33,509
发送日期继续保持为 now 然后选择我的 Squawker 应用

37
00:01:33,510 --> 00:01:36,829
然后我向下到高级选项

38
00:01:36,828 --> 00:01:39,259
在这里的自定义数据区域

39
00:01:39,260 --> 00:01:42,260
我可以添加我想要的任何键值对

40
00:01:42,260 --> 00:01:45,140
我将添加键为 test 值为我的名字

41
00:01:45,140 --> 00:01:47,570
的键值对

42
00:01:47,569 --> 00:01:52,099
现在前往我的客户端应用 我位于 MainActivity 中

43
00:01:52,099 --> 00:01:54,679
我可以向下滚动到 onCreate

44
00:01:54,680 --> 00:01:58,190
然后从启动此 Activity 的 intent

45
00:01:58,188 --> 00:02:00,298
抓取该包

46
00:02:00,299 --> 00:02:03,560
如果包含额外数据的包实际存在

47
00:02:03,560 --> 00:02:09,468
也就是说它不为 null 并包含键 test

48
00:02:09,468 --> 00:02:11,400
那么我将在这里写一个 log 语句

49
00:02:11,400 --> 00:02:13,691
它会获取包含的与键一起的值

50
00:02:13,691 --> 00:02:15,490
并将其打印出来

51
00:02:15,490 --> 00:02:18,106
那么接下来我运行应用

52
00:02:18,104 --> 00:02:20,538
好的 我运行了应用 然后要确保

53
00:02:20,538 --> 00:02:21,849
它位于后台

54
00:02:21,849 --> 00:02:24,348
然后我将发送包含那点

55
00:02:24,348 --> 00:02:26,899
自定义数据的消息

56
00:02:26,900 --> 00:02:29,270
可以看到通知跳了出来

57
00:02:29,270 --> 00:02:32,020
然后 看看我的代码的日志输出

58
00:02:32,020 --> 00:02:33,920
我将点击通知

59
00:02:33,919 --> 00:02:36,769
现在在 MainActivity 中可以看到

60
00:02:36,770 --> 00:02:39,890
我们打印出了包含 Lyla 的 log 语句

61
00:02:39,889 --> 00:02:43,069
所以你可以看到 intent 的确

62
00:02:43,068 --> 00:02:44,458
从服务器传递了该额外数据

63
00:02:44,460 --> 00:02:45,590
棒极了

64
00:02:45,590 --> 00:02:47,240
现在页面上展示的是我

65
00:02:47,240 --> 00:02:49,520
在编写应用代码 用来检测

66
00:02:49,520 --> 00:02:54,480
打开应用的 intent 是否来自 FCM

67
00:02:54,479 --> 00:02:57,169
如果我想 我可以让应用

68
00:02:57,169 --> 00:02:59,808
在从 FCM 通知或从其他地方启动的情况下

69
00:02:59,810 --> 00:03:01,775
做出不同的反应

70
00:03:01,775 --> 00:03:04,400
如果我想的话 我也可以获取此额外数据 并以

71
00:03:04,400 --> 00:03:05,819
某种方式处理它

72
00:03:05,818 --> 00:03:07,188
好的 现在轮到你了

73
00:03:07,188 --> 00:03:10,468
如果你做第二个练习 则可以自己试试这个

