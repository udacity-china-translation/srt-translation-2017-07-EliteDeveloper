1
00:00:00,000 --> 00:00:03,000
现在你们已经完成了关于阶乘的小练习

2
00:00:03,000 --> 00:00:06,000
你们可能觉得自己应该休息一下了——也差不多了

3
00:00:06,000 --> 00:00:10,000
但是关于 while 循环我们还要学习一点内容

4
00:00:10,000 --> 00:00:12,000
那就是 break (中断) 语句

5
00:00:12,000 --> 00:00:17,000
break 能让我们中断循环

6
00:00:17,000 --> 00:00:18,000
即使当测试条件为真时

7
00:00:18,000 --> 00:00:21,000
下面是有 break 的循环的典型结构

8
00:00:21,000 --> 00:00:25,000
和之前一样 先是 while 然后是判断表达式

9
00:00:25,000 --> 00:00:27,000
然后是一个冒号

10
00:00:27,000 --> 00:00:30,000
一般的 while 结构 在这里有一个程序块

11
00:00:30,000 --> 00:00:34,000
现在我们想看看这个程序块的里面

12
00:00:34,000 --> 00:00:35,000
到底可以是些什么

13
00:00:35,000 --> 00:00:38,000
下面是程序块里面内容的一个例子

14
00:00:38,000 --> 00:00:41,000
一些代码 一些 Python 语句

15
00:00:41,000 --> 00:00:42,000
然后是一个 if 语句

16
00:00:42,000 --> 00:00:45,000
然后是另一个判断表达式

17
00:00:45,000 --> 00:00:46,000
我们称其为 break test (中断测试) 

18
00:00:46,000 --> 00:00:49,000
也就是用一个文本表达式 来检查是否到了中断的时候

19
00:00:49,000 --> 00:00:55,000
当 break test 为真  我们就执行 break

20
00:00:55,000 --> 00:00:57,000
这就是我们所需要的

21
00:00:57,000 --> 00:01:00,000
break 意味着停止执行 while 循环

22
00:01:00,000 --> 00:01:03,000
跳出 while 循环 继续之后的代码

23
00:01:03,000 --> 00:01:07,000
也就是 while 程序块里的 more code (更多代码) 

24
00:01:07,000 --> 00:01:12,000
我们会跳过这些代码

25
00:01:12,000 --> 00:01:13,000
直接跳到 while 之后的代码

26
00:01:13,000 --> 00:01:17,000
所以 当我们运行一个有 break 的循环时

27
00:01:17,000 --> 00:01:19,000
其实就像运行一个正常的循环

28
00:01:19,000 --> 00:01:21,000
如果判断表达式为真 我们就执行这些代码

29
00:01:21,000 --> 00:01:25,000
如果 break test 为假 我们就不执行 break

30
00:01:25,000 --> 00:01:28,000
继续执行之后的 more code

31
00:01:28,000 --> 00:01:32,000
我们可以回到循环判断 再次检验判断表达式

32
00:01:32,000 --> 00:01:35,000
如果为真 我们就运行这些代码 

33
00:01:35,000 --> 00:01:38,000
如果 break 为真  我们就执行 break

34
00:01:38,000 --> 00:01:41,000
也就是跳出该循环

35
00:01:41,000 --> 00:01:44,000
不执行 more code 不再执行判断表达式

36
00:01:44,000 --> 00:01:49,000
如果 break 发生  我们就跳到 while 之后的代码

37
00:01:49,000 --> 00:01:52,000
这让我们可以从循环中间跳出来

38
00:01:52,000 --> 00:01:54,000
下面是一个运用的实例

39
00:01:54,000 --> 00:01:58,000
之前我们定义 print numbers (打印数字) 没有使用 break

40
00:01:58,000 --> 00:02:00,000
我们是这么定义的

41
00:02:00,000 --> 00:02:01,000
这是我们之前写的编码

42
00:02:01,000 --> 00:02:04,000
我们可以使用 break 再写一遍

43
00:02:04,000 --> 00:02:07,000
现在 我们不用 while test (while判断) 来终止循环

44
00:02:07,000 --> 00:02:08,000
我们让 while test 为True (真) 

45
00:02:08,000 --> 00:02:13,000
True 永远不会为假——也就是说 如果没有 break

46
00:02:13,000 --> 00:02:16,000
该循环会永远执行下去  但是我们将加上一个 break

47
00:02:16,000 --> 00:02:20,000
我们将使用一个 if test (如果判断) 条件是

48
00:02:20,000 --> 00:02:23,000
一旦 i 大于 n 循环就终止

49
00:02:23,000 --> 00:02:25,000
终止的方式就是使用 break

50
00:02:25,000 --> 00:02:28,000
如果 i 不大于 n 我们就继续

51
00:02:28,000 --> 00:02:33,000
我们将打印 i 并让 i 加上1——这和之前是一样的

52
00:02:33,000 --> 00:02:37,000
该循环的意义和之前也是完全一样的

53
00:02:37,000 --> 00:02:40,000
前一种从各方面来说都要好一些

54
00:02:40,000 --> 00:02:42,000
这个更为复杂

55
00:02:42,000 --> 00:02:43,000
用了更多的编码

56
00:02:43,000 --> 00:02:45,000
但是这展示了我们可以怎样利用 break

57
00:02:45,000 --> 00:02:47,000
我们不会想要这么写

58
00:02:47,000 --> 00:02:48,000
这个没有前一个好

59
00:02:48,000 --> 00:02:50,000
我们希望编码简单 易于理解

60
00:02:50,000 --> 00:02:53,000
当我们要提取页面上的所有链接时

61
00:02:53,000 --> 00:02:56,000
我们就会看到 有些时候

62
00:02:56,000 --> 00:02:58,000
用 break 写代码要更为简单

63
00:02:58,000 --> 00:03:01,000
现在我们将进行一个小练习

64
00:03:01,000 --> 00:03:02,000
看你们是否掌握了 while 循环和 break

65
00:03:02,000 --> 00:03:05,000
这个练习比较难

66
00:03:05,000 --> 00:03:09,000
你们必须仔细思考 while 循环的定义和 break 的意义

67
00:03:09,000 --> 00:03:13,000
问题是 下面哪一个总是等同于

68
00:03:13,000 --> 00:03:19,000
while 任何判断表达式 T 程序块——任何语句 S

69
00:03:19,000 --> 00:03:23,000
T 和 S 可以是任何编码

70
00:03:23,000 --> 00:03:25,000
你们的问题是 下面哪一个等同于该 while

71
00:03:25,000 --> 00:03:27,000
下面是四个选项

72
00:03:27,000 --> 00:03:30,000
选项一的 while 循环有一个嵌套 if

73
00:03:30,000 --> 00:03:33,000
选项二的 while 循环有 S 语句和一个 break

74
00:03:33,000 --> 00:03:36,000
选项三的 while 循环有一个嵌套 if

75
00:03:36,000 --> 00:03:40,000
选项四的 while 循环有一个嵌套 if 一个 else 和一个 break

76
00:03:40,000 --> 00:03:44,000
你们的任务是找出所有与 while T S 等同的选项

77
00:03:44,000 --> 00:03:48,000
这里的 T 和 S

78
00:03:48,000 --> 99:59:59,000
可以是任何判断表达式和任何语句

