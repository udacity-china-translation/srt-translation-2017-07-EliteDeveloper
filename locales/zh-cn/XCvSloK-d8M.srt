1
00:00:00,442 --> 00:00:02,149
此练习的目的

2
00:00:02,149 --> 00:00:04,129
是为我们添加到数据库中的每个地点

3
00:00:04,129 --> 00:00:07,939
创建一个地理围栏 然后注册这些地理围栏

4
00:00:07,939 --> 00:00:11,509
并开始侦听任何进入或退出触发器

5
00:00:11,509 --> 00:00:13,550
为了使一切整洁有序

6
00:00:13,550 --> 00:00:15,700
让我们把所有这些地理围栏逻辑放在一个类中

7
00:00:15,699 --> 00:00:18,320
我们称之为 Geofencing

8
00:00:18,320 --> 00:00:19,850
提醒一下 这个练习会

9
00:00:19,850 --> 00:00:22,160
感觉比较长 而且有很多步骤

10
00:00:22,160 --> 00:00:26,219
要完成 但所有这些步骤相辅相成

11
00:00:26,219 --> 00:00:28,349
所以我们一步一步来

12
00:00:28,350 --> 00:00:31,310
做好每一步之后 再将它们整合在一起

13
00:00:31,309 --> 00:00:33,719
就可以见证奇迹的发生了

14
00:00:33,719 --> 00:00:36,049
先来概述一下我们要建造的东西

15
00:00:36,049 --> 00:00:39,829
首先 我们需要使用它们的经度和纬度以及预定义的半径

16
00:00:39,829 --> 00:00:43,009
构建 Geofence 对象

17
00:00:43,009 --> 00:00:45,920
然后我们将所有这些地理围栏存储在一个列表中

18
00:00:45,920 --> 00:00:48,289
并注册这些地理围栏

19
00:00:48,289 --> 00:00:51,350
要注册它们 我们需要从该地理围栏列表

20
00:00:51,350 --> 00:00:54,560
创建一个 Geofence Request 对象

21
00:00:54,560 --> 00:00:56,150
我们还需要一个 Pending Intent 

22
00:00:56,149 --> 00:00:59,629
它将指定在地理围栏进入或退出事件触发时

23
00:00:59,630 --> 00:01:01,820
启动哪个 intent

24
00:01:01,820 --> 00:01:05,150
在我们的具体例子中 我们将在 Pending Intent 中使用

25
00:01:05,150 --> 00:01:06,859
一个 BroadcastReceiver

26
00:01:06,859 --> 00:01:09,530
这意味着每当设备进入或退出

27
00:01:09,530 --> 00:01:11,799
任何地理围栏时 我们

28
00:01:11,799 --> 00:01:14,909
BroadcastReceiver 中的 onReceive 方法就会运行

29
00:01:14,909 --> 00:01:17,869
以便我们在那里实现所有逻辑

30
00:01:17,870 --> 00:01:19,790
所有这些组件就绪后

31
00:01:19,790 --> 00:01:21,790
我们传入 Geofence Request 和

32
00:01:21,790 --> 00:01:25,190
Pending Intent 对象来开始注册

33
00:01:25,189 --> 00:01:26,569
地理围栏

34
00:01:26,569 --> 00:01:29,839
与此一起 我们将添加在第一个练习中

35
00:01:29,840 --> 00:01:32,719
创建的 Google API 客户端

36
00:01:32,719 --> 00:01:34,879
完成这些后 耶！

37
00:01:34,879 --> 00:01:36,319
你就可以让你的设备进入

38
00:01:36,319 --> 00:01:39,919
创建的任何地理围栏 然后见证魔力的发生了

39
00:01:39,920 --> 00:01:43,260
记住这些设置后 让我们开始编写代码吧

40
00:01:43,260 --> 00:01:47,000
首先 创建 Geofencing 类

41
00:01:47,000 --> 00:01:51,109
添加上下文和 Google API 客户端

42
00:01:51,109 --> 00:01:54,079
并在构造函数中引用它们

43
00:01:54,079 --> 00:01:56,929
我还添加了一个 GeofencePendingIntent 成员

44
00:01:56,930 --> 00:01:59,540
变量以及一个 GeofenceList 变量

45
00:01:59,540 --> 00:02:01,700
我们将在稍后使用

46
00:02:01,700 --> 00:02:05,210
尽管导入所需的任何类

47
00:02:05,209 --> 00:02:09,310
然后实现一个叫做 updateGeofencesList 的方法

48
00:02:09,310 --> 00:02:12,770
对于此方法 （例如）给定地点缓冲区 

49
00:02:12,770 --> 00:02:15,790
它会遍历其中的所有位置 并且对于每个位置

50
00:02:15,789 --> 00:02:19,459
它会创建一个 Geofence 对象并将它添加到列表中

51
00:02:19,460 --> 00:02:21,320
要创建 Geofence 对象 你需要

52
00:02:21,319 --> 00:02:26,310
调用 geofence.builder 并在这里进行一些设置

53
00:02:26,310 --> 00:02:30,469
首先 你需要为此地理围栏设置一个唯一 ID

54
00:02:30,469 --> 00:02:33,770
我们直接使用来自 Places API 的

55
00:02:33,770 --> 00:02:37,700
位置唯一 ID 这将确保每个位置的 ID 都是唯一的

56
00:02:37,699 --> 00:02:39,619
然后我们需要设置一个以毫秒为单位

57
00:02:39,620 --> 00:02:41,420
的到期时间

58
00:02:41,419 --> 00:02:44,046
我决定在这里将它设为 24 小时

59
00:02:44,046 --> 00:02:46,129
这意味着如果此地理围栏未在 24 小时内

60
00:02:46,129 --> 00:02:48,599
重新注册 定位服务将

61
00:02:48,599 --> 00:02:51,019
删除此地理围栏

62
00:02:51,020 --> 00:02:53,480
注意 你实际上可以将它设为常量

63
00:02:53,479 --> 00:02:55,789
NEVER_EXPIRE

64
00:02:55,789 --> 00:02:57,500
但是也要谨慎 因为这意味着

65
00:02:57,500 --> 00:02:59,689
此地理围栏将永远留在这里

66
00:02:59,689 --> 00:03:01,579
即使你卸载应用

67
00:03:01,580 --> 00:03:03,530
所以如果你决定使用此常量

68
00:03:03,530 --> 00:03:07,699
作为到期时间 则一定要非常小心

69
00:03:07,699 --> 00:03:11,299
由于我们对一个生产质量式应用

70
00:03:11,300 --> 00:03:14,890
使用 24 小时生命周期 你应该设置一个 JobScheduler

71
00:03:14,889 --> 00:03:17,750
并每天重新注册地理围栏

72
00:03:17,750 --> 00:03:19,699
但是对于此玩具应用

73
00:03:19,699 --> 00:03:23,449
我们暂时主要重点在于获取此功能

74
00:03:23,449 --> 00:03:25,549
接下来 我们需要根据经度和

75
00:03:25,550 --> 00:03:30,430
纬度中心设置区域 以及以米为单位的半径

76
00:03:30,430 --> 00:03:32,750
这里我将半径设为 50 米

77
00:03:32,750 --> 00:03:35,360
这对我们的用途来说是一个合理的值

78
00:03:35,360 --> 00:03:38,930
最后 我们还需要转换类型

79
00:03:38,930 --> 00:03:41,840
由于我们在进入和退出转换时

80
00:03:41,840 --> 00:03:45,409
都要做出反应 两个都需要注册

81
00:03:45,409 --> 00:03:48,289
Geofence 对象构建好后

82
00:03:48,289 --> 00:03:51,049
我们只需将它添加到 ArrayList

83
00:03:51,050 --> 00:03:52,430
最后一步 确保你导入了

84
00:03:52,430 --> 00:03:54,500
所有必要的类

85
00:03:54,500 --> 00:03:55,669
这就好了

86
00:03:55,669 --> 00:03:59,099
现在我们有了这个地理围栏列表 在下一个视频中

87
00:03:59,099 --> 00:04:02,039
我们将设置这些地理围栏 使它们在发生

88
00:04:02,039 --> 00:04:04,539
事务时触发 BroadcastReceiver

