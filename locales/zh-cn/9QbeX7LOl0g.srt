1
00:00:00,000 --> 00:00:07,000
Raymond 有个问题 处理使用非美国字母字符的问题

2
00:00:07,000 --> 00:00:12,000
当他第一次以西班牙文写程序时 使用了文字 并使用 Python 来执行

3
00:00:12,000 --> 00:00:17,000
他得到了一个 error —— 语法错误 "非 ASCII 字符"

4
00:00:17,000 --> 00:00:23,000
在 IDE 执行相同的代码 并不会得到这个错误它运作正常

5
00:00:23,000 --> 00:00:28,000
他更改编码 (encoding) 以解决这个问题

6
00:00:28,000 --> 00:00:33,000
所以 当我们创建搜索引擎时 它会扫描不同语言的页面

7
00:00:33,000 --> 00:00:39,000
可能使用了不同的语言页面 我们应如何改变我们的代码

8
00:00:39,000 --> 00:00:46,000
这样 它就不会有编码的问题？我们预设的字符集应该是什么？

9
00:00:46,000 --> 00:00:49,000
谢谢你的问题 Raymond 谈到这个观点真的很好

10
00:00:49,000 --> 00:00:54,000
当你采取的输入 包括了多个语言 不仅是英语时

11
00:00:54,000 --> 00:00:56,000
字符集是不同的

12
00:00:56,000 --> 00:00:59,000
如果你看一个网页 网页有一个标题

13
00:00:59,000 --> 00:01:02,000
标题识别了它使用的字符集

14
00:01:02,000 --> 00:01:07,000
这是 HTTP 协定的一部分 要有标题 描述内容的类型

15
00:01:07,000 --> 00:01:09,000
包含字符集

16
00:01:09,000 --> 00:01:12,000
字符集可以从一些不同的字符集中选择

17
00:01:12,000 --> 00:01:15,000
最普遍的一种称为 UTF-8

18
00:01:15,000 --> 00:01:21,000
它使用编码字符的方式 可以使简单的字符

19
00:01:21,000 --> 00:01:23,000
以仅仅 7 个比特 (bit) 来编码

20
00:01:23,000 --> 00:01:27,000
这被称为 ASCII 字符集

21
00:01:27,000 --> 00:01:29,000
这些都是在英文中常见的字符

22
00:01:29,000 --> 00:01:32,000
它不包括在其他语言中 使用的所有字符

23
00:01:32,000 --> 00:01:37,000
但是 这些 7 比特的字符 能以少量的空间进行编码

24
00:01:37,000 --> 00:01:41,000
在 Python 里的标准字符串 其使用的标准都是 ASCII

25
00:01:41,000 --> 00:01:43,000
每个字符是一个位元组 (byte)

26
00:01:43,000 --> 00:01:48,000
仅有 255 个可能的字符 可以在 1 个位元组 (byte) 做编码

27
00:01:48,000 --> 00:01:53,000
如果你想要处理更多的语言 你需要使用不同的字符

28
00:01:53,000 --> 00:01:55,000
要做到这一点的方法称为 Unicode

29
00:01:55,000 --> 00:01:59,000
Unicode 是一种字符集 可以支持大量的字符

30
00:01:59,000 --> 00:02:02,000
它实际上是一种编码字符的方法

31
00:02:02,000 --> 00:02:04,000
没有限制你可以支持多少字符

32
00:02:04,000 --> 00:02:08,000
有一种编码方式 当字符少时 其效率高

33
00:02:08,000 --> 00:02:12,000
但仍允许你编码数量大的字符 称为 UTF-8

34
00:02:12,000 --> 00:02:15,000
这为大多数 web 浏览器所使用

35
00:02:15,000 --> 00:02:20,000
为了在 Python 处理这个问题 你必须使用 Unicode 字符串 而不是标准字符串

36
00:02:20,000 --> 00:02:23,000
有一个内置类型的 Unicode 字符

37
00:02:23,000 --> 00:02:26,000
你可以透过使用 Unicode 将字符串转换为 Unicode

38
00:02:26,000 --> 00:02:30,000
然后有其他字符集 有方法来编码 Unicode

39
00:02:30,000 --> 00:02:34,000
如果你想要建立一个搜索引擎 可以处理文字中 没有使用标准的英文字符集

40
00:02:34,000 --> 00:02:38,000
你一定要小心处理 Unicode

41
00:02:38,000 --> 00:02:41,000
和所有这些不同的字符编码