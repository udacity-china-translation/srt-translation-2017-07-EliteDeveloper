1
00:00:00,000 --> 00:00:05,000
答案是 我们可以定义函数 replace_spy

2
00:00:05,000 --> 00:00:07,000
输入一个参数

3
00:00:07,000 --> 00:00:10,000
称之为参数 p

4
00:00:10,000 --> 00:00:14,000
当然 将其命名为 spy 可能更加合理

5
00:00:14,000 --> 00:00:19,000
但为了避免和变量 spy 混淆 这里将该参数命名为 p

6
00:00:19,000 --> 00:00:22,000
至于 replace_spy 函数的主体 我们想要改变

7
00:00:22,000 --> 00:00:25,000
传入参数位置2的原始值

8
00:00:25,000 --> 00:00:28,000
可以通过用赋值语句来解决

9
00:00:28,000 --> 00:00:32,000
我们在左侧选择位置 然后我们将其用

10
00:00:32,000 --> 00:00:37,000
原来在那个位置的值加1替代

11
00:00:37,000 --> 00:00:41,000
这是我们想看到的情况 为了加强理解

12
00:00:41,000 --> 00:00:46,000
来看一下 传值进过程会出现什么情况

13
00:00:46,000 --> 00:00:48,000
这是过程调用之前

14
00:00:48,000 --> 00:00:51,000
初始化变量 spy 是一个列表

15
00:00:51,000 --> 00:00:55,000
包括三个元素 0 0 7

16
00:00:55,000 --> 00:00:59,000
然后 我们调用 replace_spy 传入 spy

17
00:00:59,000 --> 00:01:04,000
调用过程中 函数中的变量名

18
00:01:04,000 --> 00:01:07,000
现在指代传入的对象

19
00:01:07,000 --> 00:01:12,000
参数 p 现在指代该对象

20
00:01:12,000 --> 00:01:15,000
之后我们进行赋值

21
00:01:15,000 --> 00:01:20,000
将 p 位置2元素的值加1

22
00:01:20,000 --> 00:01:23,000
变成8

23
00:01:23,000 --> 00:01:28,000
参数 p 和变量 spy 都指代同一个对象

24
00:01:28,000 --> 00:01:31,000
所以 spy 的值也有所改变

25
00:01:31,000 --> 00:01:33,000
注意这里并没有返回语句

26
00:01:33,000 --> 00:01:35,000
我们不需要返回新值

27
00:01:35,000 --> 00:01:39,000
我们改变了传入列表的值

28
00:01:39,000 --> 00:01:44,000
我想强调 这与其他过程情况不同

29
00:01:44,000 --> 00:01:50,000
早前我们做过一个练习 定义过程 inc

30
00:01:50,000 --> 00:01:55,000
输入参数为 n 在过程里把 n 加1

31
00:01:55,000 --> 00:01:58,000
如果我们去掉 inc 的返回语句

32
00:01:58,000 --> 00:02:00,000
则传入的值不会发生变化

33
00:02:00,000 --> 00:02:03,000
这是因为

34
00:02:03,000 --> 00:02:08,000
假定有这样的代码 有变量 a

35
00:02:08,000 --> 00:02:14,000
值为3 调用 inc 并把 a 作为输入参数

36
00:02:14,000 --> 00:02:22,000
那变量 a 的值为3

37
00:02:22,000 --> 00:02:25,000
我们将 a 传入 inc

38
00:02:25,000 --> 00:02:32,000
会见到和之前变量 p 传入 replace_spy 相同的情况

39
00:02:32,000 --> 00:02:37,000
n 的值和 a 一样

40
00:02:37,000 --> 00:02:40,000
但是我们不能对这个值进行变化

41
00:02:40,000 --> 00:02:43,000
inc 本身带有赋值语句

42
00:02:43,000 --> 00:02:47,000
n = n + 1

43
00:02:47,000 --> 00:02:50,000
改变了 n 的值

44
00:02:50,000 --> 00:02:58,000
现在 n 的值为4 但是 a 的值不变

45
00:02:58,000 --> 00:03:00,000
仍为3

46
00:03:00,000 --> 00:03:04,000
所以我们不能改变数字的值

47
00:03:04,000 --> 00:03:10,000
如果数字的值能改的话 所有的3都会变成4

48
00:03:10,000 --> 99:59:59,000
这会造成极大的困惑

