1
00:00:00,002 --> 00:00:01,004
下面是解决方案

2
00:00:01,004 --> 00:00:05,006
我们会增加一个 if 因为我们想要做决定

3
00:00:05,006 --> 00:00:06,006
我们想要一个判断

4
00:00:06,006 --> 00:00:09,009
如果 start_link (开始链接) 等于-1

5
00:00:09,009 --> 00:00:14,004
也就是说 我们没有找到我们所搜寻的

6
00:00:14,003 --> 00:00:17,009
find (搜寻) 返回-1 所以 start_link 的值为-1

7
00:00:17,009 --> 00:00:21,001
我们不想继续下去 因为没有可搜寻的 url (网址) 

8
00:00:21,001 --> 00:00:25,001
我们想要返回特殊值 None (无) 和0

9
00:00:25,001 --> 00:00:26,007
这是要做的改变

10
00:00:26,007 --> 00:00:30,007
当输入的字符串不包含链接 运行代码

11
00:00:30,007 --> 00:00:34,999
我们得到的 url 的输出为 None

12
00:00:34,999 --> 00:00:38,000
我们不知道这是否是一个字符串 但至少和字符串不同

13
00:00:38,000 --> 00:00:43,000
我们处理 None 和处理 False 类似

14
00:00:43,000 --> 00:00:46,003
如果if语句里测试表达式的值为 None

15
00:00:46,003 --> 00:00:48,004
那就按和 False 相同的方式来处理

16
00:00:48,005 --> 00:00:52,002
如果 url 返回的是 None 我们将打印 Not here (不在这儿) 

17
00:00:52,002 --> 00:00:54,003
表示 代码运行到这儿 但这儿没有网址

18
00:00:54,003 --> 00:00:57,006
当传入的字符串不包含链接标签

19
00:00:57,006 --> 00:01:00,003
我们看到的输出是 Not here

20
00:01:00,003 --> 00:01:03,000
如果我们回到包含链接标签的字符串

21
00:01:03,000 --> 00:01:09,007
然后运行代码 这时 url 就是当成 True (真) 处理的字符串

22
00:01:09,007 --> 00:01:12,999
然后打印 Here (在这儿) 

23
00:01:12,001 --> 00:01:17,002
所以判断条件并不一定是 True 或 False

24
00:01:17,001 --> 00:01:20,999
Python 会将不同的值解释为 True 和 False

25
00:01:20,001 --> 00:01:25,004
重点是 除了空字符串 任何字符串的值都当做 True 来处理

26
00:01:25,004 --> 00:01:27,008
然后我们将执行 if 的这一部分

27
00:01:27,007 --> 00:01:31,007
None 的值则当做 False 处理 然后跳到 else

