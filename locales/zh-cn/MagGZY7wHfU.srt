1
00:00:00,019 --> 00:00:02,082
休息结束了 你们也了解了 break(中断)

2
00:00:02,081 --> 00:00:04,025
你们知道 while 循环

3
00:00:04,025 --> 00:00:06,080
知道使用 if 来做决定

4
00:00:06,080 --> 00:00:08,013
你们所学的

5
00:00:08,013 --> 00:00:10,070
已足够完成今天的课程目标

6
00:00:10,070 --> 00:00:14,025
那就是 编写代码

7
00:00:14,025 --> 00:00:15,041
从一个网页上提取所有的 URL (网址) 

8
00:00:15,041 --> 00:00:18,056
首先 我们来回顾一下之前学过的内容

9
00:00:18,056 --> 00:00:20,086
我们写过这样的代码

10
00:00:20,085 --> 00:00:22,083
能不断提取一个又一个链接

11
00:00:22,083 --> 00:00:26,056
代码是这样的：find (搜寻) start_link (开始链接) 

12
00:00:26,056 --> 00:00:29,027
在输入这些代码之前 我们假定

13
00:00:29,027 --> 00:00:32,036
page (页面) 含有一些网页的内容

14
00:00:32,036 --> 00:00:35,060
我们将搜寻一个链接的开始

15
00:00:35,060 --> 00:00:37,091
然后我们将找到 start_quote (开始引用) 

16
00:00:37,091 --> 00:00:40,001
再次使用 find (搜寻) 

17
00:00:40,002 --> 00:00:42,082
但这次传入的是 tag (标签) 的开始

18
00:00:42,082 --> 00:00:45,011
搜寻双引号

19
00:00:45,011 --> 00:00:47,082
然后我们会找到 end_quote (结束引用) 

20
00:00:47,082 --> 00:00:52,085
然后我们将利用 string selection (字符串选择) 来提取 URL

21
00:00:52,085 --> 00:00:54,060
从 page 中选择

22
00:00:54,060 --> 00:01:01,024
从 start_quote 到 end_quote

23
00:01:01,024 --> 00:01:04,001
然后 我们将打印出 URL

24
00:01:04,001 --> 00:01:08,021
这是提取一个 URL 所要做的

25
00:01:08,021 --> 00:01:11,072
我们将继续搜索余下内容

26
00:01:11,072 --> 00:01:14,051
从 end_quote 一直到结束

27
00:01:14,051 --> 00:01:19,013
然后我们将重复所有这些来搜寻下一个 URL

28
00:01:19,013 --> 00:01:22,036
我们将一遍遍重复这些代码

29
00:01:22,036 --> 00:01:25,040
搜寻页面上所有的 URL

30
00:01:25,040 --> 00:01:29,001
这是代码  缩小一点以便我们有更多空间

31
00:01:29,001 --> 00:01:33,075
我们想要将其提取为一个过程

32
00:01:33,075 --> 00:01:36,098
这一部分

33
00:01:36,099 --> 00:01:39,001
我们想要让其不断运行

34
00:01:39,001 --> 00:01:41,056
while 循环能够让编码不断运行

35
00:01:41,055 --> 00:01:45,042
所以 我们将写一个 while 循环 不断搜寻链接

36
00:01:45,042 --> 00:01:47,001
直到页面结束

37
00:01:47,001 --> 00:01:48,066
我们要讲的第一点是

38
00:01:48,066 --> 00:01:50,031
如何提取这一过程

39
00:01:50,031 --> 00:01:52,048
我们要做一些改变

40
00:01:52,049 --> 00:01:54,026
让代码在 while 循环中能很好地运行

41
00:01:54,025 --> 00:01:57,018
我们定义了一个过程 get_next_target (获取下一目标) 

42
00:01:57,019 --> 00:01:59,044
其输入为 page

43
00:01:59,043 --> 00:02:03,013
之后是和这里完全一样的编码

44
00:02:03,013 --> 00:02:07,043
除了在最后 程序将返回url

45
00:02:07,043 --> 00:02:08,084
以及 end_quote 的值

46
00:02:16,003 --> 00:02:17,088
我们之前有过一个小练习

47
00:02:17,088 --> 00:02:21,086
所以你们知道 get_next_target

48
00:02:21,086 --> 00:02:26,021
会返回 url 和 end_quote

49
00:02:26,020 --> 00:02:29,095
这是所找到的引用结束的位置

50
00:02:29,096 --> 00:02:32,062
所以 我们需要这一过程返回两个值

51
00:02:32,062 --> 00:02:35,076
因为我们需要知道作为一个字符串的 url

52
00:02:35,075 --> 00:02:38,049
以及从哪里继续搜寻下一目标

53
00:02:38,049 --> 00:02:41,007
我们还没有用过能返回两个值的过程

54
00:02:41,007 --> 00:02:42,067
但其实要做到这一点是很方便的

55
00:02:42,067 --> 00:02:44,001
也很简单

56
00:02:44,001 --> 00:02:45,070
只要将两个值

57
00:02:45,070 --> 00:02:47,049
放在一个赋值语句的左边就行了

58
00:02:47,049 --> 00:02:49,091
这一般都是可行的

59
00:02:49,091 --> 00:02:52,046
赋值的简单规则是

60
00:02:52,045 --> 00:02:58,076
一个 Name (名称) 然后是等号

61
00:02:58,076 --> 00:03:01,084
然后是一个表达式

62
00:03:01,084 --> 00:03:05,003
这将把表达式的值赋给 Name

63
00:03:05,003 --> 00:03:08,052
左边可以有多个 Name

64
00:03:08,052 --> 00:03:11,012
右边可以有多个表达式

65
00:03:11,012 --> 00:03:13,002
这样我们就能进行多重赋值

66
00:03:13,002 --> 00:03:15,042
我们可以有任意数目的 Name

67
00:03:15,042 --> 00:03:18,026
由逗号隔开 然后是等号

68
00:03:18,026 --> 00:03:20,044
然后是任意数目的表达式

69
00:03:20,044 --> 00:03:22,066
也由逗号隔开

70
00:03:22,066 --> 00:03:26,007
只要 Name 的数目和表达式的数目相等

71
00:03:26,007 --> 00:03:32,056
第一个表达式的值将赋给 Name1

72
00:03:32,056 --> 00:03:33,019
所以这个 Name

73
00:03:33,019 --> 00:03:35,081
将是这个值

74
00:03:35,081 --> 00:03:39,015
第二个表达式的值将赋给 Name2

75
00:03:39,015 --> 00:03:46,051
比如 a, b = 1, 2

76
00:03:46,051 --> 00:03:50,075
将把1赋给 a

77
00:03:50,075 --> 00:03:53,051
把2赋给 b

78
00:03:53,051 --> 00:03:57,001
要让这一过程返回这两个值

79
00:03:57,001 --> 00:03:59,092
就需要两个变量在左边

80
00:03:59,092 --> 00:04:01,047
过程调用在右边

81
00:04:01,046 --> 00:04:04,067
其结构为 首先是 url

82
00:04:04,067 --> 00:04:06,079
我们将用这个变量来存放这个 URL

83
00:04:06,079 --> 00:04:08,021
然后是 endpos (结束位置) 

84
00:04:08,020 --> 00:04:10,088
我们将用这个变量来存放结束位置

85
00:04:10,088 --> 00:04:14,042
右边是 get_next_target

86
00:04:14,042 --> 00:04:15,091
传入 page

87
00:04:15,091 --> 00:04:19,074
这将返回两个值 像是列出两个表达式

88
00:04:19,074 --> 00:04:22,032
返回的第一个值将赋给 url

89
00:04:22,031 --> 00:04:25,038
返回的第二个值将赋给 endpos

90
00:04:25,038 --> 00:04:28,031
能在赋值语句的左边写多个变量

91
00:04:28,031 --> 00:04:30,043
这是非常有用的

92
00:04:30,043 --> 00:04:33,012
下面我们进行一个小练习 看一个多重赋值的例子

