1
00:00:00,570 --> 00:00:02,730
在 Activity 中创建媒体会话

2
00:00:02,730 --> 00:00:05,349
分为以下步骤

3
00:00:05,349 --> 00:00:09,330
第一步 创建一个 MediaSessionCompat 对象

4
00:00:09,330 --> 00:00:12,390
第二步 设置标志

5
00:00:12,390 --> 00:00:14,460
这些是你想要支持的功能

6
00:00:14,460 --> 00:00:17,880
第三步 设置可选的 Media Button Receiver

7
00:00:17,879 --> 00:00:19,259
组件

8
00:00:19,260 --> 00:00:20,730
在我们的例子中 我们将它设置为 null

9
00:00:20,730 --> 00:00:23,429
因为我们不希望媒体按钮在应用被停止后

10
00:00:23,429 --> 00:00:24,929
启用应用

11
00:00:24,929 --> 00:00:27,239
有关 Media Button Receiver 的详细信息

12
00:00:27,239 --> 00:00:29,729
请查看讲师注释中的链接

13
00:00:29,730 --> 00:00:34,500
第四步 设置可用操作和初始状态

14
00:00:34,500 --> 00:00:37,950
在我们的例子中 我们要启用“播放”、“暂停”和“跳到

15
00:00:37,950 --> 00:00:41,700
上一步”操作 以及“播放/暂停”切换

16
00:00:41,700 --> 00:00:44,560
第五步 设置回调

17
00:00:44,560 --> 00:00:47,190
第六步 启动会话

18
00:00:47,189 --> 00:00:48,989
第七步 在不再需要会话时

19
00:00:48,990 --> 00:00:50,969
结束会话

20
00:00:50,969 --> 00:00:53,280
除最后一步外 其他的步骤都要

21
00:00:53,280 --> 00:00:56,009
在首次创建 Activity 以初始化媒体会话时发生

22
00:00:56,009 --> 00:00:58,320
最后一步在 Activity 被摧毁以

23
00:00:58,320 --> 00:01:00,619
释放媒体会话时发生

24
00:01:00,619 --> 00:01:03,199
你会注意到 mySessionCallback 将

25
00:01:03,200 --> 00:01:05,659
红色高亮显示 因为你还未

26
00:01:05,659 --> 00:01:07,039
创建此类

27
00:01:07,040 --> 00:01:08,810
这是下一步操作

28
00:01:08,810 --> 00:01:12,019
创建 mySessionCallback 作为扩展

29
00:01:12,019 --> 00:01:15,039
MediaSessionCompat.Callback 的内部类

30
00:01:15,040 --> 00:01:17,540
覆盖对应于我们想要支持

31
00:01:17,540 --> 00:01:18,760
的操作的三个方法--

32
00:01:18,760 --> 00:01:23,270
onPlay、onPause 和 onSkipToPrevious

33
00:01:23,269 --> 00:01:25,729
这些是所有外部客户端在执行操作时

34
00:01:25,730 --> 00:01:27,746
将调用的回调

35
00:01:27,746 --> 00:01:30,079
我们现在需要确保无论应用是

36
00:01:30,079 --> 00:01:31,399
从内部客户端控制--

37
00:01:31,400 --> 00:01:34,609
简单的 ExoPlayer 视图 还是任何外部客户端--

38
00:01:34,609 --> 00:01:36,230
通过媒体会话

39
00:01:36,230 --> 00:01:38,780
ExoPlayer 和媒体会话

40
00:01:38,780 --> 00:01:42,269
都包含状态信息并保持同步

41
00:01:42,269 --> 00:01:44,549
我们从内部客户端开始

42
00:01:44,549 --> 00:01:46,349
简单的 ExoPlayer 视图按钮

43
00:01:46,349 --> 00:01:48,359
不会自动与媒体会话

44
00:01:48,359 --> 00:01:49,859
或其回调通信

45
00:01:49,859 --> 00:01:52,989
记住 你需要一个 MediaController 类用于此目的

46
00:01:52,989 --> 00:01:54,539
你需要确保当 UI

47
00:01:54,540 --> 00:01:58,380
的状态发生变化时 会更新媒体会话

48
00:01:58,379 --> 00:02:01,859
方法是使用 PlaybackStateCompat.builder 类

49
00:02:01,859 --> 00:02:05,219
构建一个 PlaybackStateCompat 对象

50
00:02:05,219 --> 00:02:07,310
然后使用 setPlaybackState 方法

51
00:02:07,310 --> 00:02:10,229
将它传入你的媒体会话

52
00:02:10,229 --> 00:02:13,670
你应在每次播放器状态发生变化时调用它

