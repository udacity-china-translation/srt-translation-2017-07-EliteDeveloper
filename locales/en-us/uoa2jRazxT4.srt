1
00:00:00,260 --> 00:00:01,850
So for all the same reasons,

2
00:00:01,850 --> 00:00:05,640
every time the interpreter visits the middle line of the carlike decorator,

3
00:00:05,640 --> 00:00:09,220
a new function will be generated as that car's .move method.

4
00:00:09,220 --> 00:00:12,630
Depending on how many cars we make, this could take up a lot of memory.

5
00:00:12,630 --> 00:00:16,810
But there's a slight advantage to putting the .move method inside the body of

6
00:00:16,810 --> 00:00:18,720
the carlike decorator function.

7
00:00:18,720 --> 00:00:22,870
Now that the .move function is being created every time,

8
00:00:22,870 --> 00:00:27,590
each one has access to a unique closure scope created when we invoke

9
00:00:27,590 --> 00:00:31,620
the carlike function, thus, we don't need to rely on the keyword, this, anymore.

10
00:00:31,620 --> 00:00:33,310
So refactor this code for me.

11
00:00:33,310 --> 00:00:36,480
Try to make it work such that the move method does not even refer to

12
00:00:36,480 --> 00:00:37,250
the parameter, this.

13
00:00:37,250 --> 00:00:41,260
It accomplishes all the same thing but without using the keyword, this.
